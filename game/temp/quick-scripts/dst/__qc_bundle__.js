
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/1_redpack/遊戲模塊/Guest4_ShakeRedpacket');
require('./assets/2_ropepack/遊戲模塊/Guest4_CatchRedpacket');
require('./assets/3_whack_a_mole/遊戲模塊/Guest4_Whack_a_mole');
require('./assets/3_whack_a_mole/遊戲模塊/Guest_MouseManager');
require('./assets/3_whack_a_mole/遊戲模塊/Host_MouseManager');
require('./assets/3_whack_a_mole/遊戲模塊/Host_RandomSpawn');
require('./assets/4._Q&A/程式碼/Guest1_WaitingForQuestion');
require('./assets/4._Q&A/程式碼/Guest2_Game');
require('./assets/4._Q&A/程式碼/Host1_ShowQuestion');
require('./assets/4._Q&A/程式碼/Host2_Game');
require('./assets/4._Q&A/程式碼/Host3_RankRecordItem');
require('./assets/4._Q&A/程式碼/Host3_ShowWinner');
require('./assets/5_lottery/程式/Host1_ComboBox');
require('./assets/5_lottery/程式/Host1_Congratulations');
require('./assets/5_lottery/程式/Host1_WeelShowWinner');
require('./assets/5_lottery/程式/Jiugongge');
require('./assets/5_lottery/程式/prizeInformation');
require('./assets/5_lottery/程式/weel');
require('./assets/TEST/NewScript');
require('./assets/TEST/ani');
require('./assets/共用模塊/Ani_Opacity');
require('./assets/共用模塊/Ani_Opacity_Bright');
require('./assets/共用模塊/Ani_Rotation');
require('./assets/共用模塊/Ani_UPandDOWN');
require('./assets/共用模塊/BackGround_Theme');
require('./assets/共用模塊/BeforeGameCountDown');
require('./assets/共用模塊/ColorString');
require('./assets/共用模塊/Guest1_ConfirmDeviceMotionEvent');
require('./assets/共用模塊/Guest1_JoinGame');
require('./assets/共用模塊/Guest1_PrizeInformation');
require('./assets/共用模塊/Guest2_WaitForStart');
require('./assets/共用模塊/Guest4_GameCountDown');
require('./assets/共用模塊/Guest4_GameCountDown_ShowTime');
require('./assets/共用模塊/Guest5_Prize');
require('./assets/共用模塊/Guest5_PrizeRecordItem');
require('./assets/共用模塊/Guest_rwdPlayer');
require('./assets/共用模塊/Host1_Begin');
require('./assets/共用模塊/Host3_GameTimeCountDown');
require('./assets/共用模塊/Host3_GameTimeCountDown_competition');
require('./assets/共用模塊/Host3_ShowNewWinner');
require('./assets/共用模塊/Host3_ShowNewWinner_NewestWinner');
require('./assets/共用模塊/Host3_ShowNewWinner_Score');
require('./assets/共用模塊/Host3_WinRecordItem');
require('./assets/共用模塊/Host3_WinRecordItem_Score');
require('./assets/共用模塊/Host4_ShowWinner');
require('./assets/共用模塊/Host4_WinnerRedpaket');
require('./assets/共用模塊/Model');
require('./assets/共用模塊/RoleConfirm');
require('./assets/共用模塊/Skin');
require('./assets/共用模塊/備份/HelloWorld');
require('./assets/共用模塊/備份/Host1_QRC');
require('./assets/共用模塊/備份/goeasy-2.0.12.min');
require('./assets/共用模塊/備份/qrcode');
require('./assets/共用模塊/備份/rwd');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/TEST/ani.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '58d98+WtihHuKwhuv8/GTaa', 'ani');
// TEST/ani.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {
    this.count = 0;
  },
  onCollisionEnter: function onCollisionEnter(other, self) {
    this.count++;
    if (other.node.group == "加分" && this.count == 1) gameModel.TopTitle = "加分";else if (other.node.group == "扣分" && this.count == 1) gameModel.TopTitle = "扣分";
  },
  onCollisionExit: function onCollisionExit(other, self) {
    this.count--;
    gameModel.TopTitle = "無";
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcVEVTVFxcYW5pLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIm9uTG9hZCIsImNvdW50Iiwib25Db2xsaXNpb25FbnRlciIsIm90aGVyIiwic2VsZiIsIm5vZGUiLCJncm91cCIsIlRvcFRpdGxlIiwib25Db2xsaXNpb25FeGl0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBRUFDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBUUxDLEVBQUFBLE1BUkssb0JBUUs7QUFDUCxTQUFLQyxLQUFMLEdBQWEsQ0FBYjtBQUNGLEdBVkk7QUFZTEMsRUFBQUEsZ0JBQWdCLEVBQUcsMEJBQVVDLEtBQVYsRUFBaUJDLElBQWpCLEVBQXVCO0FBQ3RDLFNBQUtILEtBQUw7QUFDQSxRQUFHRSxLQUFLLENBQUNFLElBQU4sQ0FBV0MsS0FBWCxJQUFvQixJQUFwQixJQUE0QixLQUFLTCxLQUFMLElBQWMsQ0FBN0MsRUFBZ0RQLFNBQVMsQ0FBQ2EsUUFBVixHQUFxQixJQUFyQixDQUFoRCxLQUNLLElBQUdKLEtBQUssQ0FBQ0UsSUFBTixDQUFXQyxLQUFYLElBQW9CLElBQXBCLElBQTRCLEtBQUtMLEtBQUwsSUFBYyxDQUE3QyxFQUFnRFAsU0FBUyxDQUFDYSxRQUFWLEdBQXFCLElBQXJCO0FBQ3hELEdBaEJJO0FBa0JMQyxFQUFBQSxlQUFlLEVBQUUseUJBQVVMLEtBQVYsRUFBaUJDLElBQWpCLEVBQXVCO0FBQ3BDLFNBQUtILEtBQUw7QUFDQVAsSUFBQUEsU0FBUyxDQUFDYSxRQUFWLEdBQXFCLEdBQXJCO0FBQ0g7QUFyQkksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcblxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgIHRoaXMuY291bnQgPSAwXHJcbiAgICB9LFxyXG5cclxuICAgIG9uQ29sbGlzaW9uRW50ZXIgOiBmdW5jdGlvbiAob3RoZXIsIHNlbGYpIHtcclxuICAgICAgICB0aGlzLmNvdW50ICsrXHJcbiAgICAgICAgaWYob3RoZXIubm9kZS5ncm91cCA9PSBcIuWKoOWIhlwiICYmIHRoaXMuY291bnQgPT0gMSkgZ2FtZU1vZGVsLlRvcFRpdGxlID0gXCLliqDliIZcIjtcclxuICAgICAgICBlbHNlIGlmKG90aGVyLm5vZGUuZ3JvdXAgPT0gXCLmiaPliIZcIiAmJiB0aGlzLmNvdW50ID09IDEpIGdhbWVNb2RlbC5Ub3BUaXRsZSA9IFwi5omj5YiGXCI7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uQ29sbGlzaW9uRXhpdDogZnVuY3Rpb24gKG90aGVyLCBzZWxmKSB7XHJcbiAgICAgICAgdGhpcy5jb3VudCAtLVxyXG4gICAgICAgIGdhbWVNb2RlbC5Ub3BUaXRsZSA9IFwi54ShXCJcclxuICAgIH0sXHJcbn0pOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/備份/Host1_QRC.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4796bjRVSRAf5kel14YmIma', 'Host1_QRC');
// 共用模塊/備份/Host1_QRC.js

"use strict";

var gameModel = require("Model"); ///QRC生成


cc.Class({
  "extends": cc.Component,
  properties: {},
  start: function start() {
    var qrcode = new QRCode(-1, QRErrorCorrectLevel.H);
    qrcode.addData("https://hilives.net/interact/game/redpack?activity_id=" + gameModel.activity_id + "&game_id=" + gameModel.game_id); //需繪製QRC的網址		

    qrcode.make(); //創造QRC

    var Graphics = this.node.getComponent(cc.Graphics); // 計算QRC塊的長和高，調整QRC比例

    var tileW = this.node.width / qrcode.getModuleCount();
    var tileH = this.node.height / qrcode.getModuleCount(); // 畫出QRC碼

    for (var row = 0; row < qrcode.getModuleCount(); row++) {
      for (var col = 0; col < qrcode.getModuleCount(); col++) {
        if (qrcode.isDark(row, col)) Graphics.fillColor = cc.Color.BLACK;else Graphics.fillColor = cc.Color.WHITE; //計算寬高    ※ceil : 向上取整數  floor : 向下取整數   round : 四捨五入取整數

        var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW); //計算寬  

        var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW); //計算高
        //繪製的地方 : 矩形(x: Math.round(col * tileW), y: Math.round(row * tileH), 寬: w, 高: h)

        Graphics.rect(Math.round(col * tileW), Math.round(row * tileH), w, h);
        Graphics.fill(); //填滿繪製的框框
      }
    }
  } // update(dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFzlgpnku71cXEhvc3QxX1FSQy5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJzdGFydCIsInFyY29kZSIsIlFSQ29kZSIsIlFSRXJyb3JDb3JyZWN0TGV2ZWwiLCJIIiwiYWRkRGF0YSIsImFjdGl2aXR5X2lkIiwiZ2FtZV9pZCIsIm1ha2UiLCJHcmFwaGljcyIsIm5vZGUiLCJnZXRDb21wb25lbnQiLCJ0aWxlVyIsIndpZHRoIiwiZ2V0TW9kdWxlQ291bnQiLCJ0aWxlSCIsImhlaWdodCIsInJvdyIsImNvbCIsImlzRGFyayIsImZpbGxDb2xvciIsIkNvbG9yIiwiQkxBQ0siLCJXSElURSIsInciLCJNYXRoIiwiY2VpbCIsImZsb29yIiwiaCIsInJlY3QiLCJyb3VuZCIsImZpbGwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUF2QixFQUVBOzs7QUFDQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDUixhQUFTRCxFQUFFLENBQUNFLFNBREo7QUFHUkMsRUFBQUEsVUFBVSxFQUFFLEVBSEo7QUFPUkMsRUFBQUEsS0FQUSxtQkFPQTtBQUNQLFFBQUlDLE1BQU0sR0FBRyxJQUFJQyxNQUFKLENBQVcsQ0FBQyxDQUFaLEVBQWVDLG1CQUFtQixDQUFDQyxDQUFuQyxDQUFiO0FBQ0FILElBQUFBLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlLDJEQUEyRFgsU0FBUyxDQUFDWSxXQUFyRSxHQUFtRixXQUFuRixHQUFpR1osU0FBUyxDQUFDYSxPQUExSCxFQUZPLENBRTZIOztBQUNwSU4sSUFBQUEsTUFBTSxDQUFDTyxJQUFQLEdBSE8sQ0FHUTs7QUFDZixRQUFJQyxRQUFRLEdBQUcsS0FBS0MsSUFBTCxDQUFVQyxZQUFWLENBQXVCZixFQUFFLENBQUNhLFFBQTFCLENBQWYsQ0FKTyxDQUtQOztBQUNBLFFBQUlHLEtBQUssR0FBRyxLQUFLRixJQUFMLENBQVVHLEtBQVYsR0FBa0JaLE1BQU0sQ0FBQ2EsY0FBUCxFQUE5QjtBQUNBLFFBQUlDLEtBQUssR0FBRyxLQUFLTCxJQUFMLENBQVVNLE1BQVYsR0FBbUJmLE1BQU0sQ0FBQ2EsY0FBUCxFQUEvQixDQVBPLENBUVA7O0FBQ0EsU0FBSyxJQUFJRyxHQUFHLEdBQUcsQ0FBZixFQUFrQkEsR0FBRyxHQUFHaEIsTUFBTSxDQUFDYSxjQUFQLEVBQXhCLEVBQWlERyxHQUFHLEVBQXBELEVBQXlEO0FBQ3hELFdBQUssSUFBSUMsR0FBRyxHQUFHLENBQWYsRUFBa0JBLEdBQUcsR0FBR2pCLE1BQU0sQ0FBQ2EsY0FBUCxFQUF4QixFQUFpREksR0FBRyxFQUFwRCxFQUF5RDtBQUN4RCxZQUFJakIsTUFBTSxDQUFDa0IsTUFBUCxDQUFjRixHQUFkLEVBQW1CQyxHQUFuQixDQUFKLEVBQTZCVCxRQUFRLENBQUNXLFNBQVQsR0FBcUJ4QixFQUFFLENBQUN5QixLQUFILENBQVNDLEtBQTlCLENBQTdCLEtBQ0tiLFFBQVEsQ0FBQ1csU0FBVCxHQUFxQnhCLEVBQUUsQ0FBQ3lCLEtBQUgsQ0FBU0UsS0FBOUIsQ0FGbUQsQ0FHeEQ7O0FBQ0EsWUFBSUMsQ0FBQyxHQUFJQyxJQUFJLENBQUNDLElBQUwsQ0FBVSxDQUFDUixHQUFHLEdBQUcsQ0FBUCxJQUFZTixLQUF0QixJQUErQmEsSUFBSSxDQUFDRSxLQUFMLENBQVdULEdBQUcsR0FBR04sS0FBakIsQ0FBeEMsQ0FKd0QsQ0FJVTs7QUFDbEUsWUFBSWdCLENBQUMsR0FBSUgsSUFBSSxDQUFDQyxJQUFMLENBQVUsQ0FBQ1QsR0FBRyxHQUFHLENBQVAsSUFBWUwsS0FBdEIsSUFBK0JhLElBQUksQ0FBQ0UsS0FBTCxDQUFXVixHQUFHLEdBQUdMLEtBQWpCLENBQXhDLENBTHdELENBS1U7QUFDdEQ7O0FBQ1pILFFBQUFBLFFBQVEsQ0FBQ29CLElBQVQsQ0FBY0osSUFBSSxDQUFDSyxLQUFMLENBQVdaLEdBQUcsR0FBR04sS0FBakIsQ0FBZCxFQUF1Q2EsSUFBSSxDQUFDSyxLQUFMLENBQVdiLEdBQUcsR0FBR0YsS0FBakIsQ0FBdkMsRUFBZ0VTLENBQWhFLEVBQW1FSSxDQUFuRTtBQUNBbkIsUUFBQUEsUUFBUSxDQUFDc0IsSUFBVCxHQVJ3RCxDQVF2QztBQUNqQjtBQUNEO0FBQ0QsR0E1Qk8sQ0E4QlI7O0FBOUJRLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcblxyXG4vLy9RUkPnlJ/miJBcclxuY2MuQ2xhc3Moe1xyXG5cdGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcblx0cHJvcGVydGllczoge1xyXG5cclxuXHR9LFxyXG5cclxuXHRzdGFydCgpIHtcclxuXHRcdHZhciBxcmNvZGUgPSBuZXcgUVJDb2RlKC0xLCBRUkVycm9yQ29ycmVjdExldmVsLkgpOyBcclxuXHRcdHFyY29kZS5hZGREYXRhKFwiaHR0cHM6Ly9oaWxpdmVzLm5ldC9pbnRlcmFjdC9nYW1lL3JlZHBhY2s/YWN0aXZpdHlfaWQ9XCIgKyBnYW1lTW9kZWwuYWN0aXZpdHlfaWQgKyBcIiZnYW1lX2lkPVwiICsgZ2FtZU1vZGVsLmdhbWVfaWQpOyAvL+mcgOe5quijvVFSQ+eahOe2suWdgFx0XHRcclxuXHRcdHFyY29kZS5tYWtlKCk7IC8v5Ym16YCgUVJDXHJcblx0XHR2YXIgR3JhcGhpY3MgPSB0aGlzLm5vZGUuZ2V0Q29tcG9uZW50KGNjLkdyYXBoaWNzKTtcclxuXHRcdC8vIOioiOeul1FSQ+WhiueahOmVt+WSjOmrmO+8jOiqv+aVtFFSQ+avlOS+i1xyXG5cdFx0dmFyIHRpbGVXID0gdGhpcy5ub2RlLndpZHRoIC8gcXJjb2RlLmdldE1vZHVsZUNvdW50KCk7XHJcblx0XHR2YXIgdGlsZUggPSB0aGlzLm5vZGUuaGVpZ2h0IC8gcXJjb2RlLmdldE1vZHVsZUNvdW50KCk7XHJcblx0XHQvLyDnlavlh7pRUkPnorxcclxuXHRcdGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IHFyY29kZS5nZXRNb2R1bGVDb3VudCgpOyByb3cgKyspIHtcclxuXHRcdFx0Zm9yICh2YXIgY29sID0gMDsgY29sIDwgcXJjb2RlLmdldE1vZHVsZUNvdW50KCk7IGNvbCArKykge1xyXG5cdFx0XHRcdGlmIChxcmNvZGUuaXNEYXJrKHJvdywgY29sKSkgR3JhcGhpY3MuZmlsbENvbG9yID0gY2MuQ29sb3IuQkxBQ0s7XHJcblx0XHRcdFx0ZWxzZSBHcmFwaGljcy5maWxsQ29sb3IgPSBjYy5Db2xvci5XSElURTtcclxuXHRcdFx0XHQvL+ioiOeul+WvrOmrmCAgICDigLtjZWlsIDog5ZCR5LiK5Y+W5pW05pW4ICBmbG9vciA6IOWQkeS4i+WPluaVtOaVuCAgIHJvdW5kIDog5Zub5o2o5LqU5YWl5Y+W5pW05pW4XHJcblx0XHRcdFx0dmFyIHcgPSAoTWF0aC5jZWlsKChjb2wgKyAxKSAqIHRpbGVXKSAtIE1hdGguZmxvb3IoY29sICogdGlsZVcpKTsgLy/oqIjnrpflr6wgIFxyXG5cdFx0XHRcdHZhciBoID0gKE1hdGguY2VpbCgocm93ICsgMSkgKiB0aWxlVykgLSBNYXRoLmZsb29yKHJvdyAqIHRpbGVXKSk7IC8v6KiI566X6auYXHJcbiAgICAgICAgICAgICAgICAvL+e5quijveeahOWcsOaWuSA6IOefqeW9oih4OiBNYXRoLnJvdW5kKGNvbCAqIHRpbGVXKSwgeTogTWF0aC5yb3VuZChyb3cgKiB0aWxlSCksIOWvrDogdywg6auYOiBoKVxyXG5cdFx0XHRcdEdyYXBoaWNzLnJlY3QoTWF0aC5yb3VuZChjb2wgKiB0aWxlVyksIE1hdGgucm91bmQocm93ICogdGlsZUgpLCB3LCBoKTsgXHJcblx0XHRcdFx0R3JhcGhpY3MuZmlsbCgpOyAvL+Whq+a7v+e5quijveeahOahhuahhlxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Ly8gdXBkYXRlKGR0KSB7fSxcclxufSk7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/1_redpack/遊戲模塊/Guest4_ShakeRedpacket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'da8fbrVeyxAB7FB9/coyTfy', 'Guest4_ShakeRedpacket');
// 1_redpack/遊戲模塊/Guest4_ShakeRedpacket.js

"use strict";

var gameModel = require("Model"); ///玩家在遊戲中，打開陀螺儀，搖紅包判定抽獎js


cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.GetPrize = false; //是否拿到獎品

    this.shakecount = 0; //搖的次數
  },
  start: function start() {
    cc.systemEvent.setAccelerometerEnabled(true); //打開加速儀

    cc.systemEvent.on(cc.SystemEvent.EventType.DEVICEMOTION, this.onDeviceMotionEvent, this);
  },
  onDeviceMotionEvent: function onDeviceMotionEvent(event) {
    var stand = 0.2;
    var x = event.acc.x.toFixed(2);
    var y = event.acc.y.toFixed(2);
    var z = event.acc.z.toFixed(2);
    this.speed = Math.abs(x - stand) + Math.abs(y - stand) + Math.abs(z - stand); //搖晃程度

    if (this.speed > 2) //搖晃程度須超過2
      {
        this.shakecount++; //搖晃次數增加1

        if (this.shakecount >= 5 && this.GetPrize == false) //搖晃次數到達5則判定有無中獎
          {
            cc.systemEvent.setAccelerometerEnabled(false); //打開加速儀

            cc.systemEvent.off(cc.SystemEvent.EventType.DEVICEMOTION, this.onDeviceMotionEvent, this);
            this.GetPrize = true;
            gameModel.Lottery_Guest();
            this.scheduleOnce(function () {
              gameModel.GameStatusMessage = "end";
            }, 3);
          }
      } else this.shakecount = 0; //若中間有搖晃程度未超過2，則搖晃次數歸0

  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcMV9yZWRwYWNrXFzpgYrmiLLmqKHloYpcXEd1ZXN0NF9TaGFrZVJlZHBhY2tldC5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJvbkxvYWQiLCJHZXRQcml6ZSIsInNoYWtlY291bnQiLCJzdGFydCIsInN5c3RlbUV2ZW50Iiwic2V0QWNjZWxlcm9tZXRlckVuYWJsZWQiLCJvbiIsIlN5c3RlbUV2ZW50IiwiRXZlbnRUeXBlIiwiREVWSUNFTU9USU9OIiwib25EZXZpY2VNb3Rpb25FdmVudCIsImV2ZW50Iiwic3RhbmQiLCJ4IiwiYWNjIiwidG9GaXhlZCIsInkiLCJ6Iiwic3BlZWQiLCJNYXRoIiwiYWJzIiwib2ZmIiwiTG90dGVyeV9HdWVzdCIsInNjaGVkdWxlT25jZSIsIkdhbWVTdGF0dXNNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkIsRUFFQTs7O0FBQ0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBUUw7QUFFQUMsRUFBQUEsTUFWSyxvQkFVSztBQUNOLFNBQUtDLFFBQUwsR0FBZ0IsS0FBaEIsQ0FETSxDQUNnQjs7QUFDdEIsU0FBS0MsVUFBTCxHQUFrQixDQUFsQixDQUZNLENBRWM7QUFDdkIsR0FiSTtBQWVMQyxFQUFBQSxLQWZLLG1CQWVJO0FBQ0xQLElBQUFBLEVBQUUsQ0FBQ1EsV0FBSCxDQUFlQyx1QkFBZixDQUF1QyxJQUF2QyxFQURLLENBQzBDOztBQUMvQ1QsSUFBQUEsRUFBRSxDQUFDUSxXQUFILENBQWVFLEVBQWYsQ0FBa0JWLEVBQUUsQ0FBQ1csV0FBSCxDQUFlQyxTQUFmLENBQXlCQyxZQUEzQyxFQUF5RCxLQUFLQyxtQkFBOUQsRUFBbUYsSUFBbkY7QUFDSCxHQWxCSTtBQW9CTEEsRUFBQUEsbUJBcEJLLCtCQW9CZ0JDLEtBcEJoQixFQW9CdUI7QUFDcEIsUUFBSUMsS0FBSyxHQUFHLEdBQVo7QUFDQSxRQUFJQyxDQUFDLEdBQUdGLEtBQUssQ0FBQ0csR0FBTixDQUFVRCxDQUFWLENBQVlFLE9BQVosQ0FBb0IsQ0FBcEIsQ0FBUjtBQUNBLFFBQUlDLENBQUMsR0FBR0wsS0FBSyxDQUFDRyxHQUFOLENBQVVFLENBQVYsQ0FBWUQsT0FBWixDQUFvQixDQUFwQixDQUFSO0FBQ0EsUUFBSUUsQ0FBQyxHQUFHTixLQUFLLENBQUNHLEdBQU4sQ0FBVUcsQ0FBVixDQUFZRixPQUFaLENBQW9CLENBQXBCLENBQVI7QUFDQSxTQUFLRyxLQUFMLEdBQWFDLElBQUksQ0FBQ0MsR0FBTCxDQUFTUCxDQUFDLEdBQUNELEtBQVgsSUFBb0JPLElBQUksQ0FBQ0MsR0FBTCxDQUFTSixDQUFDLEdBQUNKLEtBQVgsQ0FBcEIsR0FBd0NPLElBQUksQ0FBQ0MsR0FBTCxDQUFTSCxDQUFDLEdBQUNMLEtBQVgsQ0FBckQsQ0FMb0IsQ0FLb0Q7O0FBQ3hFLFFBQUcsS0FBS00sS0FBTCxHQUFhLENBQWhCLEVBQW9CO0FBQ3BCO0FBQ0ksYUFBS2hCLFVBQUwsR0FESixDQUN5Qjs7QUFDckIsWUFBRyxLQUFLQSxVQUFMLElBQW1CLENBQW5CLElBQXlCLEtBQUtELFFBQUwsSUFBaUIsS0FBN0MsRUFBb0Q7QUFDcEQ7QUFDSUwsWUFBQUEsRUFBRSxDQUFDUSxXQUFILENBQWVDLHVCQUFmLENBQXVDLEtBQXZDLEVBREosQ0FDb0Q7O0FBQ2hEVCxZQUFBQSxFQUFFLENBQUNRLFdBQUgsQ0FBZWlCLEdBQWYsQ0FBbUJ6QixFQUFFLENBQUNXLFdBQUgsQ0FBZUMsU0FBZixDQUF5QkMsWUFBNUMsRUFBMEQsS0FBS0MsbUJBQS9ELEVBQW9GLElBQXBGO0FBQ0EsaUJBQUtULFFBQUwsR0FBZ0IsSUFBaEI7QUFDQVAsWUFBQUEsU0FBUyxDQUFDNEIsYUFBVjtBQUNBLGlCQUFLQyxZQUFMLENBQWtCLFlBQVU7QUFDdkI3QixjQUFBQSxTQUFTLENBQUM4QixpQkFBVixHQUE4QixLQUE5QjtBQUNMLGFBRkEsRUFFQyxDQUZEO0FBR0g7QUFDSixPQWJELE1BY00sS0FBS3RCLFVBQUwsR0FBa0IsQ0FBbEIsQ0FwQmMsQ0FvQk87O0FBQ2xDLEdBekNJLENBMkNMOztBQTNDSyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5cclxuLy8v546p5a625Zyo6YGK5oiy5Lit77yM5omT6ZaL6ZmA6J665YSA77yM5pCW57SF5YyF5Yik5a6a5oq9542OanNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuXHJcbiAgICAgICAgXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5HZXRQcml6ZSA9IGZhbHNlOy8v5piv5ZCm5ou/5Yiw542O5ZOBXHJcbiAgICAgICAgdGhpcy5zaGFrZWNvdW50ID0gMDsvL+aQlueahOasoeaVuFxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgICAgY2Muc3lzdGVtRXZlbnQuc2V0QWNjZWxlcm9tZXRlckVuYWJsZWQodHJ1ZSk7ICAvL+aJk+mWi+WKoOmAn+WEgFxyXG4gICAgICAgIGNjLnN5c3RlbUV2ZW50Lm9uKGNjLlN5c3RlbUV2ZW50LkV2ZW50VHlwZS5ERVZJQ0VNT1RJT04sIHRoaXMub25EZXZpY2VNb3Rpb25FdmVudCwgdGhpcyk7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uRGV2aWNlTW90aW9uRXZlbnQgKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIHZhciBzdGFuZCA9IDAuMjtcclxuICAgICAgICAgICAgdmFyIHggPSBldmVudC5hY2MueC50b0ZpeGVkKDIpOyBcclxuICAgICAgICAgICAgdmFyIHkgPSBldmVudC5hY2MueS50b0ZpeGVkKDIpOyBcclxuICAgICAgICAgICAgdmFyIHogPSBldmVudC5hY2Muei50b0ZpeGVkKDIpOyBcclxuICAgICAgICAgICAgdGhpcy5zcGVlZCA9IE1hdGguYWJzKHgtc3RhbmQpICsgTWF0aC5hYnMoeS1zdGFuZCkgKyBNYXRoLmFicyh6LXN0YW5kKTsgLy/mkJbmmYPnqIvluqZcclxuICAgICAgICAgICAgaWYodGhpcy5zcGVlZCA+IDIgKSAvL+aQluaZg+eoi+W6pumgiOi2hemBjjJcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaGFrZWNvdW50ICsrIDsgLy/mkJbmmYPmrKHmlbjlop7liqAxXHJcbiAgICAgICAgICAgICAgICBpZih0aGlzLnNoYWtlY291bnQgPj0gNSAmJiAgdGhpcy5HZXRQcml6ZSA9PSBmYWxzZSkgLy/mkJbmmYPmrKHmlbjliLDpgZQ15YmH5Yik5a6a5pyJ54Sh5Lit542OXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2Muc3lzdGVtRXZlbnQuc2V0QWNjZWxlcm9tZXRlckVuYWJsZWQoZmFsc2UpOyAgLy/miZPplovliqDpgJ/lhIBcclxuICAgICAgICAgICAgICAgICAgICBjYy5zeXN0ZW1FdmVudC5vZmYoY2MuU3lzdGVtRXZlbnQuRXZlbnRUeXBlLkRFVklDRU1PVElPTiwgdGhpcy5vbkRldmljZU1vdGlvbkV2ZW50LCB0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkdldFByaXplID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuTG90dGVyeV9HdWVzdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPSBcImVuZFwiXHJcbiAgICAgICAgICAgICAgICAgICB9LDMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgIHRoaXMuc2hha2Vjb3VudCA9IDA7IC8v6Iul5Lit6ZaT5pyJ5pCW5pmD56iL5bqm5pyq6LaF6YGOMu+8jOWJh+aQluaZg+asoeaVuOatuDBcclxuICAgIH0sXHJcbiAgICBcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/3_whack_a_mole/遊戲模塊/Host_RandomSpawn.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '91bc3keIb9BRqI/N2ZbePz0', 'Host_RandomSpawn');
// 3_whack_a_mole/遊戲模塊/Host_RandomSpawn.js

"use strict";

var RandenSpawnMouse = require("Guest4_Whack_a_mole");

cc.Class({
  "extends": RandenSpawnMouse,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {},
  start: function start() {
    this.mouseIndexArr = [];
    this.schedule(function () {
      this.MouseComeOut();
    }, 0.5);

    if (cc.director.getScene()._name.includes("Host3_Game")) {
      this.schedule(function () {
        this.RandomHit();
      }, 0.2);
    }
  },
  //設置地鼠資訊
  updateMouseNodeInfo: function updateMouseNodeInfo(mouse, tag) {
    //設置當前老鼠節點爲存活
    mouse.getComponent("Host_MouseManager").isLive = true; //將老鼠類型序號作爲標籤添加到老鼠節點上

    mouse.getComponent("Host_MouseManager").tag = tag;
  },
  //隨機打地鼠
  RandomHit: function RandomHit() {
    var randomHitIndex = Math.floor(Math.random() * this.mouseHoles.childrenCount); //隨機鼠洞

    if (this.mouseIndexArr.indexOf(randomHitIndex) === 1) {
      var mouse = this.mouseHoles.children[randomHitIndex].getChildByName("遮罩").getChildByName("鼠"); //mouse = 隨機洞的老鼠

      var hammer = this.mouseHoles.children[randomHitIndex].getChildByName("槌子");
      mouse.getComponent("Host_MouseManager").Hit(hammer);
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcM193aGFja19hX21vbGVcXOmBiuaIsuaooeWhilxcSG9zdF9SYW5kb21TcGF3bi5qcyJdLCJuYW1lcyI6WyJSYW5kZW5TcGF3bk1vdXNlIiwicmVxdWlyZSIsImNjIiwiQ2xhc3MiLCJwcm9wZXJ0aWVzIiwib25Mb2FkIiwic3RhcnQiLCJtb3VzZUluZGV4QXJyIiwic2NoZWR1bGUiLCJNb3VzZUNvbWVPdXQiLCJkaXJlY3RvciIsImdldFNjZW5lIiwiX25hbWUiLCJpbmNsdWRlcyIsIlJhbmRvbUhpdCIsInVwZGF0ZU1vdXNlTm9kZUluZm8iLCJtb3VzZSIsInRhZyIsImdldENvbXBvbmVudCIsImlzTGl2ZSIsInJhbmRvbUhpdEluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibW91c2VIb2xlcyIsImNoaWxkcmVuQ291bnQiLCJpbmRleE9mIiwiY2hpbGRyZW4iLCJnZXRDaGlsZEJ5TmFtZSIsImhhbW1lciIsIkhpdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxnQkFBZ0IsR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQTlCOztBQUVBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNILGdCQURKO0FBR0xJLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBT0w7QUFFQUMsRUFBQUEsTUFUSyxvQkFTSyxDQUFFLENBVFA7QUFXTEMsRUFBQUEsS0FYSyxtQkFXSTtBQUNMLFNBQUtDLGFBQUwsR0FBcUIsRUFBckI7QUFDQSxTQUFLQyxRQUFMLENBQWMsWUFBVztBQUN2QixXQUFLQyxZQUFMO0FBQ0QsS0FGRCxFQUVHLEdBRkg7O0FBR0EsUUFBR1AsRUFBRSxDQUFDUSxRQUFILENBQVlDLFFBQVosR0FBdUJDLEtBQXZCLENBQTZCQyxRQUE3QixDQUFzQyxZQUF0QyxDQUFILEVBQ0E7QUFDSSxXQUFLTCxRQUFMLENBQWMsWUFBVztBQUNyQixhQUFLTSxTQUFMO0FBQ0QsT0FGSCxFQUVLLEdBRkw7QUFHSDtBQUNKLEdBdEJJO0FBd0JMO0FBQ0FDLEVBQUFBLG1CQXpCSywrQkF5QmVDLEtBekJmLEVBeUJzQkMsR0F6QnRCLEVBeUIyQjtBQUM1QjtBQUNBRCxJQUFBQSxLQUFLLENBQUNFLFlBQU4sQ0FBbUIsbUJBQW5CLEVBQXdDQyxNQUF4QyxHQUFpRCxJQUFqRCxDQUY0QixDQUc1Qjs7QUFDQUgsSUFBQUEsS0FBSyxDQUFDRSxZQUFOLENBQW1CLG1CQUFuQixFQUF3Q0QsR0FBeEMsR0FBOENBLEdBQTlDO0FBQ0gsR0E5Qkk7QUFnQ0w7QUFDQUgsRUFBQUEsU0FqQ0ssdUJBaUNNO0FBQ1AsUUFBSU0sY0FBYyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWlCLEtBQUtDLFVBQUwsQ0FBZ0JDLGFBQTVDLENBQXJCLENBRE8sQ0FDNEU7O0FBQ25GLFFBQUksS0FBS2xCLGFBQUwsQ0FBbUJtQixPQUFuQixDQUEyQk4sY0FBM0IsTUFBK0MsQ0FBbkQsRUFDQTtBQUNJLFVBQUlKLEtBQUssR0FBRyxLQUFLUSxVQUFMLENBQWdCRyxRQUFoQixDQUF5QlAsY0FBekIsRUFBeUNRLGNBQXpDLENBQXdELElBQXhELEVBQThEQSxjQUE5RCxDQUE2RSxHQUE3RSxDQUFaLENBREosQ0FDbUc7O0FBQy9GLFVBQUlDLE1BQU0sR0FBRyxLQUFLTCxVQUFMLENBQWdCRyxRQUFoQixDQUF5QlAsY0FBekIsRUFBeUNRLGNBQXpDLENBQXdELElBQXhELENBQWI7QUFDQVosTUFBQUEsS0FBSyxDQUFDRSxZQUFOLENBQW1CLG1CQUFuQixFQUF3Q1ksR0FBeEMsQ0FBNENELE1BQTVDO0FBQ0g7QUFDSixHQXpDSSxDQTBDTDs7QUExQ0ssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFJhbmRlblNwYXduTW91c2UgPSByZXF1aXJlKFwiR3Vlc3Q0X1doYWNrX2FfbW9sZVwiKTsgXHJcblxyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBSYW5kZW5TcGF3bk1vdXNlLFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgb25Mb2FkICgpIHt9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICB0aGlzLm1vdXNlSW5kZXhBcnIgPSBbXVxyXG4gICAgICAgIHRoaXMuc2NoZWR1bGUoZnVuY3Rpb24oKSB7IFxyXG4gICAgICAgICAgdGhpcy5Nb3VzZUNvbWVPdXQoKVxyXG4gICAgICAgIH0sIDAuNSk7XHJcbiAgICAgICAgaWYoY2MuZGlyZWN0b3IuZ2V0U2NlbmUoKS5fbmFtZS5pbmNsdWRlcyhcIkhvc3QzX0dhbWVcIikpIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5zY2hlZHVsZShmdW5jdGlvbigpIHsgXHJcbiAgICAgICAgICAgICAgICB0aGlzLlJhbmRvbUhpdCgpO1xyXG4gICAgICAgICAgICAgIH0sIDAuMik7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICAvL+ioree9ruWcsOm8oOizh+ioilxyXG4gICAgdXBkYXRlTW91c2VOb2RlSW5mbyhtb3VzZSwgdGFnKSB7XHJcbiAgICAgICAgLy/oqK3nva7nlbbliY3ogIHpvKDnr4Dpu57niLLlrZjmtLtcclxuICAgICAgICBtb3VzZS5nZXRDb21wb25lbnQoXCJIb3N0X01vdXNlTWFuYWdlclwiKS5pc0xpdmUgPSB0cnVlO1xyXG4gICAgICAgIC8v5bCH6ICB6byg6aGe5Z6L5bqP6Jmf5L2c54iy5qiZ57Gk5re75Yqg5Yiw6ICB6byg56+A6bue5LiKXHJcbiAgICAgICAgbW91c2UuZ2V0Q29tcG9uZW50KFwiSG9zdF9Nb3VzZU1hbmFnZXJcIikudGFnID0gdGFnO1xyXG4gICAgfSxcclxuXHJcbiAgICAvL+maqOapn+aJk+WcsOm8oFxyXG4gICAgUmFuZG9tSGl0KCl7XHJcbiAgICAgICAgbGV0IHJhbmRvbUhpdEluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMubW91c2VIb2xlcy5jaGlsZHJlbkNvdW50KSk7ICAvL+maqOapn+m8oOa0nlxyXG4gICAgICAgIGlmICh0aGlzLm1vdXNlSW5kZXhBcnIuaW5kZXhPZihyYW5kb21IaXRJbmRleCkgPT09IDEpIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIG1vdXNlID0gdGhpcy5tb3VzZUhvbGVzLmNoaWxkcmVuW3JhbmRvbUhpdEluZGV4XS5nZXRDaGlsZEJ5TmFtZShcIumBrue9qVwiKS5nZXRDaGlsZEJ5TmFtZShcIum8oFwiKTsgLy9tb3VzZSA9IOmaqOapn+a0nueahOiAgem8oFxyXG4gICAgICAgICAgICB2YXIgaGFtbWVyID0gdGhpcy5tb3VzZUhvbGVzLmNoaWxkcmVuW3JhbmRvbUhpdEluZGV4XS5nZXRDaGlsZEJ5TmFtZShcIuanjOWtkFwiKVxyXG4gICAgICAgICAgICBtb3VzZS5nZXRDb21wb25lbnQoXCJIb3N0X01vdXNlTWFuYWdlclwiKS5IaXQoaGFtbWVyKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/2_ropepack/遊戲模塊/Guest4_CatchRedpacket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bcb12aXiNtNJqC5IhrlOMRA', 'Guest4_CatchRedpacket');
// 2_ropepack/遊戲模塊/Guest4_CatchRedpacket.js

"use strict";

var gameModel = require("Model"); //全域變數gameModel 不須加this就能提取
///玩家在遊戲中套紅包判定抽獎js


cc.Class({
  "extends": cc.Component,
  properties: {
    aniRedPacket: {
      "default": null,
      type: cc.Node
    },
    aniButton: {
      "default": null,
      type: cc.Node
    },
    aniHand: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    cc.director.getPhysicsManager().enabled = true;
  },
  start: function start() {
    this.RopeCount = 0;
    this.ButtunClickCheck = 0;
    this.aniButtunStates = "None"; //每1秒鐘檢查是否有持續按按鈕

    this.schedule(this.CheckCountinuePress, 0.5);
  },
  //按下套紅包按鈕
  Rope: function Rope() {
    if (this.aniButtunStates == "None") //第一次點擊時，變更按鈕、紅包動畫和手指動畫的速度
      {
        this.aniButtunStates = "開始套紅包";
        this.aniButton.getComponent(sp.Skeleton).setAnimation(0, "animation3", true);
        this.aniHand.getComponent(sp.Skeleton).timeScale = 2.5;
        this.aniRedPacket.getComponent(sp.Skeleton).setAnimation(0, "catch1-2", false);
        this.aniRedPacket.getComponent(sp.Skeleton).addAnimation(0, "catch1-3", true);
      } else if (this.aniButtunStates == "開始套紅包" && this.RopeCount <= 20) //點擊到指定次數時判斷有無中獎
      {
        this.RopeCount++;

        if (this.RopeCount == 20) {
          this.unschedule(this.CheckCountinuePress); //取消計時器

          gameModel.Lottery_Guest();
          this.scheduleOnce(function () {
            if (gameModel.result == "thanks") this.aniRedPacket.getComponent(sp.Skeleton).setAnimation(0, "catch1-5", false); //沒中獎切換到飛走動畫
            else this.aniRedPacket.getComponent(sp.Skeleton).setAnimation(0, "catch1-4", false); //中獎切換到拉走動畫

            this.scheduleOnce(function () {
              gameModel.GameStatusMessage = "end";
            }, 1.5);
          }, 3);
        }
      }
  },
  //若太久沒按下套紅包按鈕，計數會歸0
  CheckCountinuePress: function CheckCountinuePress() {
    if (this.RopeCount != this.ButtunClickCheck) this.ButtunClickCheck = this.RopeCount;else {
      this.RopeCount = 0;
      this.ButtunClickCheck = 0;
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcMl9yb3BlcGFja1xc6YGK5oiy5qih5aGKXFxHdWVzdDRfQ2F0Y2hSZWRwYWNrZXQuanMiXSwibmFtZXMiOlsiZ2FtZU1vZGVsIiwicmVxdWlyZSIsImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiYW5pUmVkUGFja2V0IiwidHlwZSIsIk5vZGUiLCJhbmlCdXR0b24iLCJhbmlIYW5kIiwib25Mb2FkIiwiZGlyZWN0b3IiLCJnZXRQaHlzaWNzTWFuYWdlciIsImVuYWJsZWQiLCJzdGFydCIsIlJvcGVDb3VudCIsIkJ1dHR1bkNsaWNrQ2hlY2siLCJhbmlCdXR0dW5TdGF0ZXMiLCJzY2hlZHVsZSIsIkNoZWNrQ291bnRpbnVlUHJlc3MiLCJSb3BlIiwiZ2V0Q29tcG9uZW50Iiwic3AiLCJTa2VsZXRvbiIsInNldEFuaW1hdGlvbiIsInRpbWVTY2FsZSIsImFkZEFuaW1hdGlvbiIsInVuc2NoZWR1bGUiLCJMb3R0ZXJ5X0d1ZXN0Iiwic2NoZWR1bGVPbmNlIiwicmVzdWx0IiwiR2FtZVN0YXR1c01lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUF2QixFQUFrQztBQUVsQzs7O0FBQ0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxZQUFZLEVBQUM7QUFDWCxpQkFBUyxJQURFO0FBRVhDLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZFLEtBREw7QUFNUkMsSUFBQUEsU0FBUyxFQUFDO0FBQ04saUJBQVMsSUFESDtBQUVORixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGSCxLQU5GO0FBV1JFLElBQUFBLE9BQU8sRUFBQztBQUNKLGlCQUFTLElBREw7QUFFSkgsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRkw7QUFYQSxHQUhQO0FBcUJMRyxFQUFBQSxNQXJCSyxvQkFxQks7QUFDTlQsSUFBQUEsRUFBRSxDQUFDVSxRQUFILENBQVlDLGlCQUFaLEdBQWdDQyxPQUFoQyxHQUEwQyxJQUExQztBQUNILEdBdkJJO0FBeUJMQyxFQUFBQSxLQXpCSyxtQkF5Qkk7QUFDTCxTQUFLQyxTQUFMLEdBQWlCLENBQWpCO0FBQ0EsU0FBS0MsZ0JBQUwsR0FBd0IsQ0FBeEI7QUFDQSxTQUFLQyxlQUFMLEdBQXVCLE1BQXZCLENBSEssQ0FJTDs7QUFDQSxTQUFLQyxRQUFMLENBQWMsS0FBS0MsbUJBQW5CLEVBQXdDLEdBQXhDO0FBQ0gsR0EvQkk7QUFpQ0w7QUFDQUMsRUFBQUEsSUFsQ0ssa0JBa0NDO0FBQ0YsUUFBRyxLQUFLSCxlQUFMLElBQXdCLE1BQTNCLEVBQW1DO0FBQ25DO0FBQ0ksYUFBS0EsZUFBTCxHQUF1QixPQUF2QjtBQUNBLGFBQUtULFNBQUwsQ0FBZWEsWUFBZixDQUE0QkMsRUFBRSxDQUFDQyxRQUEvQixFQUF5Q0MsWUFBekMsQ0FBc0QsQ0FBdEQsRUFBd0QsWUFBeEQsRUFBcUUsSUFBckU7QUFDQSxhQUFLZixPQUFMLENBQWFZLFlBQWIsQ0FBMEJDLEVBQUUsQ0FBQ0MsUUFBN0IsRUFBdUNFLFNBQXZDLEdBQW1ELEdBQW5EO0FBQ0EsYUFBS3BCLFlBQUwsQ0FBa0JnQixZQUFsQixDQUErQkMsRUFBRSxDQUFDQyxRQUFsQyxFQUE0Q0MsWUFBNUMsQ0FBeUQsQ0FBekQsRUFBMkQsVUFBM0QsRUFBc0UsS0FBdEU7QUFDQSxhQUFLbkIsWUFBTCxDQUFrQmdCLFlBQWxCLENBQStCQyxFQUFFLENBQUNDLFFBQWxDLEVBQTRDRyxZQUE1QyxDQUF5RCxDQUF6RCxFQUEyRCxVQUEzRCxFQUFzRSxJQUF0RTtBQUNILE9BUEQsTUFRSyxJQUFHLEtBQUtULGVBQUwsSUFBd0IsT0FBeEIsSUFBbUMsS0FBS0YsU0FBTCxJQUFrQixFQUF4RCxFQUE0RDtBQUNqRTtBQUNJLGFBQUtBLFNBQUw7O0FBQ0EsWUFBRyxLQUFLQSxTQUFMLElBQWtCLEVBQXJCLEVBQ0E7QUFDSSxlQUFLWSxVQUFMLENBQWdCLEtBQUtSLG1CQUFyQixFQURKLENBQytDOztBQUMzQ3BCLFVBQUFBLFNBQVMsQ0FBQzZCLGFBQVY7QUFDQSxlQUFLQyxZQUFMLENBQWtCLFlBQVU7QUFDekIsZ0JBQUc5QixTQUFTLENBQUMrQixNQUFWLElBQW9CLFFBQXZCLEVBQWlDLEtBQUt6QixZQUFMLENBQWtCZ0IsWUFBbEIsQ0FBK0JDLEVBQUUsQ0FBQ0MsUUFBbEMsRUFBNENDLFlBQTVDLENBQXlELENBQXpELEVBQTJELFVBQTNELEVBQXNFLEtBQXRFLEVBQWpDLENBQStHO0FBQS9HLGlCQUNLLEtBQUtuQixZQUFMLENBQWtCZ0IsWUFBbEIsQ0FBK0JDLEVBQUUsQ0FBQ0MsUUFBbEMsRUFBNENDLFlBQTVDLENBQXlELENBQXpELEVBQTJELFVBQTNELEVBQXNFLEtBQXRFLEVBRm9CLENBRTBEOztBQUNuRixpQkFBS0ssWUFBTCxDQUFrQixZQUFVO0FBQzNCOUIsY0FBQUEsU0FBUyxDQUFDZ0MsaUJBQVYsR0FBOEIsS0FBOUI7QUFDQSxhQUZELEVBRUUsR0FGRjtBQUdGLFdBTkQsRUFNRSxDQU5GO0FBT0g7QUFDSjtBQUNKLEdBM0RJO0FBNkRMO0FBQ0FaLEVBQUFBLG1CQTlESyxpQ0E4RGdCO0FBQ2xCLFFBQUcsS0FBS0osU0FBTCxJQUFrQixLQUFLQyxnQkFBMUIsRUFBNEMsS0FBS0EsZ0JBQUwsR0FBd0IsS0FBS0QsU0FBN0IsQ0FBNUMsS0FFQTtBQUNDLFdBQUtBLFNBQUwsR0FBaUIsQ0FBakI7QUFDQSxXQUFLQyxnQkFBTCxHQUF3QixDQUF4QjtBQUNBO0FBQ0gsR0FyRUksQ0F1RUw7O0FBdkVLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7IC8v5YWo5Z+f6K6K5pW4Z2FtZU1vZGVsIOS4jemgiOWKoHRoaXPlsLHog73mj5Dlj5ZcclxuXHJcbi8vL+eOqeWutuWcqOmBiuaIsuS4reWll+e0heWMheWIpOWumuaKveeNjmpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgYW5pUmVkUGFja2V0OntcclxuICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICB0eXBlOiBjYy5Ob2RlXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgYW5pQnV0dG9uOntcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGFuaUhhbmQ6e1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgY2MuZGlyZWN0b3IuZ2V0UGh5c2ljc01hbmFnZXIoKS5lbmFibGVkID0gdHJ1ZTtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIHRoaXMuUm9wZUNvdW50ID0gMDtcclxuICAgICAgICB0aGlzLkJ1dHR1bkNsaWNrQ2hlY2sgPSAwO1xyXG4gICAgICAgIHRoaXMuYW5pQnV0dHVuU3RhdGVzID0gXCJOb25lXCI7XHJcbiAgICAgICAgLy/mr48x56eS6ZCY5qqi5p+l5piv5ZCm5pyJ5oyB57qM5oyJ5oyJ6YiVXHJcbiAgICAgICAgdGhpcy5zY2hlZHVsZSh0aGlzLkNoZWNrQ291bnRpbnVlUHJlc3MsIDAuNSk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8v5oyJ5LiL5aWX57SF5YyF5oyJ6YiVXHJcbiAgICBSb3BlKCl7XHJcbiAgICAgICAgaWYodGhpcy5hbmlCdXR0dW5TdGF0ZXMgPT0gXCJOb25lXCIpIC8v56ys5LiA5qyh6bue5pOK5pmC77yM6K6K5pu05oyJ6YiV44CB57SF5YyF5YuV55Wr5ZKM5omL5oyH5YuV55Wr55qE6YCf5bqmXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmFuaUJ1dHR1blN0YXRlcyA9IFwi6ZaL5aeL5aWX57SF5YyFXCI7XHJcbiAgICAgICAgICAgIHRoaXMuYW5pQnV0dG9uLmdldENvbXBvbmVudChzcC5Ta2VsZXRvbikuc2V0QW5pbWF0aW9uKDAsXCJhbmltYXRpb24zXCIsdHJ1ZSk7ICAgXHJcbiAgICAgICAgICAgIHRoaXMuYW5pSGFuZC5nZXRDb21wb25lbnQoc3AuU2tlbGV0b24pLnRpbWVTY2FsZSA9IDIuNTtcclxuICAgICAgICAgICAgdGhpcy5hbmlSZWRQYWNrZXQuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKS5zZXRBbmltYXRpb24oMCxcImNhdGNoMS0yXCIsZmFsc2UpO1xyXG4gICAgICAgICAgICB0aGlzLmFuaVJlZFBhY2tldC5nZXRDb21wb25lbnQoc3AuU2tlbGV0b24pLmFkZEFuaW1hdGlvbigwLFwiY2F0Y2gxLTNcIix0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZih0aGlzLmFuaUJ1dHR1blN0YXRlcyA9PSBcIumWi+Wni+Wll+e0heWMhVwiICYmIHRoaXMuUm9wZUNvdW50IDw9IDIwKSAvL+m7nuaTiuWIsOaMh+WumuasoeaVuOaZguWIpOaWt+acieeEoeS4reeNjlxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5Sb3BlQ291bnQgKysgO1xyXG4gICAgICAgICAgICBpZih0aGlzLlJvcGVDb3VudCA9PSAyMCkgXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudW5zY2hlZHVsZSh0aGlzLkNoZWNrQ291bnRpbnVlUHJlc3MpOyAvL+WPlua2iOioiOaZguWZqFxyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLkxvdHRlcnlfR3Vlc3QoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICBpZihnYW1lTW9kZWwucmVzdWx0ID09IFwidGhhbmtzXCIpIHRoaXMuYW5pUmVkUGFja2V0LmdldENvbXBvbmVudChzcC5Ta2VsZXRvbikuc2V0QW5pbWF0aW9uKDAsXCJjYXRjaDEtNVwiLGZhbHNlKTsgLy/mspLkuK3njY7liIfmj5vliLDpo5votbDli5XnlatcclxuICAgICAgICAgICAgICAgICAgIGVsc2UgdGhpcy5hbmlSZWRQYWNrZXQuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKS5zZXRBbmltYXRpb24oMCxcImNhdGNoMS00XCIsZmFsc2UpOyAvL+S4reeNjuWIh+aPm+WIsOaLiei1sOWLleeVq1xyXG4gICAgICAgICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPSBcImVuZFwiXHJcbiAgICAgICAgICAgICAgICAgICB9LDEuNSk7XHJcbiAgICAgICAgICAgICAgICB9LDMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICAvL+iLpeWkquS5heaykuaMieS4i+Wll+e0heWMheaMiemIle+8jOioiOaVuOacg+atuDBcclxuICAgIENoZWNrQ291bnRpbnVlUHJlc3MoKXtcclxuICAgICAgIGlmKHRoaXMuUm9wZUNvdW50ICE9IHRoaXMuQnV0dHVuQ2xpY2tDaGVjaykgdGhpcy5CdXR0dW5DbGlja0NoZWNrID0gdGhpcy5Sb3BlQ291bnQ7XHJcbiAgICAgICBlbHNlIFxyXG4gICAgICAge1xyXG4gICAgICAgIHRoaXMuUm9wZUNvdW50ID0gMFxyXG4gICAgICAgIHRoaXMuQnV0dHVuQ2xpY2tDaGVjayA9IDBcclxuICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/4._Q&A/程式碼/Host1_ShowQuestion.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'db8feOc69tHCbzSR5QPl9mm', 'Host1_ShowQuestion');
// 4._Q&A/程式碼/Host1_ShowQuestion.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {
    Bar: {
      "default": null,
      type: cc.Sprite
    },
    Question: {
      "default": null,
      type: cc.Node
    },
    ShowQuestionBtn: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {},
  start: function start() {
    gameModel.QuestionCount++;
    this.AlreadyShowQuestion = false; //this.Question.getComponent(cc.Label).string = gameModel.Question[gameModel.QuestionCount]
  },
  ShowQuestion: function ShowQuestion() {
    this.OpacityAni();
    this.schedule(this.ProgressBar, 0.01);
    this.Question.active = true;
  },
  OpacityAni: function OpacityAni() {
    cc.tween(this.ShowQuestionBtn).to(0.2, {
      opacity: 0
    }).start();
  },
  ProgressBar: function ProgressBar() {
    this.Bar.getComponent(cc.Sprite).fillRange -= 0.003;

    if (this.Bar.getComponent(cc.Sprite).fillRange <= 0) {
      this.unschedule(this.ProgressBar); //gameModel.WebSocket_GameStatus_Host("start",0.1)

      cc.director.loadScene("Host2_Game");
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNC5fUSZBXFznqIvlvI/norxcXEhvc3QxX1Nob3dRdWVzdGlvbi5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJCYXIiLCJ0eXBlIiwiU3ByaXRlIiwiUXVlc3Rpb24iLCJOb2RlIiwiU2hvd1F1ZXN0aW9uQnRuIiwib25Mb2FkIiwic3RhcnQiLCJRdWVzdGlvbkNvdW50IiwiQWxyZWFkeVNob3dRdWVzdGlvbiIsIlNob3dRdWVzdGlvbiIsIk9wYWNpdHlBbmkiLCJzY2hlZHVsZSIsIlByb2dyZXNzQmFyIiwiYWN0aXZlIiwidHdlZW4iLCJ0byIsIm9wYWNpdHkiLCJnZXRDb21wb25lbnQiLCJmaWxsUmFuZ2UiLCJ1bnNjaGVkdWxlIiwiZGlyZWN0b3IiLCJsb2FkU2NlbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUF2Qjs7QUFFQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLEdBQUcsRUFBQztBQUNGLGlCQUFTLElBRFA7QUFFRkMsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRlAsS0FETTtBQU1WQyxJQUFBQSxRQUFRLEVBQUM7QUFDUCxpQkFBUyxJQURGO0FBRVBGLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDUTtBQUZGLEtBTkM7QUFXVkMsSUFBQUEsZUFBZSxFQUFDO0FBQ2QsaUJBQVMsSUFESztBQUVkSixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ1E7QUFGSztBQVhOLEdBSFA7QUFvQkxFLEVBQUFBLE1BcEJLLG9CQW9CSyxDQUNULENBckJJO0FBdUJMQyxFQUFBQSxLQXZCSyxtQkF1Qkk7QUFDUGIsSUFBQUEsU0FBUyxDQUFDYyxhQUFWO0FBQ0EsU0FBS0MsbUJBQUwsR0FBMkIsS0FBM0IsQ0FGTyxDQUdQO0FBQ0QsR0EzQkk7QUE2QkpDLEVBQUFBLFlBN0JJLDBCQTZCVTtBQUNYLFNBQUtDLFVBQUw7QUFDQSxTQUFLQyxRQUFMLENBQWMsS0FBS0MsV0FBbkIsRUFBZ0MsSUFBaEM7QUFDQSxTQUFLVixRQUFMLENBQWNXLE1BQWQsR0FBdUIsSUFBdkI7QUFDSCxHQWpDSTtBQW1DTEgsRUFBQUEsVUFuQ0ssd0JBbUNPO0FBQ1ZmLElBQUFBLEVBQUUsQ0FBQ21CLEtBQUgsQ0FBVSxLQUFLVixlQUFmLEVBQ0NXLEVBREQsQ0FDSSxHQURKLEVBQ1M7QUFBQ0MsTUFBQUEsT0FBTyxFQUFFO0FBQVYsS0FEVCxFQUVDVixLQUZEO0FBR0QsR0F2Q0k7QUF5Q0xNLEVBQUFBLFdBekNLLHlCQXlDUTtBQUNULFNBQUtiLEdBQUwsQ0FBU2tCLFlBQVQsQ0FBc0J0QixFQUFFLENBQUNNLE1BQXpCLEVBQWlDaUIsU0FBakMsSUFBOEMsS0FBOUM7O0FBQ0EsUUFBSSxLQUFLbkIsR0FBTCxDQUFTa0IsWUFBVCxDQUFzQnRCLEVBQUUsQ0FBQ00sTUFBekIsRUFBaUNpQixTQUFqQyxJQUE4QyxDQUFsRCxFQUNBO0FBQ0ksV0FBS0MsVUFBTCxDQUFnQixLQUFLUCxXQUFyQixFQURKLENBRUk7O0FBQ0FqQixNQUFBQSxFQUFFLENBQUN5QixRQUFILENBQVlDLFNBQVosQ0FBc0IsWUFBdEI7QUFDSDtBQUNKLEdBakRJLENBbURMOztBQW5ESyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgQmFyOntcclxuICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgIHR5cGU6IGNjLlNwcml0ZVxyXG4gICAgICB9LFxyXG4gICAgICBcclxuICAgICAgUXVlc3Rpb246e1xyXG4gICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgdHlwZTogY2MuTm9kZVxyXG4gICAgICB9LFxyXG5cclxuICAgICAgU2hvd1F1ZXN0aW9uQnRuOntcclxuICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgIHR5cGU6IGNjLk5vZGVcclxuICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICBnYW1lTW9kZWwuUXVlc3Rpb25Db3VudCsrXHJcbiAgICAgIHRoaXMuQWxyZWFkeVNob3dRdWVzdGlvbiA9IGZhbHNlXHJcbiAgICAgIC8vdGhpcy5RdWVzdGlvbi5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IGdhbWVNb2RlbC5RdWVzdGlvbltnYW1lTW9kZWwuUXVlc3Rpb25Db3VudF1cclxuICAgIH0sXHJcblxyXG4gICAgIFNob3dRdWVzdGlvbigpe1xyXG4gICAgICAgIHRoaXMuT3BhY2l0eUFuaSgpXHJcbiAgICAgICAgdGhpcy5zY2hlZHVsZSh0aGlzLlByb2dyZXNzQmFyLCAwLjAxKTtcclxuICAgICAgICB0aGlzLlF1ZXN0aW9uLmFjdGl2ZSA9IHRydWU7XHJcbiAgICB9LFxyXG5cclxuICAgIE9wYWNpdHlBbmkoKXtcclxuICAgICAgY2MudHdlZW4oIHRoaXMuU2hvd1F1ZXN0aW9uQnRuKVxyXG4gICAgICAudG8oMC4yLCB7b3BhY2l0eTogMH0pXHJcbiAgICAgIC5zdGFydCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICBQcm9ncmVzc0Jhcigpe1xyXG4gICAgICAgIHRoaXMuQmFyLmdldENvbXBvbmVudChjYy5TcHJpdGUpLmZpbGxSYW5nZSAtPSAwLjAwMztcclxuICAgICAgICBpZiAodGhpcy5CYXIuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuZmlsbFJhbmdlIDw9IDApXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLnVuc2NoZWR1bGUodGhpcy5Qcm9ncmVzc0Jhcik7XHJcbiAgICAgICAgICAgIC8vZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QoXCJzdGFydFwiLDAuMSlcclxuICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiSG9zdDJfR2FtZVwiKTtcclxuICAgICAgICB9IFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/5_lottery/程式/Host1_WeelShowWinner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'eeb698HErRIJKOhBXrHgdOq', 'Host1_WeelShowWinner');
// 5_lottery/程式/Host1_WeelShowWinner.js

"use strict";

var gameModel = require("Model");

var Host3_ShowNewWinner_Original = require("Host3_ShowNewWinner");

var WinnerItem2 = require("Host4_WinnerRedpaket");

cc.Class({
  "extends": Host3_ShowNewWinner_Original,
  properties: {
    Session: {
      "default": null,
      type: cc.Label
    }
  },
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  start: function start() {
    this.items_parent = cc.find("畫布/中獎列表/view/內容");
    gameModel.WebSocket_NumberOfLottery_Host();
    this.Session.string = "當前場次 : " + gameModel.Session;
  },
  SpawnNewWinner: function SpawnNewWinner() {
    this.indexcount++;
    this.index.push(this.indexcount);
    var node = cc.instantiate(this.items);
    node.parent = this.items_parent;
    node.setSiblingIndex(0); //讓子物件顯示在最上層

    var obj = node.getComponent(WinnerItem2); //抓取WinnerItem

    this.itemlist.push(obj);
    this.itemlist[this.indexcount - 1].updateInfo(this.indexcount - 1);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNV9sb3R0ZXJ5XFznqIvlvI9cXEhvc3QxX1dlZWxTaG93V2lubmVyLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJIb3N0M19TaG93TmV3V2lubmVyX09yaWdpbmFsIiwiV2lubmVySXRlbTIiLCJjYyIsIkNsYXNzIiwicHJvcGVydGllcyIsIlNlc3Npb24iLCJ0eXBlIiwiTGFiZWwiLCJzdGFydCIsIml0ZW1zX3BhcmVudCIsImZpbmQiLCJXZWJTb2NrZXRfTnVtYmVyT2ZMb3R0ZXJ5X0hvc3QiLCJzdHJpbmciLCJTcGF3bk5ld1dpbm5lciIsImluZGV4Y291bnQiLCJpbmRleCIsInB1c2giLCJub2RlIiwiaW5zdGFudGlhdGUiLCJpdGVtcyIsInBhcmVudCIsInNldFNpYmxpbmdJbmRleCIsIm9iaiIsImdldENvbXBvbmVudCIsIml0ZW1saXN0IiwidXBkYXRlSW5mbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCOztBQUNBLElBQUlDLDRCQUE0QixHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBMUM7O0FBQ0EsSUFBSUUsV0FBVyxHQUFHRixPQUFPLENBQUMsc0JBQUQsQ0FBekI7O0FBRUFHLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0gsNEJBREo7QUFHTEksRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLE9BQU8sRUFBQztBQUNKLGlCQUFRLElBREo7QUFFSkMsTUFBQUEsSUFBSSxFQUFDSixFQUFFLENBQUNLO0FBRko7QUFEQSxHQUhQO0FBVUw7QUFFQTtBQUVBQyxFQUFBQSxLQWRLLG1CQWNJO0FBQ0wsU0FBS0MsWUFBTCxHQUFvQlAsRUFBRSxDQUFDUSxJQUFILENBQVEsaUJBQVIsQ0FBcEI7QUFDQVosSUFBQUEsU0FBUyxDQUFDYSw4QkFBVjtBQUNBLFNBQUtOLE9BQUwsQ0FBYU8sTUFBYixHQUFzQixZQUFZZCxTQUFTLENBQUNPLE9BQTVDO0FBQ0gsR0FsQkk7QUFvQkxRLEVBQUFBLGNBcEJLLDRCQW9CVztBQUNaLFNBQUtDLFVBQUw7QUFDQSxTQUFLQyxLQUFMLENBQVdDLElBQVgsQ0FBZ0IsS0FBS0YsVUFBckI7QUFDQSxRQUFJRyxJQUFJLEdBQUdmLEVBQUUsQ0FBQ2dCLFdBQUgsQ0FBZSxLQUFLQyxLQUFwQixDQUFYO0FBQ0FGLElBQUFBLElBQUksQ0FBQ0csTUFBTCxHQUFjLEtBQUtYLFlBQW5CO0FBQ0FRLElBQUFBLElBQUksQ0FBQ0ksZUFBTCxDQUFxQixDQUFyQixFQUxZLENBS2E7O0FBQ3pCLFFBQUlDLEdBQUcsR0FBR0wsSUFBSSxDQUFDTSxZQUFMLENBQWtCdEIsV0FBbEIsQ0FBVixDQU5ZLENBTTZCOztBQUN6QyxTQUFLdUIsUUFBTCxDQUFjUixJQUFkLENBQW1CTSxHQUFuQjtBQUNBLFNBQUtFLFFBQUwsQ0FBYyxLQUFLVixVQUFMLEdBQWtCLENBQWhDLEVBQW1DVyxVQUFuQyxDQUE4QyxLQUFLWCxVQUFMLEdBQWtCLENBQWhFO0FBQ0gsR0E3QkksQ0ErQkw7O0FBL0JLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcbnZhciBIb3N0M19TaG93TmV3V2lubmVyX09yaWdpbmFsID0gcmVxdWlyZShcIkhvc3QzX1Nob3dOZXdXaW5uZXJcIilcclxudmFyIFdpbm5lckl0ZW0yID0gcmVxdWlyZShcIkhvc3Q0X1dpbm5lclJlZHBha2V0XCIpXHJcblxyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBIb3N0M19TaG93TmV3V2lubmVyX09yaWdpbmFsLFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBTZXNzaW9uOntcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLkxhYmVsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgLy8gb25Mb2FkICgpIHt9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICB0aGlzLml0ZW1zX3BhcmVudCA9IGNjLmZpbmQoXCLnlavluIMv5Lit542O5YiX6KGoL3ZpZXcv5YWn5a65XCIpO1xyXG4gICAgICAgIGdhbWVNb2RlbC5XZWJTb2NrZXRfTnVtYmVyT2ZMb3R0ZXJ5X0hvc3QoKTtcclxuICAgICAgICB0aGlzLlNlc3Npb24uc3RyaW5nID0gXCLnlbbliY3loLTmrKEgOiBcIiArIGdhbWVNb2RlbC5TZXNzaW9uOyBcclxuICAgIH0sXHJcblxyXG4gICAgU3Bhd25OZXdXaW5uZXIoKXtcclxuICAgICAgICB0aGlzLmluZGV4Y291bnQrKztcclxuICAgICAgICB0aGlzLmluZGV4LnB1c2godGhpcy5pbmRleGNvdW50KTtcclxuICAgICAgICB2YXIgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuaXRlbXMpO1xyXG4gICAgICAgIG5vZGUucGFyZW50ID0gdGhpcy5pdGVtc19wYXJlbnQ7XHJcbiAgICAgICAgbm9kZS5zZXRTaWJsaW5nSW5kZXgoMCk7IC8v6K6T5a2Q54mp5Lu26aGv56S65Zyo5pyA5LiK5bGkXHJcbiAgICAgICAgdmFyIG9iaiA9IG5vZGUuZ2V0Q29tcG9uZW50KFdpbm5lckl0ZW0yKTsvL+aKk+WPlldpbm5lckl0ZW1cclxuICAgICAgICB0aGlzLml0ZW1saXN0LnB1c2gob2JqKTtcclxuICAgICAgICB0aGlzLml0ZW1saXN0W3RoaXMuaW5kZXhjb3VudCAtIDFdLnVwZGF0ZUluZm8odGhpcy5pbmRleGNvdW50IC0gMSk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Ani_Opacity.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd8f4bSmc/FBfIaAx6V4dlj8', 'Ani_Opacity');
// 共用模塊/Ani_Opacity.js

"use strict";

///透明度漸層動畫js
cc.Class({
  "extends": cc.Component,
  properties: {
    Target: {
      "default": [],
      type: [cc.Node]
    }
  },
  start: function start() {
    this.CountTarget();
    this.count = 1;
  },
  CountTarget: function CountTarget() {
    this.schedule(function () {
      //每1秒鐘值行一次，重複做1次
      this.judge(this.count - 1);
    }, 0.08, this.Target.length);
  },
  judge: function judge(i) {
    if (this.count == this.Target.length + 1) this.clear();else {
      this.count += 1;
      this.Target[i].active = true;
      this.OpacityAni(this.Target[i]);
    }
  },
  clear: function clear() {
    this.count = 1;
    this.scheduleOnce(function () {
      //每1秒鐘值行一次，重複做1次
      for (var i = 0; i < this.Target.length; i++) {
        this.Target[i].active = false;
        this.Target[i].opacity = 0;
      }

      this.CountTarget();
    }, 1);
  },
  OpacityAni: function OpacityAni(node) {
    cc.tween(node).to(1, {
      opacity: 255
    }).start();
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxBbmlfT3BhY2l0eS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIlRhcmdldCIsInR5cGUiLCJOb2RlIiwic3RhcnQiLCJDb3VudFRhcmdldCIsImNvdW50Iiwic2NoZWR1bGUiLCJqdWRnZSIsImxlbmd0aCIsImkiLCJjbGVhciIsImFjdGl2ZSIsIk9wYWNpdHlBbmkiLCJzY2hlZHVsZU9uY2UiLCJvcGFjaXR5Iiwibm9kZSIsInR3ZWVuIiwidG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7QUFDQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLE1BQU0sRUFBRTtBQUNKLGlCQUFTLEVBREw7QUFFSkMsTUFBQUEsSUFBSSxFQUFFLENBQUNMLEVBQUUsQ0FBQ00sSUFBSjtBQUZGO0FBREEsR0FIUDtBQVVMQyxFQUFBQSxLQVZLLG1CQVVJO0FBQ04sU0FBS0MsV0FBTDtBQUNBLFNBQUtDLEtBQUwsR0FBYSxDQUFiO0FBQ0YsR0FiSTtBQWVMRCxFQUFBQSxXQWZLLHlCQWVRO0FBQ1QsU0FBS0UsUUFBTCxDQUFjLFlBQVc7QUFBSTtBQUN6QixXQUFLQyxLQUFMLENBQVcsS0FBS0YsS0FBTCxHQUFhLENBQXhCO0FBQ0gsS0FGRCxFQUVHLElBRkgsRUFFUSxLQUFLTCxNQUFMLENBQVlRLE1BRnBCO0FBR0gsR0FuQkk7QUFxQkxELEVBQUFBLEtBckJLLGlCQXFCQ0UsQ0FyQkQsRUFxQkc7QUFDSixRQUFHLEtBQUtKLEtBQUwsSUFBYyxLQUFLTCxNQUFMLENBQVlRLE1BQVosR0FBcUIsQ0FBdEMsRUFBeUMsS0FBS0UsS0FBTCxHQUF6QyxLQUVBO0FBQ0ksV0FBS0wsS0FBTCxJQUFjLENBQWQ7QUFDQSxXQUFLTCxNQUFMLENBQVlTLENBQVosRUFBZUUsTUFBZixHQUF3QixJQUF4QjtBQUNBLFdBQUtDLFVBQUwsQ0FBZ0IsS0FBS1osTUFBTCxDQUFZUyxDQUFaLENBQWhCO0FBQ0g7QUFDSixHQTdCSTtBQStCTEMsRUFBQUEsS0EvQkssbUJBK0JFO0FBQ0gsU0FBS0wsS0FBTCxHQUFhLENBQWI7QUFDQSxTQUFLUSxZQUFMLENBQWtCLFlBQVc7QUFBSTtBQUM3QixXQUFJLElBQUlKLENBQUMsR0FBRyxDQUFaLEVBQWVBLENBQUMsR0FBRyxLQUFLVCxNQUFMLENBQVlRLE1BQS9CLEVBQXVDQyxDQUFDLEVBQXhDLEVBQ0E7QUFDSSxhQUFLVCxNQUFMLENBQVlTLENBQVosRUFBZUUsTUFBZixHQUF3QixLQUF4QjtBQUNBLGFBQUtYLE1BQUwsQ0FBWVMsQ0FBWixFQUFlSyxPQUFmLEdBQXlCLENBQXpCO0FBQ0g7O0FBQ0QsV0FBS1YsV0FBTDtBQUNGLEtBUEYsRUFPSSxDQVBKO0FBUUgsR0F6Q0k7QUEyQ0xRLEVBQUFBLFVBM0NLLHNCQTJDTUcsSUEzQ04sRUEyQ1c7QUFDWm5CLElBQUFBLEVBQUUsQ0FBQ29CLEtBQUgsQ0FBU0QsSUFBVCxFQUNDRSxFQURELENBQ0ksQ0FESixFQUNPO0FBQUNILE1BQUFBLE9BQU8sRUFBRTtBQUFWLEtBRFAsRUFFQ1gsS0FGRDtBQUdILEdBL0NJLENBZ0RMOztBQWhESyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8v6YCP5piO5bqm5ry45bGk5YuV55WranNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBUYXJnZXQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogW10sXHJcbiAgICAgICAgICAgIHR5cGU6IFtjYy5Ob2RlXVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgIHRoaXMuQ291bnRUYXJnZXQoKTtcclxuICAgICAgIHRoaXMuY291bnQgPSAxOyBcclxuICAgIH0sXHJcblxyXG4gICAgQ291bnRUYXJnZXQoKXtcclxuICAgICAgICB0aGlzLnNjaGVkdWxlKGZ1bmN0aW9uKCkgeyAgIC8v5q+PMeenkumQmOWAvOihjOS4gOasoe+8jOmHjeikh+WBmjHmrKFcclxuICAgICAgICAgICAgdGhpcy5qdWRnZSh0aGlzLmNvdW50IC0gMSk7XHJcbiAgICAgICAgfSwgMC4wOCx0aGlzLlRhcmdldC5sZW5ndGgpO1xyXG4gICAgfSxcclxuXHJcbiAgICBqdWRnZShpKXtcclxuICAgICAgICBpZih0aGlzLmNvdW50ID09IHRoaXMuVGFyZ2V0Lmxlbmd0aCArIDEpIHRoaXMuY2xlYXIoKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50ICs9IDFcclxuICAgICAgICAgICAgdGhpcy5UYXJnZXRbaV0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgICAgICB0aGlzLk9wYWNpdHlBbmkodGhpcy5UYXJnZXRbaV0pXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBjbGVhcigpe1xyXG4gICAgICAgIHRoaXMuY291bnQgPSAxO1xyXG4gICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uKCkgeyAgIC8v5q+PMeenkumQmOWAvOihjOS4gOasoe+8jOmHjeikh+WBmjHmrKFcclxuICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMuVGFyZ2V0Lmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlRhcmdldFtpXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5UYXJnZXRbaV0ub3BhY2l0eSA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5Db3VudFRhcmdldCgpO1xyXG4gICAgICAgICB9LCAxKTtcclxuICAgIH0sXHJcblxyXG4gICAgT3BhY2l0eUFuaShub2RlKXtcclxuICAgICAgICBjYy50d2Vlbihub2RlKVxyXG4gICAgICAgIC50bygxLCB7b3BhY2l0eTogMjU1fSlcclxuICAgICAgICAuc3RhcnQoKTtcclxuICAgIH1cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/BeforeGameCountDown.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '229e69xzhlPnIkUCyDYOGKO', 'BeforeGameCountDown');
// 共用模塊/BeforeGameCountDown.js

"use strict";

var gameModel = require("Model"); //全域變數gameModel 不須加this就能提取
///主持人遊戲開始倒數js


cc.Class({
  //進入Class區域 若想提取裡面的直需要用this
  "extends": cc.Component,
  properties: {
    countdownspritelist: {
      "default": [],
      type: [cc.SpriteFrame]
    },
    countdownSound: {
      "default": null,
      type: cc.AudioClip
    },
    countdownfinishSound: {
      "default": null,
      type: cc.AudioClip
    },
    countdownsprite: cc.Sprite
  },
  onLoad: function onLoad() {
    if (cc.director.getScene()._name.includes("Host2_CountDown")) gameModel.NumberOfLotteryWS_Host = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/winning/staff?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //開啟更新得獎人的ws
  },
  start: function start() {
    this.count = 0;
    this.schedule(function () {
      //每1秒鐘值行一次，重複做4+1次
      if (cc.director.getScene()._name.includes("Guest3_CountDown")) this.Guset_countdown();else if (cc.director.getScene()._name.includes("Host2_CountDown")) this.Host_countdown();
    }, 1, 4);
  },
  //主持人遊戲開始前倒數
  Host_countdown: function Host_countdown() {
    this.count++;
    this.countdownsprite.spriteFrame = this.countdownspritelist[this.count - 1];
    if (this.count < 4) this.currentsound = cc.audioEngine.play(this.countdownSound, false, 0.5);else if (this.count == 4) {
      gameModel.WebSocket_GameStatus_Host("gaming", 0.1);
      this.currentsound = cc.audioEngine.play(this.countdownfinishSound, false, 0.5);
    } else if (this.count == 5) cc.director.loadScene("Host3_Game" + gameModel.BackGround_Theme);
  },
  //玩家遊戲開始前倒數
  Guset_countdown: function Guset_countdown() {
    this.count++;
    this.countdownsprite.spriteFrame = this.countdownspritelist[this.count - 1];
    if (this.count == 5) cc.director.loadScene("Guest4_Game" + gameModel.BackGround_Theme);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxCZWZvcmVHYW1lQ291bnREb3duLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImNvdW50ZG93bnNwcml0ZWxpc3QiLCJ0eXBlIiwiU3ByaXRlRnJhbWUiLCJjb3VudGRvd25Tb3VuZCIsIkF1ZGlvQ2xpcCIsImNvdW50ZG93bmZpbmlzaFNvdW5kIiwiY291bnRkb3duc3ByaXRlIiwiU3ByaXRlIiwib25Mb2FkIiwiZGlyZWN0b3IiLCJnZXRTY2VuZSIsIl9uYW1lIiwiaW5jbHVkZXMiLCJOdW1iZXJPZkxvdHRlcnlXU19Ib3N0IiwiV2ViU29ja2V0IiwibG9jYWxfSUQiLCJhY3Rpdml0eV9pZCIsImdhbWVfaWQiLCJHYW1lTmFtZSIsInN0YXJ0IiwiY291bnQiLCJzY2hlZHVsZSIsIkd1c2V0X2NvdW50ZG93biIsIkhvc3RfY291bnRkb3duIiwic3ByaXRlRnJhbWUiLCJjdXJyZW50c291bmQiLCJhdWRpb0VuZ2luZSIsInBsYXkiLCJXZWJTb2NrZXRfR2FtZVN0YXR1c19Ib3N0IiwibG9hZFNjZW5lIiwiQmFja0dyb3VuZF9UaGVtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCLEVBQWtDO0FBRWxDOzs7QUFDQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFBRTtBQUNQLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFFUkMsSUFBQUEsbUJBQW1CLEVBQUU7QUFDakIsaUJBQVMsRUFEUTtBQUVqQkMsTUFBQUEsSUFBSSxFQUFFLENBQUNMLEVBQUUsQ0FBQ00sV0FBSjtBQUZXLEtBRmI7QUFPUkMsSUFBQUEsY0FBYyxFQUFFO0FBQ1osaUJBQVMsSUFERztBQUVaRixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ1E7QUFGRyxLQVBSO0FBWVJDLElBQUFBLG9CQUFvQixFQUFFO0FBQ2xCLGlCQUFTLElBRFM7QUFFbEJKLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDUTtBQUZTLEtBWmQ7QUFpQlJFLElBQUFBLGVBQWUsRUFBQ1YsRUFBRSxDQUFDVztBQWpCWCxHQUhQO0FBdUJMQyxFQUFBQSxNQXZCSyxvQkF1Qks7QUFDTixRQUFHWixFQUFFLENBQUNhLFFBQUgsQ0FBWUMsUUFBWixHQUF1QkMsS0FBdkIsQ0FBNkJDLFFBQTdCLENBQXNDLGlCQUF0QyxDQUFILEVBQTZEbEIsU0FBUyxDQUFDbUIsc0JBQVYsR0FBbUMsSUFBSUMsU0FBSixDQUFjLFdBQVdwQixTQUFTLENBQUNxQixRQUFyQixHQUFnQyx3Q0FBaEMsR0FBMEVyQixTQUFTLENBQUNzQixXQUFwRixHQUFpRyxXQUFqRyxHQUErR3RCLFNBQVMsQ0FBQ3VCLE9BQXpILEdBQW1JLFFBQW5JLEdBQTZJdkIsU0FBUyxDQUFDd0IsUUFBckssQ0FBbkMsQ0FEdkQsQ0FDMFE7QUFDblIsR0F6Qkk7QUEyQkxDLEVBQUFBLEtBM0JLLG1CQTJCSTtBQUNMLFNBQUtDLEtBQUwsR0FBYSxDQUFiO0FBQ0EsU0FBS0MsUUFBTCxDQUFjLFlBQVc7QUFBRTtBQUN2QixVQUFHekIsRUFBRSxDQUFDYSxRQUFILENBQVlDLFFBQVosR0FBdUJDLEtBQXZCLENBQTZCQyxRQUE3QixDQUFzQyxrQkFBdEMsQ0FBSCxFQUE4RCxLQUFLVSxlQUFMLEdBQTlELEtBQ0ssSUFBSTFCLEVBQUUsQ0FBQ2EsUUFBSCxDQUFZQyxRQUFaLEdBQXVCQyxLQUF2QixDQUE2QkMsUUFBN0IsQ0FBc0MsaUJBQXRDLENBQUosRUFBOEQsS0FBS1csY0FBTDtBQUN0RSxLQUhELEVBR0csQ0FISCxFQUdLLENBSEw7QUFJSCxHQWpDSTtBQW1DTDtBQUNBQSxFQUFBQSxjQXBDSyw0QkFvQ1c7QUFDWixTQUFLSCxLQUFMO0FBQ0EsU0FBS2QsZUFBTCxDQUFxQmtCLFdBQXJCLEdBQW1DLEtBQUt4QixtQkFBTCxDQUF5QixLQUFLb0IsS0FBTCxHQUFXLENBQXBDLENBQW5DO0FBQ0EsUUFBSSxLQUFLQSxLQUFMLEdBQWEsQ0FBakIsRUFBb0IsS0FBS0ssWUFBTCxHQUFvQjdCLEVBQUUsQ0FBQzhCLFdBQUgsQ0FBZUMsSUFBZixDQUFvQixLQUFLeEIsY0FBekIsRUFBeUMsS0FBekMsRUFBZ0QsR0FBaEQsQ0FBcEIsQ0FBcEIsS0FDSyxJQUFJLEtBQUtpQixLQUFMLElBQWMsQ0FBbEIsRUFDTDtBQUNJMUIsTUFBQUEsU0FBUyxDQUFDa0MseUJBQVYsQ0FBb0MsUUFBcEMsRUFBNkMsR0FBN0M7QUFDQSxXQUFLSCxZQUFMLEdBQW9CN0IsRUFBRSxDQUFDOEIsV0FBSCxDQUFlQyxJQUFmLENBQW9CLEtBQUt0QixvQkFBekIsRUFBK0MsS0FBL0MsRUFBc0QsR0FBdEQsQ0FBcEI7QUFDSCxLQUpJLE1BS0EsSUFBSSxLQUFLZSxLQUFMLElBQWMsQ0FBbEIsRUFBcUJ4QixFQUFFLENBQUNhLFFBQUgsQ0FBWW9CLFNBQVosQ0FBc0IsZUFBZW5DLFNBQVMsQ0FBQ29DLGdCQUEvQztBQUM3QixHQTlDSTtBQWdETDtBQUNBUixFQUFBQSxlQWpESyw2QkFpRFk7QUFDYixTQUFLRixLQUFMO0FBQ0EsU0FBS2QsZUFBTCxDQUFxQmtCLFdBQXJCLEdBQW1DLEtBQUt4QixtQkFBTCxDQUF5QixLQUFLb0IsS0FBTCxHQUFXLENBQXBDLENBQW5DO0FBQ0EsUUFBSSxLQUFLQSxLQUFMLElBQWMsQ0FBbEIsRUFBcUJ4QixFQUFFLENBQUNhLFFBQUgsQ0FBWW9CLFNBQVosQ0FBc0IsZ0JBQWVuQyxTQUFTLENBQUNvQyxnQkFBL0M7QUFDeEIsR0FyREksQ0F1REw7O0FBdkRLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7IC8v5YWo5Z+f6K6K5pW4Z2FtZU1vZGVsIOS4jemgiOWKoHRoaXPlsLHog73mj5Dlj5ZcclxuXHJcbi8vL+S4u+aMgeS6uumBiuaIsumWi+Wni+WAkuaVuGpzXHJcbmNjLkNsYXNzKHsgLy/pgLLlhaVDbGFzc+WNgOWfnyDoi6Xmg7Pmj5Dlj5boo6HpnaLnmoTnm7TpnIDopoHnlKh0aGlzXHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG5cclxuICAgICAgICBjb3VudGRvd25zcHJpdGVsaXN0OiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IFtdLFxyXG4gICAgICAgICAgICB0eXBlOiBbY2MuU3ByaXRlRnJhbWVdXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgY291bnRkb3duU291bmQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuQXVkaW9DbGlwXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgY291bnRkb3duZmluaXNoU291bmQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuQXVkaW9DbGlwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBcclxuICAgICAgICBjb3VudGRvd25zcHJpdGU6Y2MuU3ByaXRlLFxyXG4gICAgfSxcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIGlmKGNjLmRpcmVjdG9yLmdldFNjZW5lKCkuX25hbWUuaW5jbHVkZXMoXCJIb3N0Ml9Db3VudERvd25cIikpIGdhbWVNb2RlbC5OdW1iZXJPZkxvdHRlcnlXU19Ib3N0ID0gbmV3IFdlYlNvY2tldChcIndzczovL1wiICsgZ2FtZU1vZGVsLmxvY2FsX0lEICsgXCIvd3MvdjEvZ2FtZS93aW5uaW5nL3N0YWZmP2FjdGl2aXR5X2lkPVwiKyBnYW1lTW9kZWwuYWN0aXZpdHlfaWQgKycmZ2FtZV9pZD0nICsgZ2FtZU1vZGVsLmdhbWVfaWQgKyAnJmdhbWU9JysgZ2FtZU1vZGVsLkdhbWVOYW1lKTsgLy/plovllZ/mm7TmlrDlvpfnjY7kurrnmoR3c1xyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgICAgdGhpcy5jb3VudCA9IDA7XHJcbiAgICAgICAgdGhpcy5zY2hlZHVsZShmdW5jdGlvbigpIHsgLy/mr48x56eS6ZCY5YC86KGM5LiA5qyh77yM6YeN6KSH5YGaNCsx5qyhXHJcbiAgICAgICAgICAgIGlmKGNjLmRpcmVjdG9yLmdldFNjZW5lKCkuX25hbWUuaW5jbHVkZXMoXCJHdWVzdDNfQ291bnREb3duXCIpKSB0aGlzLkd1c2V0X2NvdW50ZG93bigpO1xyXG4gICAgICAgICAgICBlbHNlIGlmIChjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLl9uYW1lLmluY2x1ZGVzKFwiSG9zdDJfQ291bnREb3duXCIpKSB0aGlzLkhvc3RfY291bnRkb3duKCk7XHJcbiAgICAgICAgfSwgMSw0KTtcclxuICAgIH0sXHJcblxyXG4gICAgLy/kuLvmjIHkurrpgYrmiLLplovlp4vliY3lgJLmlbhcclxuICAgIEhvc3RfY291bnRkb3duKCl7XHJcbiAgICAgICAgdGhpcy5jb3VudCsrO1xyXG4gICAgICAgIHRoaXMuY291bnRkb3duc3ByaXRlLnNwcml0ZUZyYW1lID0gdGhpcy5jb3VudGRvd25zcHJpdGVsaXN0W3RoaXMuY291bnQtMV07XHJcbiAgICAgICAgaWYgKHRoaXMuY291bnQgPCA0KSB0aGlzLmN1cnJlbnRzb3VuZCA9IGNjLmF1ZGlvRW5naW5lLnBsYXkodGhpcy5jb3VudGRvd25Tb3VuZCwgZmFsc2UsIDAuNSk7XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5jb3VudCA9PSA0KSBcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5XZWJTb2NrZXRfR2FtZVN0YXR1c19Ib3N0KFwiZ2FtaW5nXCIsMC4xKVxyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRzb3VuZCA9IGNjLmF1ZGlvRW5naW5lLnBsYXkodGhpcy5jb3VudGRvd25maW5pc2hTb3VuZCwgZmFsc2UsIDAuNSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuY291bnQgPT0gNSkgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiSG9zdDNfR2FtZVwiICsgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgfSxcclxuXHJcbiAgICAvL+eOqeWutumBiuaIsumWi+Wni+WJjeWAkuaVuFxyXG4gICAgR3VzZXRfY291bnRkb3duKCl7XHJcbiAgICAgICAgdGhpcy5jb3VudCsrO1xyXG4gICAgICAgIHRoaXMuY291bnRkb3duc3ByaXRlLnNwcml0ZUZyYW1lID0gdGhpcy5jb3VudGRvd25zcHJpdGVsaXN0W3RoaXMuY291bnQtMV07XHJcbiAgICAgICAgaWYgKHRoaXMuY291bnQgPT0gNSkgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR3Vlc3Q0X0dhbWVcIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTsiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/ColorString.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ad2c1/DCDFPRYkAq8aXpcf/', 'ColorString');
// 共用模塊/ColorString.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  start: function start() {},
  //調色盤
  colorOfString: function colorOfString(value) {
    if (value == null || value.length != 7) {
      return null;
    }

    var color = value.toLowerCase();

    if (color.charAt(0) != "#") {
      return;
    }

    color = color.slice(1);
    var r = parseInt(color[0] + color[1], 16);
    var g = parseInt(color[2] + color[3], 16);
    var b = parseInt(color[4] + color[5], 16);
    return new cc.Color(r, g, b, 255);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxDb2xvclN0cmluZy5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInN0YXJ0IiwiY29sb3JPZlN0cmluZyIsInZhbHVlIiwibGVuZ3RoIiwiY29sb3IiLCJ0b0xvd2VyQ2FzZSIsImNoYXJBdCIsInNsaWNlIiwiciIsInBhcnNlSW50IiwiZyIsImIiLCJDb2xvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFLEVBSFA7QUFPTDtBQUVBO0FBRUFDLEVBQUFBLEtBWEssbUJBV0ksQ0FFUixDQWJJO0FBZUw7QUFDQUMsRUFBQUEsYUFoQksseUJBZ0JTQyxLQWhCVCxFQWdCZTtBQUNmLFFBQUlBLEtBQUssSUFBSSxJQUFULElBQWlCQSxLQUFLLENBQUNDLE1BQU4sSUFBZ0IsQ0FBckMsRUFBd0M7QUFDdEMsYUFBTyxJQUFQO0FBQ0Y7O0FBQ0QsUUFBSUMsS0FBSyxHQUFHRixLQUFLLENBQUNHLFdBQU4sRUFBWjs7QUFDQSxRQUFJRCxLQUFLLENBQUNFLE1BQU4sQ0FBYSxDQUFiLEtBQW1CLEdBQXZCLEVBQTRCO0FBQ3pCO0FBQ0Y7O0FBQ0RGLElBQUFBLEtBQUssR0FBR0EsS0FBSyxDQUFDRyxLQUFOLENBQVksQ0FBWixDQUFSO0FBQ0EsUUFBSUMsQ0FBQyxHQUFHQyxRQUFRLENBQUNMLEtBQUssQ0FBQyxDQUFELENBQUwsR0FBV0EsS0FBSyxDQUFDLENBQUQsQ0FBakIsRUFBc0IsRUFBdEIsQ0FBaEI7QUFDQSxRQUFJTSxDQUFDLEdBQUdELFFBQVEsQ0FBQ0wsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXQSxLQUFLLENBQUMsQ0FBRCxDQUFqQixFQUFzQixFQUF0QixDQUFoQjtBQUNBLFFBQUlPLENBQUMsR0FBR0YsUUFBUSxDQUFDTCxLQUFLLENBQUMsQ0FBRCxDQUFMLEdBQVdBLEtBQUssQ0FBQyxDQUFELENBQWpCLEVBQXNCLEVBQXRCLENBQWhCO0FBQ0EsV0FBTyxJQUFJUixFQUFFLENBQUNnQixLQUFQLENBQWFKLENBQWIsRUFBZ0JFLENBQWhCLEVBQW1CQyxDQUFuQixFQUFzQixHQUF0QixDQUFQO0FBQ0gsR0E3QkksQ0E4Qkw7O0FBOUJLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgIFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICAvLyBvbkxvYWQgKCkge30sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBcclxuICAgIC8v6Kq/6Imy55ukXHJcbiAgICBjb2xvck9mU3RyaW5nKHZhbHVlKXtcclxuICAgICAgICAgaWYgKHZhbHVlID09IG51bGwgfHwgdmFsdWUubGVuZ3RoICE9IDcpIHtcclxuICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGNvbG9yID0gdmFsdWUudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBpZiAoY29sb3IuY2hhckF0KDApICE9IFwiI1wiKSB7XHJcbiAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0gIFxyXG4gICAgICAgIGNvbG9yID0gY29sb3Iuc2xpY2UoMSk7XHJcbiAgICAgICAgdmFyIHIgPSBwYXJzZUludChjb2xvclswXSArIGNvbG9yWzFdLCAxNik7XHJcbiAgICAgICAgdmFyIGcgPSBwYXJzZUludChjb2xvclsyXSArIGNvbG9yWzNdLCAxNik7XHJcbiAgICAgICAgdmFyIGIgPSBwYXJzZUludChjb2xvcls0XSArIGNvbG9yWzVdLCAxNik7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBjYy5Db2xvcihyLCBnLCBiLCAyNTUpO1xyXG4gICAgfSxcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Ani_UPandDOWN.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '89209mb7B5E7opQmXjzQ00M', 'Ani_UPandDOWN');
// 共用模塊/Ani_UPandDOWN.js

"use strict";

///動畫控制js
cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {
    cc.tween(this.node).repeatForever(cc.tween().by(0.8, {
      position: cc.v2(0, 80)
    }).by(0.8, {
      position: cc.v2(0, -80)
    })).start();
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxBbmlfVVBhbmRET1dOLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwib25Mb2FkIiwidHdlZW4iLCJub2RlIiwicmVwZWF0Rm9yZXZlciIsImJ5IiwicG9zaXRpb24iLCJ2MiIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0FBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBTUxDLEVBQUFBLE1BTkssb0JBTUs7QUFDVEosSUFBQUEsRUFBRSxDQUFDSyxLQUFILENBQVMsS0FBS0MsSUFBZCxFQUNBQyxhQURBLENBQ2NQLEVBQUUsQ0FBQ0ssS0FBSCxHQUNkRyxFQURjLENBQ1gsR0FEVyxFQUNOO0FBQUVDLE1BQUFBLFFBQVEsRUFBRVQsRUFBRSxDQUFDVSxFQUFILENBQU0sQ0FBTixFQUFTLEVBQVQ7QUFBWixLQURNLEVBRWRGLEVBRmMsQ0FFWCxHQUZXLEVBRU47QUFBRUMsTUFBQUEsUUFBUSxFQUFFVCxFQUFFLENBQUNVLEVBQUgsQ0FBTSxDQUFOLEVBQVMsQ0FBQyxFQUFWO0FBQVosS0FGTSxDQURkLEVBS0FDLEtBTEE7QUFNQSxHQWJJO0FBZUxBLEVBQUFBLEtBZkssbUJBZUksQ0FFUixDQWpCSSxDQW1CTDs7QUFuQkssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8vL+WLleeVq+aOp+WItmpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgY2MudHdlZW4odGhpcy5ub2RlKVxyXG4gICAgLnJlcGVhdEZvcmV2ZXIoY2MudHdlZW4oKVxyXG4gICAgLmJ5KDAuOCwgeyBwb3NpdGlvbjogY2MudjIoMCwgODApfSlcclxuICAgIC5ieSgwLjgsIHsgcG9zaXRpb246IGNjLnYyKDAsIC04MCl9KVxyXG4gICAgKVxyXG4gICAgLnN0YXJ0KClcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG5cclxuICAgIH0sXHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Ani_Rotation.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '83d5dDiahZKOLzPToLJTyQw', 'Ani_Rotation');
// 共用模塊/Ani_Rotation.js

"use strict";

///動畫控制js
cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {
    cc.tween(this.node).repeatForever(cc.tween().by(15, {
      angle: 360
    })).start();
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxBbmlfUm90YXRpb24uanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJvbkxvYWQiLCJ0d2VlbiIsIm5vZGUiLCJyZXBlYXRGb3JldmVyIiwiYnkiLCJhbmdsZSIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0FBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBTUxDLEVBQUFBLE1BTkssb0JBTUs7QUFDVEosSUFBQUEsRUFBRSxDQUFDSyxLQUFILENBQVMsS0FBS0MsSUFBZCxFQUNBQyxhQURBLENBQ2NQLEVBQUUsQ0FBQ0ssS0FBSCxHQUNkRyxFQURjLENBQ1gsRUFEVyxFQUNQO0FBQUVDLE1BQUFBLEtBQUssRUFBRTtBQUFULEtBRE8sQ0FEZCxFQUlBQyxLQUpBO0FBS0EsR0FaSTtBQWNMQSxFQUFBQSxLQWRLLG1CQWNJLENBRVIsQ0FoQkksQ0FrQkw7O0FBbEJLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vLy/li5XnlavmjqfliLZqc1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgfSxcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgIGNjLnR3ZWVuKHRoaXMubm9kZSlcclxuICAgIC5yZXBlYXRGb3JldmVyKGNjLnR3ZWVuKClcclxuICAgIC5ieSgxNSwgeyBhbmdsZTogMzYwIH0pXHJcbiAgICApXHJcbiAgICAuc3RhcnQoKVxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcblxyXG4gICAgfSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest1_ConfirmDeviceMotionEvent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8f065kKO3ZMjZ+0XvZbCxxo', 'Guest1_ConfirmDeviceMotionEvent');
// 共用模塊/Guest1_ConfirmDeviceMotionEvent.js

"use strict";

var gameModel = require("Model"); ///確認玩家是否為陀螺儀和加入遊戲js


cc.Class({
  "extends": cc.Component,
  properties: {
    WrongAlert: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    this.join = false; //是否按下加入遊戲按鈕

    this.AlertText = cc.find("畫布/警告/警告文字");
    gameModel.TopTitle = cc.find("畫布/場景/標題").getComponent(cc.Sprite).spriteFrame;
    gameModel.Prize_BackGround = cc.find("畫布/場景/背景").getComponent(cc.Sprite).spriteFrame;
    gameModel.Guest1_Join_JS = this;
  },
  start: function start() {
    //啟動陀螺儀
    cc.systemEvent.setAccelerometerEnabled(true);
    cc.systemEvent.on(cc.SystemEvent.EventType.DEVICEMOTION, this.onDeviceMotionEvent, this);

    if (gameModel.HostWindow == "close") {
      this.AlertText.getComponent(cc.Label).string = "主辦單位已關閉視窗，遊戲中止";
      this.WrongAlert.active = true;
    }
  },
  onDeviceMotionEvent: function onDeviceMotionEvent(event) {
    var x = event.acc.x.toFixed(2);
    var y = event.acc.y.toFixed(2);
    var z = event.acc.z.toFixed(2);
    var speed = parseFloat(x) + parseFloat(y) + parseFloat(z);

    if (speed == 0.00 && cc.sys.os == "Android" && this.join == true && gameModel.GameStatusMessage != "close" && gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲") //如果是安卓，且沒陀螺儀功能則跳出 "此設備不支援搖一搖功能!" 的警告
      {
        this.AlertText.getComponent(cc.Label).string = "此設備不支援搖一搖功能";
        this.WrongAlert.active = true;
        cc.systemEvent.setAccelerometerEnabled(false);
      } else if (speed != 0.00 && cc.sys.os == "Android" && this.join == true && gameModel.GameStatusMessage != "close") //如果是安卓，且有陀螺儀功能則啟動WebSocket_NumberOfPeople_Guest傳送玩家cookie給後端，並進入玩家等待遊戲開始畫面
      {
        this.join = false;
        gameModel.WebSocket_NumberOfPeople_Guest(500, true);
      } else if (gameModel.GameStatusMessage == "close" && gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲" && this.join == true) {
      this.join = false;
      this.AlertText.getComponent(cc.Label).string = "請等待主辦方連接後再加入遊戲";
      this.WrongAlert.active = true;
    }
  },
  //加入遊戲鍵: 要求Iphone客戶打開陀螺儀，判斷Android客戶是否有陀螺儀
  JoinGame: function JoinGame() {
    var _this = this;

    this.join = true;

    if (cc.sys.os == "iOS" && this.join == true && gameModel.GameStatusMessage != "close") {
      if (typeof DeviceOrientationEvent.requestPermission === 'function') {
        DeviceOrientationEvent.requestPermission().then(function (permissionState) {
          if (permissionState === 'granted') {
            gameModel.WebSocket_NumberOfPeople_Guest(500, true);
            _this.join = false;
          } else {//取消
          }
        })["catch"](function (err) {
          console.log(err);
        });
      } else {}
    } else if (gameModel.GameStatusMessage == "close" && gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲" && this.join == true) {
      this.join = false;
      this.AlertText.getComponent(cc.Label).string = "請等待主辦方連接後再加入遊戲";
      this.WrongAlert.active = true;
    }
  },
  ConnetSuccess: function ConnetSuccess() {
    if (gameModel.CannotJoinGame == "") cc.director.loadScene("Guest2_Wait" + gameModel.BackGround_Theme);else {
      this.AlertText.getComponent(cc.Label).string = gameModel.CannotJoinGame;
      this.WrongAlert.active = true;
    }
  },
  ConnetFail: function ConnetFail() {
    this.AlertText.getComponent(cc.Label).string = "無法連接伺服器";
    this.WrongAlert.active = true;
  },
  CloseAlert: function CloseAlert() {
    this.WrongAlert.active = false;
    if (gameModel.CannotJoinGame == "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲" && gameModel.HostWindow != "close") cc.director.loadScene("Guest5_Prize" + gameModel.BackGround_Theme);else gameModel.HostWindow = "open";
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/BackGround_Theme.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0f50cGW9sJAaIe0BHTkMxzZ', 'BackGround_Theme');
// 共用模塊/BackGround_Theme.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.boo = "炸彈";
  },
  start: function start() {
    var self = this;
    cc.resources.load("winter/" + this.boo, cc.SpriteFrame, function (err, spriteFrame) {
      self.node.getComponent(cc.Sprite).spriteFrame = spriteFrame;
    });
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxCYWNrR3JvdW5kX1RoZW1lLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIm9uTG9hZCIsImJvbyIsInN0YXJ0Iiwic2VsZiIsInJlc291cmNlcyIsImxvYWQiLCJTcHJpdGVGcmFtZSIsImVyciIsInNwcml0ZUZyYW1lIiwibm9kZSIsImdldENvbXBvbmVudCIsIlNwcml0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCOztBQUVBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQU1MO0FBRUFDLEVBQUFBLE1BUkssb0JBUUs7QUFDTixTQUFLQyxHQUFMLEdBQVcsSUFBWDtBQUNILEdBVkk7QUFZTEMsRUFBQUEsS0FaSyxtQkFZSTtBQUNMLFFBQUlDLElBQUksR0FBRyxJQUFYO0FBQ0FQLElBQUFBLEVBQUUsQ0FBQ1EsU0FBSCxDQUFhQyxJQUFiLENBQWtCLFlBQVksS0FBS0osR0FBbkMsRUFBd0NMLEVBQUUsQ0FBQ1UsV0FBM0MsRUFBd0QsVUFBVUMsR0FBVixFQUFlQyxXQUFmLEVBQTRCO0FBQ2hGTCxNQUFBQSxJQUFJLENBQUNNLElBQUwsQ0FBVUMsWUFBVixDQUF1QmQsRUFBRSxDQUFDZSxNQUExQixFQUFrQ0gsV0FBbEMsR0FBZ0RBLFdBQWhEO0FBQ0gsS0FGRDtBQUlILEdBbEJJLENBb0JMOztBQXBCSyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLmJvbyA9IFwi54K45b2IXCJcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICBjYy5yZXNvdXJjZXMubG9hZChcIndpbnRlci9cIiArIHRoaXMuYm9vLCBjYy5TcHJpdGVGcmFtZSwgZnVuY3Rpb24gKGVyciwgc3ByaXRlRnJhbWUpIHtcclxuICAgICAgICAgICAgc2VsZi5ub2RlLmdldENvbXBvbmVudChjYy5TcHJpdGUpLnNwcml0ZUZyYW1lID0gc3ByaXRlRnJhbWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest2_WaitForStart.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6dc05RqXWxMa4vuAhRC6dsu', 'Guest2_WaitForStart');
// 共用模塊/Guest2_WaitForStart.js

"use strict";

var gameModel = require("Model"); ///玩家等待開始並取得遊戲資訊js


cc.Class({
  "extends": cc.Component,
  properties: {},
  start: function start() {
    this.waitonesecond = false;
    this.scheduleOnce(function () {
      this.waitonesecond = true;
    }, 1.1);
  },
  update: function update(dt) {
    if ((gameModel.GameStatusMessage == "start" || gameModel.GameStatusMessage == "gaming") && this.waitonesecond == true) {
      if (gameModel.AlreadyPlayed == 0) cc.director.loadScene("Guest3_CountDown" + gameModel.BackGround_Theme);else cc.director.loadScene("Guest5_Prize");
    } else if (gameModel.GameStatusMessage == "end" && this.waitonesecond == true) cc.director.loadScene("Guest5_Prize" + gameModel.BackGround_Theme);else if (gameModel.GameStatusMessage == "close" && this.waitonesecond == true) {
      gameModel.HostWindow = "close";
      cc.director.loadScene("Guest1_JoinGame" + gameModel.BackGround_Theme);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxHdWVzdDJfV2FpdEZvclN0YXJ0LmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInN0YXJ0Iiwid2FpdG9uZXNlY29uZCIsInNjaGVkdWxlT25jZSIsInVwZGF0ZSIsImR0IiwiR2FtZVN0YXR1c01lc3NhZ2UiLCJBbHJlYWR5UGxheWVkIiwiZGlyZWN0b3IiLCJsb2FkU2NlbmUiLCJCYWNrR3JvdW5kX1RoZW1lIiwiSG9zdFdpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCLEVBRUE7OztBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQU9MQyxFQUFBQSxLQVBLLG1CQU9JO0FBQ1AsU0FBS0MsYUFBTCxHQUFxQixLQUFyQjtBQUNBLFNBQUtDLFlBQUwsQ0FBa0IsWUFBVztBQUMzQixXQUFLRCxhQUFMLEdBQXFCLElBQXJCO0FBQ0gsS0FGQyxFQUVDLEdBRkQ7QUFHRCxHQVpJO0FBY0xFLEVBQUFBLE1BZEssa0JBY0dDLEVBZEgsRUFjTztBQUNQLFFBQUcsQ0FBQ1YsU0FBUyxDQUFDVyxpQkFBVixJQUErQixPQUEvQixJQUEwQ1gsU0FBUyxDQUFDVyxpQkFBVixJQUErQixRQUExRSxLQUF1RixLQUFLSixhQUFMLElBQXNCLElBQWhILEVBQ0E7QUFDRSxVQUFHUCxTQUFTLENBQUNZLGFBQVYsSUFBMkIsQ0FBOUIsRUFBaUNWLEVBQUUsQ0FBQ1csUUFBSCxDQUFZQyxTQUFaLENBQXNCLHFCQUFvQmQsU0FBUyxDQUFDZSxnQkFBcEQsRUFBakMsS0FDS2IsRUFBRSxDQUFDVyxRQUFILENBQVlDLFNBQVosQ0FBc0IsY0FBdEI7QUFDTixLQUpELE1BS0ssSUFBSWQsU0FBUyxDQUFDVyxpQkFBVixJQUErQixLQUEvQixJQUF3QyxLQUFLSixhQUFMLElBQXNCLElBQWxFLEVBQXdFTCxFQUFFLENBQUNXLFFBQUgsQ0FBWUMsU0FBWixDQUFzQixpQkFBZ0JkLFNBQVMsQ0FBQ2UsZ0JBQWhELEVBQXhFLEtBQ0EsSUFBSWYsU0FBUyxDQUFDVyxpQkFBVixJQUErQixPQUEvQixJQUEwQyxLQUFLSixhQUFMLElBQXNCLElBQXBFLEVBQ0w7QUFDS1AsTUFBQUEsU0FBUyxDQUFDZ0IsVUFBVixHQUF1QixPQUF2QjtBQUNBZCxNQUFBQSxFQUFFLENBQUNXLFFBQUgsQ0FBWUMsU0FBWixDQUFzQixvQkFBbUJkLFNBQVMsQ0FBQ2UsZ0JBQW5EO0FBQ0o7QUFDTDtBQTFCSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5cclxuLy8v546p5a62562J5b6F6ZaL5aeL5Lim5Y+W5b6X6YGK5oiy6LOH6KiKanNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgIFxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgIHRoaXMud2FpdG9uZXNlY29uZCA9IGZhbHNlO1xyXG4gICAgICB0aGlzLnNjaGVkdWxlT25jZShmdW5jdGlvbigpIHsgXHJcbiAgICAgICAgdGhpcy53YWl0b25lc2Vjb25kID0gdHJ1ZTtcclxuICAgIH0sIDEuMSk7XHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZSAoZHQpIHtcclxuICAgICAgICAgaWYoKGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcInN0YXJ0XCIgfHwgZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiZ2FtaW5nXCIpICYmIHRoaXMud2FpdG9uZXNlY29uZCA9PSB0cnVlIClcclxuICAgICAgICAge1xyXG4gICAgICAgICAgIGlmKGdhbWVNb2RlbC5BbHJlYWR5UGxheWVkID09IDApIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIkd1ZXN0M19Db3VudERvd25cIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgICAgICAgIGVsc2UgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR3Vlc3Q1X1ByaXplXCIpO1xyXG4gICAgICAgICB9IFxyXG4gICAgICAgICBlbHNlIGlmIChnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPT0gXCJlbmRcIiAmJiB0aGlzLndhaXRvbmVzZWNvbmQgPT0gdHJ1ZSkgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR3Vlc3Q1X1ByaXplXCIrIGdhbWVNb2RlbC5CYWNrR3JvdW5kX1RoZW1lKTtcclxuICAgICAgICAgZWxzZSBpZiAoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiY2xvc2VcIiAmJiB0aGlzLndhaXRvbmVzZWNvbmQgPT0gdHJ1ZSkgXHJcbiAgICAgICAgIHtcclxuICAgICAgICAgICAgICBnYW1lTW9kZWwuSG9zdFdpbmRvdyA9IFwiY2xvc2VcIlxyXG4gICAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIkd1ZXN0MV9Kb2luR2FtZVwiKyBnYW1lTW9kZWwuQmFja0dyb3VuZF9UaGVtZSk7XHJcbiAgICAgICAgIH1cclxuICAgIH0sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest1_JoinGame.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bb6f1qnP6hJZbNXL4cYNlkr', 'Guest1_JoinGame');
// 共用模塊/Guest1_JoinGame.js

"use strict";

var gameModel = require("Model"); //玩家加入遊戲js


cc.Class({
  "extends": cc.Component,
  properties: {
    WrongAlert: {
      "default": null,
      type: cc.Node
    },
    AlertText: {
      "default": null,
      type: cc.Label
    }
  },
  start: function start() {
    gameModel.Guest1_Join_JS = this;
    gameModel.TopTitle = cc.find("畫布/場景/標題").getComponent(cc.Sprite).spriteFrame;
    gameModel.Prize_BackGround = cc.find("畫布/場景/背景").getComponent(cc.Sprite).spriteFrame;

    if (gameModel.HostWindow == "close") {
      this.AlertText.string = "主辦單位已關閉視窗，遊戲中止";
      this.WrongAlert.active = true;
    }
  },
  JoinGame: function JoinGame() {
    if (gameModel.GameStatusMessage == "close" && gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲") {
      this.AlertText.string = "請等待主辦方連接後再加入遊戲";
      this.WrongAlert.active = true;
    } else gameModel.WebSocket_NumberOfPeople_Guest(500, true);
  },
  ConnetSuccess: function ConnetSuccess() {
    if (gameModel.CannotJoinGame == "") cc.director.loadScene("Guest2_Wait" + gameModel.BackGround_Theme);else {
      this.AlertText.string = gameModel.CannotJoinGame;
      this.WrongAlert.active = true;
    }
  },
  ConnetFail: function ConnetFail() {
    this.AlertText.string = "無法連接伺服器";
    this.WrongAlert.active = true;
  },
  CloseAlert: function CloseAlert() {
    this.WrongAlert.active = false;
    if (gameModel.CannotJoinGame == "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲" && gameModel.HostWindow != "close") cc.director.loadScene("Guest5_Prize" + gameModel.BackGround_Theme);else gameModel.HostWindow = "open";
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxHdWVzdDFfSm9pbkdhbWUuanMiXSwibmFtZXMiOlsiZ2FtZU1vZGVsIiwicmVxdWlyZSIsImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiV3JvbmdBbGVydCIsInR5cGUiLCJOb2RlIiwiQWxlcnRUZXh0IiwiTGFiZWwiLCJzdGFydCIsIkd1ZXN0MV9Kb2luX0pTIiwiVG9wVGl0bGUiLCJmaW5kIiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwic3ByaXRlRnJhbWUiLCJQcml6ZV9CYWNrR3JvdW5kIiwiSG9zdFdpbmRvdyIsInN0cmluZyIsImFjdGl2ZSIsIkpvaW5HYW1lIiwiR2FtZVN0YXR1c01lc3NhZ2UiLCJDYW5ub3RKb2luR2FtZSIsIldlYlNvY2tldF9OdW1iZXJPZlBlb3BsZV9HdWVzdCIsIkNvbm5ldFN1Y2Nlc3MiLCJkaXJlY3RvciIsImxvYWRTY2VuZSIsIkJhY2tHcm91bmRfVGhlbWUiLCJDb25uZXRGYWlsIiwiQ2xvc2VBbGVydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCLEVBRUE7OztBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsVUFBVSxFQUFDO0FBQ1AsaUJBQVEsSUFERDtBQUVQQyxNQUFBQSxJQUFJLEVBQUNMLEVBQUUsQ0FBQ007QUFGRCxLQURIO0FBTVJDLElBQUFBLFNBQVMsRUFBQztBQUNOLGlCQUFRLElBREY7QUFFTkYsTUFBQUEsSUFBSSxFQUFDTCxFQUFFLENBQUNRO0FBRkY7QUFORixHQUhQO0FBZUxDLEVBQUFBLEtBZkssbUJBZUk7QUFDTlgsSUFBQUEsU0FBUyxDQUFDWSxjQUFWLEdBQTJCLElBQTNCO0FBQ0FaLElBQUFBLFNBQVMsQ0FBQ2EsUUFBVixHQUFxQlgsRUFBRSxDQUFDWSxJQUFILENBQVEsVUFBUixFQUFvQkMsWUFBcEIsQ0FBaUNiLEVBQUUsQ0FBQ2MsTUFBcEMsRUFBNENDLFdBQWpFO0FBQ0FqQixJQUFBQSxTQUFTLENBQUNrQixnQkFBVixHQUE2QmhCLEVBQUUsQ0FBQ1ksSUFBSCxDQUFRLFVBQVIsRUFBb0JDLFlBQXBCLENBQWlDYixFQUFFLENBQUNjLE1BQXBDLEVBQTRDQyxXQUF6RTs7QUFDQSxRQUFHakIsU0FBUyxDQUFDbUIsVUFBVixJQUF3QixPQUEzQixFQUNBO0FBQ0MsV0FBS1YsU0FBTCxDQUFlVyxNQUFmLEdBQXdCLGdCQUF4QjtBQUNBLFdBQUtkLFVBQUwsQ0FBZ0JlLE1BQWhCLEdBQXlCLElBQXpCO0FBQ0E7QUFDSCxHQXhCSTtBQTBCTEMsRUFBQUEsUUExQkssc0JBMEJLO0FBQ04sUUFBSXRCLFNBQVMsQ0FBQ3VCLGlCQUFWLElBQStCLE9BQS9CLElBQTBDdkIsU0FBUyxDQUFDd0IsY0FBVixJQUE0QixpQ0FBMUUsRUFDQTtBQUNFLFdBQUtmLFNBQUwsQ0FBZVcsTUFBZixHQUF3QixnQkFBeEI7QUFDQSxXQUFLZCxVQUFMLENBQWdCZSxNQUFoQixHQUF5QixJQUF6QjtBQUNELEtBSkQsTUFLS3JCLFNBQVMsQ0FBQ3lCLDhCQUFWLENBQXlDLEdBQXpDLEVBQTZDLElBQTdDO0FBQ1IsR0FqQ0k7QUFtQ0xDLEVBQUFBLGFBbkNLLDJCQW1DVTtBQUNiLFFBQUcxQixTQUFTLENBQUN3QixjQUFWLElBQTRCLEVBQS9CLEVBQW1DdEIsRUFBRSxDQUFDeUIsUUFBSCxDQUFZQyxTQUFaLENBQXNCLGdCQUFlNUIsU0FBUyxDQUFDNkIsZ0JBQS9DLEVBQW5DLEtBRUE7QUFDRSxXQUFLcEIsU0FBTCxDQUFlVyxNQUFmLEdBQXdCcEIsU0FBUyxDQUFDd0IsY0FBbEM7QUFDQSxXQUFLbEIsVUFBTCxDQUFnQmUsTUFBaEIsR0FBeUIsSUFBekI7QUFDRDtBQUNGLEdBMUNJO0FBNENMUyxFQUFBQSxVQTVDSyx3QkE0Q087QUFDVixTQUFLckIsU0FBTCxDQUFlVyxNQUFmLEdBQXdCLFNBQXhCO0FBQ0EsU0FBS2QsVUFBTCxDQUFnQmUsTUFBaEIsR0FBeUIsSUFBekI7QUFDRCxHQS9DSTtBQWlETFUsRUFBQUEsVUFqREssd0JBaURPO0FBQ1YsU0FBS3pCLFVBQUwsQ0FBZ0JlLE1BQWhCLEdBQXlCLEtBQXpCO0FBQ0EsUUFBR3JCLFNBQVMsQ0FBQ3dCLGNBQVYsSUFBNEIsaUNBQTVCLElBQWlFeEIsU0FBUyxDQUFDbUIsVUFBVixJQUF3QixPQUE1RixFQUFxR2pCLEVBQUUsQ0FBQ3lCLFFBQUgsQ0FBWUMsU0FBWixDQUFzQixpQkFBZ0I1QixTQUFTLENBQUM2QixnQkFBaEQsRUFBckcsS0FDSzdCLFNBQVMsQ0FBQ21CLFVBQVYsR0FBdUIsTUFBdkI7QUFDTjtBQXJESSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5cclxuLy/njqnlrrbliqDlhaXpgYrmiLJqc1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIFdyb25nQWxlcnQ6e1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTm9kZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgQWxlcnRUZXh0OntcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLkxhYmVsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgZ2FtZU1vZGVsLkd1ZXN0MV9Kb2luX0pTID0gdGhpcztcclxuICAgICAgIGdhbWVNb2RlbC5Ub3BUaXRsZSA9IGNjLmZpbmQoXCLnlavluIMv5aC05pmvL+aomemhjFwiKS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZVxyXG4gICAgICAgZ2FtZU1vZGVsLlByaXplX0JhY2tHcm91bmQgPSBjYy5maW5kKFwi55Wr5biDL+WgtOaZry/og4zmma9cIikuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWVcclxuICAgICAgIGlmKGdhbWVNb2RlbC5Ib3N0V2luZG93ID09IFwiY2xvc2VcIilcclxuICAgICAgIHtcclxuICAgICAgICB0aGlzLkFsZXJ0VGV4dC5zdHJpbmcgPSBcIuS4u+i+puWWruS9jeW3sumXnOmWieimlueql++8jOmBiuaIsuS4reatolwiXHJcbiAgICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IHRydWVcclxuICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBcclxuICAgIEpvaW5HYW1lKCl7XHJcbiAgICAgICAgaWYgKGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcImNsb3NlXCIgJiYgZ2FtZU1vZGVsLkNhbm5vdEpvaW5HYW1lICE9IFwi6Yyv6KqkOiDoqbLloLTmrKHpgYrmiLLkuI3lhYHoqLHph43opIfkuK3njY7vvIzmgqjlt7LkuK3njY7vvIznhKHms5Xlj4PliqDkuIvkuIDovKrpgYrmiLJcIilcclxuICAgICAgICB7XHJcbiAgICAgICAgICB0aGlzLkFsZXJ0VGV4dC5zdHJpbmcgPSBcIuiri+etieW+heS4u+i+puaWuemAo+aOpeW+jOWGjeWKoOWFpemBiuaIslwiO1xyXG4gICAgICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IHRydWVcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBnYW1lTW9kZWwuV2ViU29ja2V0X051bWJlck9mUGVvcGxlX0d1ZXN0KDUwMCx0cnVlKTtcclxuICAgIH0sXHJcblxyXG4gICAgQ29ubmV0U3VjY2Vzcygpe1xyXG4gICAgICBpZihnYW1lTW9kZWwuQ2Fubm90Sm9pbkdhbWUgPT0gXCJcIikgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR3Vlc3QyX1dhaXRcIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgICBlbHNlXHJcbiAgICAgIHtcclxuICAgICAgICB0aGlzLkFsZXJ0VGV4dC5zdHJpbmcgPSBnYW1lTW9kZWwuQ2Fubm90Sm9pbkdhbWU7XHJcbiAgICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IHRydWVcclxuICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBDb25uZXRGYWlsKCl7XHJcbiAgICAgIHRoaXMuQWxlcnRUZXh0LnN0cmluZyA9IFwi54Sh5rOV6YCj5o6l5Ly65pyN5ZmoXCJcclxuICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IHRydWVcclxuICAgIH0sXHJcblxyXG4gICAgQ2xvc2VBbGVydCgpe1xyXG4gICAgICB0aGlzLldyb25nQWxlcnQuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgIGlmKGdhbWVNb2RlbC5DYW5ub3RKb2luR2FtZSA9PSBcIumMr+iqpDog6Kmy5aC05qyh6YGK5oiy5LiN5YWB6Kix6YeN6KSH5Lit542O77yM5oKo5bey5Lit542O77yM54Sh5rOV5Y+D5Yqg5LiL5LiA6Lyq6YGK5oiyXCIgJiYgZ2FtZU1vZGVsLkhvc3RXaW5kb3cgIT0gXCJjbG9zZVwiKSBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJHdWVzdDVfUHJpemVcIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgICBlbHNlIGdhbWVNb2RlbC5Ib3N0V2luZG93ID0gXCJvcGVuXCJcclxuICAgIH1cclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest1_PrizeInformation.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b83ce5vZENGcp/Bx3GTkY93', 'Guest1_PrizeInformation');
// 共用模塊/Guest1_PrizeInformation.js

"use strict";

var gameModel = require("Model");

var RecordItem = require('Guest5_PrizeRecordItem'); ///玩家將獎品資訊在加入遊戲場景顯示出來js


cc.Class({
  "extends": cc.Component,
  properties: {
    prize_information: {
      "default": null,
      type: cc.Node
    },
    prize_information_Btn: {
      "default": null,
      type: cc.Sprite
    },
    prize_Btn_UP: {
      "default": null,
      type: cc.SpriteFrame
    },
    prize_Btn_DOWN: {
      "default": null,
      type: cc.SpriteFrame
    },
    prize_information_Item: {
      "default": null,
      type: cc.Prefab
    },
    items_parent: {
      "default": null,
      type: cc.Node
    }
  },
  onload: function onload() {},
  start: function start() {
    this.OpenPrize_Information = false;
    this.itemlist = [];
    this.indexcount = 0;
    this.SpawnPrizeInformation();
  },
  PrizeInformation_Press: function PrizeInformation_Press() {
    if (this.OpenPrize_Information == false) {
      this.prize_information_Btn.spriteFrame = this.prize_Btn_DOWN;
      this.OpenPrize_Information = true;
      cc.tween(this.prize_information).to(0.1, {
        position: cc.v2(0, -158)
      }).start();
    } else {
      this.prize_information_Btn.spriteFrame = this.prize_Btn_UP;
      cc.tween(this.prize_information).to(0.2, {
        position: cc.v2(0, -2527)
      }).start();
      this.OpenPrize_Information = false;
    }
  },
  SpawnPrizeInformation: function SpawnPrizeInformation() {
    for (var i = 0; i < gameModel.prize_name_guest.length; i++) {
      var node = cc.instantiate(this.prize_information_Item); //clone已有節點，生成items格式

      node.parent = this.items_parent;
      var obj = node.getComponent(RecordItem); //抓取RecordItem

      if (gameModel.exchangePrize[i] == "yes") node.setSiblingIndex(gameModel.prize_name_guest.length);else node.setSiblingIndex(0);
      obj.updateInfo(i);
    }

    this.indexcount = gameModel.prize_name_guest.length - 1;
  },
  SpawnPrize: function SpawnPrize() {
    this.indexcount++;
    var node = cc.instantiate(this.prize_information_Item); //clone已有節點，生成items格式

    node.parent = this.items_parent;
    node.setSiblingIndex(0); //讓子物件顯示在最上層

    var obj = node.getComponent(RecordItem); //抓取RecordItem

    obj.updatePrizeBlock(this.indexcount);
  },
  update: function update(dt) {}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxHdWVzdDFfUHJpemVJbmZvcm1hdGlvbi5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiUmVjb3JkSXRlbSIsImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwicHJpemVfaW5mb3JtYXRpb24iLCJ0eXBlIiwiTm9kZSIsInByaXplX2luZm9ybWF0aW9uX0J0biIsIlNwcml0ZSIsInByaXplX0J0bl9VUCIsIlNwcml0ZUZyYW1lIiwicHJpemVfQnRuX0RPV04iLCJwcml6ZV9pbmZvcm1hdGlvbl9JdGVtIiwiUHJlZmFiIiwiaXRlbXNfcGFyZW50Iiwib25sb2FkIiwic3RhcnQiLCJPcGVuUHJpemVfSW5mb3JtYXRpb24iLCJpdGVtbGlzdCIsImluZGV4Y291bnQiLCJTcGF3blByaXplSW5mb3JtYXRpb24iLCJQcml6ZUluZm9ybWF0aW9uX1ByZXNzIiwic3ByaXRlRnJhbWUiLCJ0d2VlbiIsInRvIiwicG9zaXRpb24iLCJ2MiIsImkiLCJwcml6ZV9uYW1lX2d1ZXN0IiwibGVuZ3RoIiwibm9kZSIsImluc3RhbnRpYXRlIiwicGFyZW50Iiwib2JqIiwiZ2V0Q29tcG9uZW50IiwiZXhjaGFuZ2VQcml6ZSIsInNldFNpYmxpbmdJbmRleCIsInVwZGF0ZUluZm8iLCJTcGF3blByaXplIiwidXBkYXRlUHJpemVCbG9jayIsInVwZGF0ZSIsImR0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBeEIsRUFFQTs7O0FBQ0FFLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxpQkFBaUIsRUFBQztBQUNkLGlCQUFRLElBRE07QUFFZEMs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M0IsR0FBb0MsQ0FBdEQ7QUFDSCxHQTFFSTtBQTRFTFMsRUFBQUEsVUE1RUssd0JBNEVPO0FBQ1IsU0FBS25CLFVBQUw7QUFDQSxRQUFJVyxJQUFJLEdBQUc5QixFQUFFLENBQUMrQixXQUFILENBQWUsS0FBS25CLHNCQUFwQixDQUFYLENBRlEsQ0FFK0M7O0FBQ3ZEa0IsSUFBQUEsSUFBSSxDQUFDRSxNQUFMLEdBQWMsS0FBS2xCLFlBQW5CO0FBQ0FnQixJQUFBQSxJQUFJLENBQUNNLGVBQUwsQ0FBcUIsQ0FBckIsRUFKUSxDQUlpQjs7QUFDekIsUUFBSUgsR0FBRyxHQUFHSCxJQUFJLENBQUNJLFlBQUwsQ0FBa0JuQyxVQUFsQixDQUFWLENBTFEsQ0FLZ0M7O0FBQ3hDa0MsSUFBQUEsR0FBRyxDQUFDTSxnQkFBSixDQUFxQixLQUFLcEIsVUFBMUI7QUFDRixHQW5GRztBQXFGSnFCLEVBQUFBLE1BckZJLGtCQXFGSUMsRUFyRkosRUFxRlEsQ0FDWDtBQXRGRyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG52YXIgUmVjb3JkSXRlbSA9IHJlcXVpcmUoJ0d1ZXN0NV9Qcml6ZVJlY29yZEl0ZW0nKVxyXG5cclxuLy8v546p5a625bCH542O5ZOB6LOH6KiK5Zyo5Yqg5YWl6YGK5oiy5aC05pmv6aGv56S65Ye65L6GanNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBwcml6ZV9pbmZvcm1hdGlvbjp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcclxuICAgICAgICAgICAgdHlwZTpjYy5Ob2RlIFxyXG4gICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgIHByaXplX2luZm9ybWF0aW9uX0J0bjp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcclxuICAgICAgICAgICAgdHlwZTpjYy5TcHJpdGVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBwcml6ZV9CdG5fVVA6e1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuU3ByaXRlRnJhbWVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBwcml6ZV9CdG5fRE9XTjp7XHJcbiAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgIHR5cGU6Y2MuU3ByaXRlRnJhbWVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBwcml6ZV9pbmZvcm1hdGlvbl9JdGVtOntcclxuICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgdHlwZTpjYy5QcmVmYWJcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBpdGVtc19wYXJlbnQ6e1xyXG4gICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcclxuICAgICAgICAgICB0eXBlOmNjLk5vZGUgXHJcbiAgICAgICAgfSxcclxuICB9LFxyXG4gICAgXHJcbiAgICBvbmxvYWQoKXtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQoKXtcclxuICAgICAgdGhpcy5PcGVuUHJpemVfSW5mb3JtYXRpb24gPSBmYWxzZTtcclxuICAgICAgdGhpcy5pdGVtbGlzdCA9IFtdO1xyXG4gICAgICB0aGlzLmluZGV4Y291bnQgPSAwXHJcbiAgICAgIHRoaXMuU3Bhd25Qcml6ZUluZm9ybWF0aW9uKCk7XHJcbiAgICB9LFxyXG5cclxuICAgIFByaXplSW5mb3JtYXRpb25fUHJlc3MoKXtcclxuICAgICAgICBpZih0aGlzLk9wZW5Qcml6ZV9JbmZvcm1hdGlvbiA9PSBmYWxzZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICB0aGlzLnByaXplX2luZm9ybWF0aW9uX0J0bi5zcHJpdGVGcmFtZSA9IHRoaXMucHJpemVfQnRuX0RPV047XHJcbiAgICAgICAgICB0aGlzLk9wZW5Qcml6ZV9JbmZvcm1hdGlvbiA9IHRydWU7XHJcbiAgICAgICAgICBjYy50d2Vlbih0aGlzLnByaXplX2luZm9ybWF0aW9uKVxyXG4gICAgICAgICAgLnRvKDAuMSwgeyBwb3NpdGlvbjogY2MudjIoMCwgLTE1OCl9KVxyXG4gICAgICAgICAgLnN0YXJ0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICB7XHJcbiAgICAgICAgICB0aGlzLnByaXplX2luZm9ybWF0aW9uX0J0bi5zcHJpdGVGcmFtZSA9IHRoaXMucHJpemVfQnRuX1VQO1xyXG4gICAgICAgICAgY2MudHdlZW4odGhpcy5wcml6ZV9pbmZvcm1hdGlvbilcclxuICAgICAgICAgIC50bygwLjIsIHsgcG9zaXRpb246IGNjLnYyKDAsIC0yNTI3KX0pXHJcbiAgICAgICAgICAuc3RhcnQoKTtcclxuICAgICAgICAgIHRoaXMuT3BlblByaXplX0luZm9ybWF0aW9uID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgIH0sXHJcbiAgICBcclxuICAgICBTcGF3blByaXplSW5mb3JtYXRpb24oKXtcclxuICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgZ2FtZU1vZGVsLnByaXplX25hbWVfZ3Vlc3QubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICB2YXIgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMucHJpemVfaW5mb3JtYXRpb25fSXRlbSkgLy9jbG9uZeW3suacieevgOm7nu+8jOeUn+aIkGl0ZW1z5qC85byPXHJcbiAgICAgICAgICAgIG5vZGUucGFyZW50ID0gdGhpcy5pdGVtc19wYXJlbnQ7XHJcbiAgICAgICAgICAgIHZhciBvYmogPSBub2RlLmdldENvbXBvbmVudChSZWNvcmRJdGVtKSAvL+aKk+WPllJlY29yZEl0ZW1cclxuICAgICAgICAgICAgaWYoZ2FtZU1vZGVsLmV4Y2hhbmdlUHJpemVbaV0gPT0gXCJ5ZXNcIikgbm9kZS5zZXRTaWJsaW5nSW5kZXgoZ2FtZU1vZGVsLnByaXplX25hbWVfZ3Vlc3QubGVuZ3RoKTtcclxuICAgICAgICAgICAgZWxzZSBub2RlLnNldFNpYmxpbmdJbmRleCgwKVxyXG4gICAgICAgICAgICBvYmoudXBkYXRlSW5mbyhpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pbmRleGNvdW50ID0gZ2FtZU1vZGVsLnByaXplX25hbWVfZ3Vlc3QubGVuZ3RoIC0gMTtcclxuICAgIH0sXHJcbiAgICBcclxuICAgIFNwYXduUHJpemUoKXtcclxuICAgICAgICB0aGlzLmluZGV4Y291bnQgKytcclxuICAgICAgICB2YXIgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMucHJpemVfaW5mb3JtYXRpb25fSXRlbSkgLy9jbG9uZeW3suacieevgOm7nu+8jOeUn+aIkGl0ZW1z5qC85byPXHJcbiAgICAgICAgbm9kZS5wYXJlbnQgPSB0aGlzLml0ZW1zX3BhcmVudDtcclxuICAgICAgICBub2RlLnNldFNpYmxpbmdJbmRleCgwKTsgLy/orpPlrZDnianku7bpoa/npLrlnKjmnIDkuIrlsaRcclxuICAgICAgICB2YXIgb2JqID0gbm9kZS5nZXRDb21wb25lbnQoUmVjb3JkSXRlbSkgLy/mipPlj5ZSZWNvcmRJdGVtXHJcbiAgICAgICAgb2JqLnVwZGF0ZVByaXplQmxvY2sodGhpcy5pbmRleGNvdW50KTtcclxuICAgICB9LFxyXG5cclxuICAgICB1cGRhdGUgKGR0KSB7XHJcbiAgICAgfSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest4_GameCountDown.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '037baTi8DRKwokRLHQEF/UG', 'Guest4_GameCountDown');
// 共用模塊/Guest4_GameCountDown.js

"use strict";

var gameModel = require("Model"); //玩家遊戲倒數js


cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {},
  start: function start() {
    this.already = false;
  },
  lateUpdate: function lateUpdate(dt) {
    if (gameModel.GameStatusMessage == "end" && this.already == false) {
      this.already = true;
      cc.director.loadScene("Guest_Prize");
    } else if (gameModel.GameStatusMessage == "close" && this.already == false) {
      this.already = true;
      gameModel.HostWindow = "close";
      cc.director.loadScene("Guest1_JoinGame" + gameModel.BackGround_Theme);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxHdWVzdDRfR2FtZUNvdW50RG93bi5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJvbkxvYWQiLCJzdGFydCIsImFscmVhZHkiLCJsYXRlVXBkYXRlIiwiZHQiLCJHYW1lU3RhdHVzTWVzc2FnZSIsImRpcmVjdG9yIiwibG9hZFNjZW5lIiwiSG9zdFdpbmRvdyIsIkJhY2tHcm91bmRfVGhlbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUF2QixFQUVBOzs7QUFDQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFLEVBSFA7QUFNTEMsRUFBQUEsTUFOSyxvQkFNSyxDQUNULENBUEk7QUFTTEMsRUFBQUEsS0FUSyxtQkFTSTtBQUNMLFNBQUtDLE9BQUwsR0FBZSxLQUFmO0FBQ0gsR0FYSTtBQWNMQyxFQUFBQSxVQWRLLHNCQWNPQyxFQWRQLEVBY1c7QUFDWixRQUFHVixTQUFTLENBQUNXLGlCQUFWLElBQStCLEtBQS9CLElBQXdDLEtBQUtILE9BQUwsSUFBZ0IsS0FBM0QsRUFDQTtBQUNJLFdBQUtBLE9BQUwsR0FBZSxJQUFmO0FBQ0FOLE1BQUFBLEVBQUUsQ0FBQ1UsUUFBSCxDQUFZQyxTQUFaLENBQXNCLGFBQXRCO0FBQ0gsS0FKRCxNQUtLLElBQUliLFNBQVMsQ0FBQ1csaUJBQVYsSUFBK0IsT0FBL0IsSUFBMEMsS0FBS0gsT0FBTCxJQUFnQixLQUE5RCxFQUNMO0FBQ0ksV0FBS0EsT0FBTCxHQUFlLElBQWY7QUFDQVIsTUFBQUEsU0FBUyxDQUFDYyxVQUFWLEdBQXVCLE9BQXZCO0FBQ0FaLE1BQUFBLEVBQUUsQ0FBQ1UsUUFBSCxDQUFZQyxTQUFaLENBQXNCLG9CQUFtQmIsU0FBUyxDQUFDZSxnQkFBbkQ7QUFDSDtBQUNKO0FBMUJJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcblxyXG4vL+eOqeWutumBiuaIsuWAkuaVuGpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICB0aGlzLmFscmVhZHkgPSBmYWxzZVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgbGF0ZVVwZGF0ZSAoZHQpIHtcclxuICAgICAgICBpZihnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPT0gXCJlbmRcIiAmJiB0aGlzLmFscmVhZHkgPT0gZmFsc2UpIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5hbHJlYWR5ID0gdHJ1ZVxyXG4gICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJHdWVzdF9Qcml6ZVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiY2xvc2VcIiAmJiB0aGlzLmFscmVhZHkgPT0gZmFsc2UpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmFscmVhZHkgPSB0cnVlXHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5Ib3N0V2luZG93ID0gXCJjbG9zZVwiXHJcbiAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIkd1ZXN0MV9Kb2luR2FtZVwiKyBnYW1lTW9kZWwuQmFja0dyb3VuZF9UaGVtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbn0pXHJcblxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest5_Prize.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '36c4a49rStLe63/oPQEoHYv', 'Guest5_Prize');
// 共用模塊/Guest5_Prize.js

"use strict";

var gameModel = require("Model");

var RecordItem = require('Guest5_PrizeRecordItem'); ///生成玩家中獎列表，判斷有無中獎或收到again訊息js


cc.Class({
  "extends": cc.Component,
  properties: {
    items: {
      "default": null,
      type: cc.Prefab
    },
    ResultWindow: {
      "default": null,
      type: cc.Node
    },
    Note: {
      "default": null,
      type: cc.Node
    },
    CannotNextRound: {
      "default": null,
      type: cc.SpriteFrame
    }
  },
  onLoad: function onLoad() {
    this.prize_parents = cc.find("畫布/已獲得的獎品列表/view/內容");
    this.Title = cc.find("畫布/場景/上方框");
    this.BackGround = cc.find("畫布/場景/背景");
  },
  start: function start() {
    this.Title.getComponent(cc.Sprite).spriteFrame = gameModel.TopTitle;
    this.BackGround.getComponent(cc.Sprite).spriteFrame = gameModel.Prize_BackGround;

    if (gameModel.result == 'thanks' && gameModel.AlreadyPlayed == 0 && gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲") {
      this.ResultWindow.active = true;
      this.ResultWindow.getChildByName("得獎結果動畫").getComponent(sp.Skeleton).setAnimation(0, "lost", true);
    } else if (gameModel.result != 'thanks' && gameModel.AlreadyPlayed == 0 && gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲") {
      this.ResultWindow.active = true;
      this.ResultWindow.getChildByName("得獎結果動畫").getComponent(sp.Skeleton).setAnimation(0, "win", true);

      if (gameModel.AllowRePrize == "close") {
        gameModel.CannotJoinGame = "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲";
        this.Note.getComponent(cc.Sprite).spriteFrame = this.CannotNextRound;
      }
    } else if (gameModel.CannotJoinGame == "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲") this.Note.getComponent(cc.Sprite).spriteFrame = this.CannotNextRound;

    this.setData();
    this.GameStateJudge = true;
  },
  setData: function setData() {
    for (var i = 0; i < gameModel.prize_name_guest.length; i++) {
      var node = cc.instantiate(this.items); //clone已有節點，生成items格式

      node.parent = this.prize_parents;
      if (gameModel.exchangePrize[i] == "yes") node.setSiblingIndex(gameModel.prize_name_guest.length);else node.setSiblingIndex(0);
      var obj = node.getComponent(RecordItem); //抓取RecordItem

      obj.updateInfo(i);
    }
  },
  CloseResult: function CloseResult() {
    this.ResultWindow.active = false;
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "open" && gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲" && this.GameStateJudge == true) {
      gameModel.AlreadyPlayed = 0;
      gameModel.result = 'thanks';
      cc.director.loadScene("Guest1_JoinGame" + gameModel.BackGround_Theme);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest4_GameCountDown_ShowTime.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '19103C1C8ROE6IEqrTwBI9B', 'Guest4_GameCountDown_ShowTime');
// 共用模塊/Guest4_GameCountDown_ShowTime.js

"use strict";

var gameModel = require("Model");

var Guest4_GameCountDown = require("Guest4_GameCountDown"); //玩家遊戲倒數(有顯示倒數數字)js


cc.Class({
  "extends": Guest4_GameCountDown,
  properties: {
    countdown: {
      "default": null,
      type: cc.Node
    },
    NoLinitTimeImg: {
      "default": null,
      type: cc.Node
    },
    countdownText: {
      "default": null,
      type: cc.Label
    },
    waitForCount: {
      "default": null,
      type: cc.Node
    }
  },
  start: function start() {
    this.alreadyend = false;

    if (gameModel.XMLTimeLimit == false) {
      this.countdown.active = false;
      this.NoLinitTimeImg.active = true;
    }
  },
  lateUpdate: function lateUpdate(dt) {
    if (gameModel.XMLTimeLimit == true) this.countdownText.string = gameModel.gametimeCountDown;

    if (gameModel.GameStatusMessage == "calculate" && this.alreadyend == false) {
      this.alreadyend = true;
      this.waitForCount.active = true;
    } else if (gameModel.GameStatusMessage == "close" && this.alreadyend == false) {
      this.alreadyend = true;
      gameModel.HostWindow = "close";
      cc.director.loadScene("Guest1_JoinGame" + gameModel.BackGround_Theme);
    } else if (gameModel.GameStatusMessage == "end" && this.alreadyend == true) {
      this.alreadyend = false;
      gameModel.Lottery_Guest();
      this.scheduleOnce(function () {
        cc.director.loadScene("Guest_Prize" + gameModel.BackGround_Theme);
      }, 2);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxHdWVzdDRfR2FtZUNvdW50RG93bl9TaG93VGltZS5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiR3Vlc3Q0X0dhbWVDb3VudERvd24iLCJjYyIsIkNsYXNzIiwicHJvcGVydGllcyIsImNvdW50ZG93biIsInR5cGUiLCJOb2RlIiwiTm9MaW5pdFRpbWVJbWciLCJjb3VudGRvd25UZXh0IiwiTGFiZWwiLCJ3YWl0Rm9yQ291bnQiLCJzdGFydCIsImFscmVhZHllbmQiLCJYTUxUaW1lTGltaXQiLCJhY3RpdmUiLCJsYXRlVXBkYXRlIiwiZHQiLCJzdHJpbmciLCJnYW1ldGltZUNvdW50RG93biIsIkdhbWVTdGF0dXNNZXNzYWdlIiwiSG9zdFdpbmRvdyIsImRpcmVjdG9yIiwibG9hZFNjZW5lIiwiQmFja0dyb3VuZF9UaGVtZSIsIkxvdHRlcnlfR3Vlc3QiLCJzY2hlZHVsZU9uY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUF2Qjs7QUFDQSxJQUFJQyxvQkFBb0IsR0FBR0QsT0FBTyxDQUFDLHNCQUFELENBQWxDLEVBRUE7OztBQUNBRSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNGLG9CQURKO0FBR0xHLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxTQUFTLEVBQUU7QUFDUCxpQkFBUSxJQUREO0FBRVBDLE1BQUFBLElBQUksRUFBQ0osRUFBRSxDQUFDSztBQUZELEtBREg7QUFNUkMsSUFBQUEsY0FBYyxFQUFFO0FBQ1osaUJBQVEsSUFESTtBQUVaRixNQUFBQSxJQUFJLEVBQUNKLEVBQUUsQ0FBQ0s7QUFGSSxLQU5SO0FBV1JFLElBQUFBLGFBQWEsRUFBRTtBQUNYLGlCQUFRLElBREc7QUFFWEgsTUFBQUEsSUFBSSxFQUFDSixFQUFFLENBQUNRO0FBRkcsS0FYUDtBQWdCUkMsSUFBQUEsWUFBWSxFQUFFO0FBQ1YsaUJBQVEsSUFERTtBQUVWTCxNQUFBQSxJQUFJLEVBQUNKLEVBQUUsQ0FBQ0s7QUFGRTtBQWhCTixHQUhQO0FBeUJMSyxFQUFBQSxLQXpCSyxtQkF5Qkk7QUFDTCxTQUFLQyxVQUFMLEdBQWtCLEtBQWxCOztBQUNBLFFBQUdkLFNBQVMsQ0FBQ2UsWUFBVixJQUEwQixLQUE3QixFQUNBO0FBQ0ksV0FBS1QsU0FBTCxDQUFlVSxNQUFmLEdBQXdCLEtBQXhCO0FBQ0EsV0FBS1AsY0FBTCxDQUFvQk8sTUFBcEIsR0FBNkIsSUFBN0I7QUFDSDtBQUNKLEdBaENJO0FBa0NMQyxFQUFBQSxVQWxDSyxzQkFrQ09DLEVBbENQLEVBa0NXO0FBQ1osUUFBR2xCLFNBQVMsQ0FBQ2UsWUFBVixJQUEwQixJQUE3QixFQUFtQyxLQUFLTCxhQUFMLENBQW1CUyxNQUFuQixHQUE0Qm5CLFNBQVMsQ0FBQ29CLGlCQUF0Qzs7QUFDbkMsUUFBR3BCLFNBQVMsQ0FBQ3FCLGlCQUFWLElBQStCLFdBQS9CLElBQThDLEtBQUtQLFVBQUwsSUFBbUIsS0FBcEUsRUFDQTtBQUNJLFdBQUtBLFVBQUwsR0FBa0IsSUFBbEI7QUFDQSxXQUFLRixZQUFMLENBQWtCSSxNQUFsQixHQUEyQixJQUEzQjtBQUNILEtBSkQsTUFLSyxJQUFJaEIsU0FBUyxDQUFDcUIsaUJBQVYsSUFBK0IsT0FBL0IsSUFBMEMsS0FBS1AsVUFBTCxJQUFtQixLQUFqRSxFQUNMO0FBQ0ksV0FBS0EsVUFBTCxHQUFrQixJQUFsQjtBQUNBZCxNQUFBQSxTQUFTLENBQUNzQixVQUFWLEdBQXVCLE9BQXZCO0FBQ0FuQixNQUFBQSxFQUFFLENBQUNvQixRQUFILENBQVlDLFNBQVosQ0FBc0Isb0JBQW1CeEIsU0FBUyxDQUFDeUIsZ0JBQW5EO0FBQ0gsS0FMSSxNQU1BLElBQUd6QixTQUFTLENBQUNxQixpQkFBVixJQUErQixLQUEvQixJQUF3QyxLQUFLUCxVQUFMLElBQW1CLElBQTlELEVBQ0w7QUFDSSxXQUFLQSxVQUFMLEdBQWtCLEtBQWxCO0FBQ0FkLE1BQUFBLFNBQVMsQ0FBQzBCLGFBQVY7QUFDQSxXQUFLQyxZQUFMLENBQWtCLFlBQVc7QUFDMUJ4QixRQUFBQSxFQUFFLENBQUNvQixRQUFILENBQVlDLFNBQVosQ0FBc0IsZ0JBQWV4QixTQUFTLENBQUN5QixnQkFBL0M7QUFDRixPQUZELEVBRUcsQ0FGSDtBQUdIO0FBQ0o7QUF2REksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxudmFyIEd1ZXN0NF9HYW1lQ291bnREb3duID0gcmVxdWlyZShcIkd1ZXN0NF9HYW1lQ291bnREb3duXCIpO1xyXG5cclxuLy/njqnlrrbpgYrmiLLlgJLmlbgo5pyJ6aGv56S65YCS5pW45pW45a2XKWpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IEd1ZXN0NF9HYW1lQ291bnREb3duLFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBjb3VudGRvd246IHtcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLk5vZGVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBOb0xpbml0VGltZUltZzoge1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTm9kZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgY291bnRkb3duVGV4dDoge1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTGFiZWxcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICB3YWl0Rm9yQ291bnQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLk5vZGVcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgICAgdGhpcy5hbHJlYWR5ZW5kID0gZmFsc2U7XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLlhNTFRpbWVMaW1pdCA9PSBmYWxzZSkgXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50ZG93bi5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICB0aGlzLk5vTGluaXRUaW1lSW1nLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGxhdGVVcGRhdGUgKGR0KSB7XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLlhNTFRpbWVMaW1pdCA9PSB0cnVlKSB0aGlzLmNvdW50ZG93blRleHQuc3RyaW5nID0gZ2FtZU1vZGVsLmdhbWV0aW1lQ291bnREb3duXHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiY2FsY3VsYXRlXCIgJiYgdGhpcy5hbHJlYWR5ZW5kID09IGZhbHNlKSBcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuYWxyZWFkeWVuZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMud2FpdEZvckNvdW50LmFjdGl2ZSA9IHRydWVcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiY2xvc2VcIiAmJiB0aGlzLmFscmVhZHllbmQgPT0gZmFsc2UpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmFscmVhZHllbmQgPSB0cnVlXHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5Ib3N0V2luZG93ID0gXCJjbG9zZVwiXHJcbiAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIkd1ZXN0MV9Kb2luR2FtZVwiKyBnYW1lTW9kZWwuQmFja0dyb3VuZF9UaGVtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiZW5kXCIgJiYgdGhpcy5hbHJlYWR5ZW5kID09IHRydWUpIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5hbHJlYWR5ZW5kID0gZmFsc2VcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLkxvdHRlcnlfR3Vlc3QoKTtcclxuICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoZnVuY3Rpb24oKSB7IFxyXG4gICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJHdWVzdF9Qcml6ZVwiKyBnYW1lTW9kZWwuQmFja0dyb3VuZF9UaGVtZSk7XHJcbiAgICAgICAgICAgIH0sIDIpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbn0pXHJcblxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host3_GameTimeCountDown_competition.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cc070tZabBPcZg3fu06JAgR', 'Host3_GameTimeCountDown_competition');
// 共用模塊/Host3_GameTimeCountDown_competition.js

"use strict";

var gameModel = require("Model");

var GametimeCountDown = require("Host3_GameTimeCountDown"); ///主持人遊戲時間倒數js


cc.Class({
  "extends": GametimeCountDown,
  properties: {},
  start: function start() {},
  //遊戲倒數
  countdown: function countdown() {
    if (gameModel.GameStatusMessage == "end" || gameModel.GameStatusMessage == "calculate") return;
    gameModel.gametimeCountDown--;
    gameModel.WebSocket_GameStatus_Host("gaming", 0.1);
    this.countdownText.string = gameModel.gametimeCountDown;
    if (gameModel.gametimeCountDown == 10) this.currentsound = cc.audioEngine.play(this.tensecond, true, 15);

    if (gameModel.gametimeCountDown == 0) {
      cc.audioEngine.stop(this.currentsound);
      gameModel.WebSocket_GameStatus_Host("calculate", 0.1);
      gameModel.GameStatusMessage = "calculate";
    }
  },
  update: function update(dt) {}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0M19HYW1lVGltZUNvdW50RG93bl9jb21wZXRpdGlvbi5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiR2FtZXRpbWVDb3VudERvd24iLCJjYyIsIkNsYXNzIiwicHJvcGVydGllcyIsInN0YXJ0IiwiY291bnRkb3duIiwiR2FtZVN0YXR1c01lc3NhZ2UiLCJnYW1ldGltZUNvdW50RG93biIsIldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QiLCJjb3VudGRvd25UZXh0Iiwic3RyaW5nIiwiY3VycmVudHNvdW5kIiwiYXVkaW9FbmdpbmUiLCJwbGF5IiwidGVuc2Vjb25kIiwic3RvcCIsInVwZGF0ZSIsImR0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBQ0EsSUFBSUMsaUJBQWlCLEdBQUdELE9BQU8sQ0FBQyx5QkFBRCxDQUEvQixFQUVBOzs7QUFDQUUsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRixpQkFESjtBQUdMRyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQU9MQyxFQUFBQSxLQVBLLG1CQU9JLENBQUUsQ0FQTjtBQVNMO0FBQ0FDLEVBQUFBLFNBVkssdUJBVU07QUFDUCxRQUFHUCxTQUFTLENBQUNRLGlCQUFWLElBQStCLEtBQS9CLElBQXdDUixTQUFTLENBQUNRLGlCQUFWLElBQStCLFdBQTFFLEVBQXVGO0FBQ3ZGUixJQUFBQSxTQUFTLENBQUNTLGlCQUFWO0FBQ0FULElBQUFBLFNBQVMsQ0FBQ1UseUJBQVYsQ0FBb0MsUUFBcEMsRUFBNkMsR0FBN0M7QUFDQSxTQUFLQyxhQUFMLENBQW1CQyxNQUFuQixHQUE0QlosU0FBUyxDQUFDUyxpQkFBdEM7QUFDQSxRQUFHVCxTQUFTLENBQUNTLGlCQUFWLElBQStCLEVBQWxDLEVBQXNDLEtBQUtJLFlBQUwsR0FBb0JWLEVBQUUsQ0FBQ1csV0FBSCxDQUFlQyxJQUFmLENBQW9CLEtBQUtDLFNBQXpCLEVBQW9DLElBQXBDLEVBQTBDLEVBQTFDLENBQXBCOztBQUN0QyxRQUFHaEIsU0FBUyxDQUFDUyxpQkFBVixJQUErQixDQUFsQyxFQUNBO0FBQ0lOLE1BQUFBLEVBQUUsQ0FBQ1csV0FBSCxDQUFlRyxJQUFmLENBQW9CLEtBQUtKLFlBQXpCO0FBQ0FiLE1BQUFBLFNBQVMsQ0FBQ1UseUJBQVYsQ0FBb0MsV0FBcEMsRUFBZ0QsR0FBaEQ7QUFDQVYsTUFBQUEsU0FBUyxDQUFDUSxpQkFBVixHQUE4QixXQUE5QjtBQUNIO0FBQ0osR0F0Qkk7QUF3QkpVLEVBQUFBLE1BeEJJLGtCQXdCSUMsRUF4QkosRUF3QlEsQ0FBRTtBQXhCVixDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpOyBcclxudmFyIEdhbWV0aW1lQ291bnREb3duID0gcmVxdWlyZShcIkhvc3QzX0dhbWVUaW1lQ291bnREb3duXCIpOyBcclxuXHJcbi8vL+S4u+aMgeS6uumBiuaIsuaZgumWk+WAkuaVuGpzXHJcbmNjLkNsYXNzKHsgXHJcbiAgICBleHRlbmRzOiBHYW1ldGltZUNvdW50RG93bixcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBzdGFydCAoKSB7fSxcclxuICAgIFxyXG4gICAgLy/pgYrmiLLlgJLmlbhcclxuICAgIGNvdW50ZG93bigpe1xyXG4gICAgICAgIGlmKGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcImVuZFwiIHx8IGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcImNhbGN1bGF0ZVwiKSByZXR1cm47XHJcbiAgICAgICAgZ2FtZU1vZGVsLmdhbWV0aW1lQ291bnREb3duLS07XHJcbiAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QoXCJnYW1pbmdcIiwwLjEpXHJcbiAgICAgICAgdGhpcy5jb3VudGRvd25UZXh0LnN0cmluZyA9IGdhbWVNb2RlbC5nYW1ldGltZUNvdW50RG93bjtcclxuICAgICAgICBpZihnYW1lTW9kZWwuZ2FtZXRpbWVDb3VudERvd24gPT0gMTApIHRoaXMuY3VycmVudHNvdW5kID0gY2MuYXVkaW9FbmdpbmUucGxheSh0aGlzLnRlbnNlY29uZCwgdHJ1ZSwgMTUpO1xyXG4gICAgICAgIGlmKGdhbWVNb2RlbC5nYW1ldGltZUNvdW50RG93biA9PSAwKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY2MuYXVkaW9FbmdpbmUuc3RvcCh0aGlzLmN1cnJlbnRzb3VuZClcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QoXCJjYWxjdWxhdGVcIiwwLjEpXHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9IFwiY2FsY3VsYXRlXCJcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgICB1cGRhdGUgKGR0KSB7fSxcclxufSk7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest_rwdPlayer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '47ce2xxDsBPgqV10snO3sxM', 'Guest_rwdPlayer');
// 共用模塊/Guest_rwdPlayer.js

"use strict";

///判斷視窗角度，並保持垂直螢幕js
cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {
    //視窗監聽
    window.addEventListener('orientationchange', function (event) {
      if (cc.view._orientation != cc.macro.ORIENTATION_AUTO) cc.view.setOrientation(cc.macro.ORIENTATION_AUTO); //打開自動旋轉

      if (window.orientation == 180 || window.orientation == 0) cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT); //豎屏

      if (window.orientation == 90 || window.orientation == -90) cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT); //橫屏    
    });
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxHdWVzdF9yd2RQbGF5ZXIuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJvbkxvYWQiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ2aWV3IiwiX29yaWVudGF0aW9uIiwibWFjcm8iLCJPUklFTlRBVElPTl9BVVRPIiwic2V0T3JpZW50YXRpb24iLCJvcmllbnRhdGlvbiIsIk9SSUVOVEFUSU9OX1BPUlRSQUlUIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0FBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBUUxDLEVBQUFBLE1BUkssb0JBUUs7QUFDTjtBQUNBQyxJQUFBQSxNQUFNLENBQUNDLGdCQUFQLENBQXdCLG1CQUF4QixFQUE2QyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3pELFVBQUlQLEVBQUUsQ0FBQ1EsSUFBSCxDQUFRQyxZQUFSLElBQXdCVCxFQUFFLENBQUNVLEtBQUgsQ0FBU0MsZ0JBQXJDLEVBQXVEWCxFQUFFLENBQUNRLElBQUgsQ0FBUUksY0FBUixDQUF1QlosRUFBRSxDQUFDVSxLQUFILENBQVNDLGdCQUFoQyxFQURFLENBQ2tEOztBQUMzRyxVQUFJTixNQUFNLENBQUNRLFdBQVAsSUFBc0IsR0FBdEIsSUFBNkJSLE1BQU0sQ0FBQ1EsV0FBUCxJQUFzQixDQUF2RCxFQUEwRGIsRUFBRSxDQUFDUSxJQUFILENBQVFJLGNBQVIsQ0FBdUJaLEVBQUUsQ0FBQ1UsS0FBSCxDQUFTSSxvQkFBaEMsRUFGRCxDQUV5RDs7QUFDbEgsVUFBSVQsTUFBTSxDQUFDUSxXQUFQLElBQXNCLEVBQXRCLElBQTRCUixNQUFNLENBQUNRLFdBQVAsSUFBc0IsQ0FBQyxFQUF2RCxFQUEyRGIsRUFBRSxDQUFDUSxJQUFILENBQVFJLGNBQVIsQ0FBdUJaLEVBQUUsQ0FBQ1UsS0FBSCxDQUFTSSxvQkFBaEMsRUFIRixDQUcwRDtBQUN2SCxLQUpEO0FBS0g7QUFmSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8v5Yik5pa36KaW56qX6KeS5bqm77yM5Lim5L+d5oyB5Z6C55u06J6i5bmVanNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgIFxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICAvL+imlueql+ebo+iBvVxyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvcmllbnRhdGlvbmNoYW5nZScsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgaWYgKGNjLnZpZXcuX29yaWVudGF0aW9uICE9IGNjLm1hY3JvLk9SSUVOVEFUSU9OX0FVVE8pIGNjLnZpZXcuc2V0T3JpZW50YXRpb24oY2MubWFjcm8uT1JJRU5UQVRJT05fQVVUTyk7ICAvL+aJk+mWi+iHquWLleaXi+i9iVxyXG4gICAgICAgICAgICAgaWYgKHdpbmRvdy5vcmllbnRhdGlvbiA9PSAxODAgfHwgd2luZG93Lm9yaWVudGF0aW9uID09IDApIGNjLnZpZXcuc2V0T3JpZW50YXRpb24oY2MubWFjcm8uT1JJRU5UQVRJT05fUE9SVFJBSVQpOyAgLy/osY7lsY9cclxuICAgICAgICAgICAgIGlmICh3aW5kb3cub3JpZW50YXRpb24gPT0gOTAgfHwgd2luZG93Lm9yaWVudGF0aW9uID09IC05MCkgY2Mudmlldy5zZXRPcmllbnRhdGlvbihjYy5tYWNyby5PUklFTlRBVElPTl9QT1JUUkFJVCk7ICAvL+apq+WxjyAgICBcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbn0pOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host1_Begin.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '17b47HkTOJLkaG/+zNZSvjZ', 'Host1_Begin');
// 共用模塊/Host1_Begin.js

"use strict";

var gameModel = require("Model"); ///主持人開始場景js


cc.Class({
  "extends": cc.Component,
  properties: {
    round: {
      "default": null,
      type: cc.Label
    },
    NowPeople: {
      "default": null,
      type: cc.Label
    },
    aud: {
      "default": null,
      type: cc.AudioSource
    },
    Session: {
      "default": null,
      type: cc.Label
    },
    WrongAlert: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    gameModel.connet_ws = false;
    this.Session.string = "當前場次 : " + gameModel.Session;
    this.AlertText = cc.find("畫布/警告/警告文字");
  },
  start: function start() {
    cc.director.preloadScene("Host3_Game");
  },
  touchBegin: function touchBegin() {
    if (gameModel.people == 0) {
      this.AlertText.getComponent(cc.Label).string = "尚未有玩家加入遊戲";
      this.WrongAlert.active = true;
    } else {
      if (gameModel.XMLTimeLimit == true) gameModel.gametimeCountDown = gameModel.gametimelimit;
      gameModel.CurrentRound = gameModel.round;
      gameModel.WebSocket_GameStatus_Host("start", 0.1);
      this.scheduleOnce(function () {
        if (gameModel.connet_ws == true) {
          gameModel.GameStatusMessage = "start";
          cc.director.loadScene("Host2_CountDown" + gameModel.BackGround_Theme);
          gameModel.connet_ws = false;
        } else {
          this.AlertText.getComponent(cc.Label).string = "尚未與伺服器連接";
          this.WrongAlert.active = true;
        }
      }, 0.7);
    }
  },
  CloseAlert: function CloseAlert() {
    this.WrongAlert.active = false;
  },
  update: function update(dt) {
    this.round.string = gameModel.round;
    this.NowPeople.string = gameModel.people;
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0MV9CZWdpbi5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJyb3VuZCIsInR5cGUiLCJMYWJlbCIsIk5vd1Blb3BsZSIsImF1ZCIsIkF1ZGlvU291cmNlIiwiU2Vzc2lvbiIsIldyb25nQWxlcnQiLCJOb2RlIiwib25Mb2FkIiwiY29ubmV0X3dzIiwic3RyaW5nIiwiQWxlcnRUZXh0IiwiZmluZCIsInN0YXJ0IiwiZGlyZWN0b3IiLCJwcmVsb2FkU2NlbmUiLCJ0b3VjaEJlZ2luIiwicGVvcGxlIiwiZ2V0Q29tcG9uZW50IiwiYWN0aXZlIiwiWE1MVGltZUxpbWl0IiwiZ2FtZXRpbWVDb3VudERvd24iLCJnYW1ldGltZWxpbWl0IiwiQ3VycmVudFJvdW5kIiwiV2ViU29ja2V0X0dhbWVTdGF0dXNfSG9zdCIsInNjaGVkdWxlT25jZSIsIkdhbWVTdGF0dXNNZXNzYWdlIiwibG9hZFNjZW5lIiwiQmFja0dyb3VuZF9UaGVtZSIsIkNsb3NlQWxlcnQiLCJ1cGRhdGUiLCJkdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCLEVBRUE7OztBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsS0FBSyxFQUFDO0FBQ0YsaUJBQVEsSUFETjtBQUVGQyxNQUFBQSxJQUFJLEVBQUNMLEVBQUUsQ0FBQ007QUFGTixLQURFO0FBTVJDLElBQUFBLFNBQVMsRUFBQztBQUNOLGlCQUFRLElBREY7QUFFTkYsTUFBQUEsSUFBSSxFQUFDTCxFQUFFLENBQUNNO0FBRkYsS0FORjtBQVdSRSxJQUFBQSxHQUFHLEVBQUM7QUFDQSxpQkFBUSxJQURSO0FBRUFILE1BQUFBLElBQUksRUFBQ0wsRUFBRSxDQUFDUztBQUZSLEtBWEk7QUFnQlJDLElBQUFBLE9BQU8sRUFBQztBQUNKLGlCQUFRLElBREo7QUFFSkwsTUFBQUEsSUFBSSxFQUFDTCxFQUFFLENBQUNNO0FBRkosS0FoQkE7QUFxQlJLLElBQUFBLFVBQVUsRUFBQztBQUNQLGlCQUFRLElBREQ7QUFFUE4sTUFBQUEsSUFBSSxFQUFDTCxFQUFFLENBQUNZO0FBRkQ7QUFyQkgsR0FIUDtBQThCTEMsRUFBQUEsTUE5Qkssb0JBOEJLO0FBQ05mLElBQUFBLFNBQVMsQ0FBQ2dCLFNBQVYsR0FBc0IsS0FBdEI7QUFDQSxTQUFLSixPQUFMLENBQWFLLE1BQWIsR0FBc0IsWUFBWWpCLFNBQVMsQ0FBQ1ksT0FBNUM7QUFDQSxTQUFLTSxTQUFMLEdBQWlCaEIsRUFBRSxDQUFDaUIsSUFBSCxDQUFRLFlBQVIsQ0FBakI7QUFDSCxHQWxDSTtBQXFDTEMsRUFBQUEsS0FyQ0ssbUJBcUNJO0FBQ0xsQixJQUFBQSxFQUFFLENBQUNtQixRQUFILENBQVlDLFlBQVosQ0FBeUIsWUFBekI7QUFDSCxHQXZDSTtBQTBDTEMsRUFBQUEsVUExQ0ssd0JBMENRO0FBQ1QsUUFBR3ZCLFNBQVMsQ0FBQ3dCLE1BQVYsSUFBb0IsQ0FBdkIsRUFDQTtBQUNJLFdBQUtOLFNBQUwsQ0FBZU8sWUFBZixDQUE0QnZCLEVBQUUsQ0FBQ00sS0FBL0IsRUFBc0NTLE1BQXRDLEdBQStDLFdBQS9DO0FBQ0EsV0FBS0osVUFBTCxDQUFnQmEsTUFBaEIsR0FBeUIsSUFBekI7QUFDSCxLQUpELE1BTUE7QUFDSSxVQUFHMUIsU0FBUyxDQUFDMkIsWUFBVixJQUEwQixJQUE3QixFQUFtQzNCLFNBQVMsQ0FBQzRCLGlCQUFWLEdBQThCNUIsU0FBUyxDQUFDNkIsYUFBeEM7QUFDbkM3QixNQUFBQSxTQUFTLENBQUM4QixZQUFWLEdBQXlCOUIsU0FBUyxDQUFDTSxLQUFuQztBQUNBTixNQUFBQSxTQUFTLENBQUMrQix5QkFBVixDQUFvQyxPQUFwQyxFQUE0QyxHQUE1QztBQUNBLFdBQUtDLFlBQUwsQ0FBa0IsWUFBVztBQUN6QixZQUFHaEMsU0FBUyxDQUFDZ0IsU0FBVixJQUF1QixJQUExQixFQUNBO0FBQ0VoQixVQUFBQSxTQUFTLENBQUNpQyxpQkFBVixHQUE4QixPQUE5QjtBQUNBL0IsVUFBQUEsRUFBRSxDQUFDbUIsUUFBSCxDQUFZYSxTQUFaLENBQXNCLG9CQUFtQmxDLFNBQVMsQ0FBQ21DLGdCQUFuRDtBQUNBbkMsVUFBQUEsU0FBUyxDQUFDZ0IsU0FBVixHQUFzQixLQUF0QjtBQUNELFNBTEQsTUFPQTtBQUNJLGVBQUtFLFNBQUwsQ0FBZU8sWUFBZixDQUE0QnZCLEVBQUUsQ0FBQ00sS0FBL0IsRUFBc0NTLE1BQXRDLEdBQStDLFVBQS9DO0FBQ0EsZUFBS0osVUFBTCxDQUFnQmEsTUFBaEIsR0FBeUIsSUFBekI7QUFDSDtBQUNKLE9BWkQsRUFZRyxHQVpIO0FBYUg7QUFDSixHQW5FSTtBQXFFTFUsRUFBQUEsVUFyRUssd0JBcUVPO0FBQ1IsU0FBS3ZCLFVBQUwsQ0FBZ0JhLE1BQWhCLEdBQXlCLEtBQXpCO0FBQ0gsR0F2RUk7QUF5RUxXLEVBQUFBLE1BekVLLGtCQXlFR0MsRUF6RUgsRUF5RU87QUFDUixTQUFLaEMsS0FBTCxDQUFXVyxNQUFYLEdBQW9CakIsU0FBUyxDQUFDTSxLQUE5QjtBQUNBLFNBQUtHLFNBQUwsQ0FBZVEsTUFBZixHQUF3QmpCLFNBQVMsQ0FBQ3dCLE1BQWxDO0FBQ0g7QUE1RUksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuXHJcbi8vL+S4u+aMgeS6uumWi+Wni+WgtOaZr2pzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgcm91bmQ6e1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTGFiZWxcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBOb3dQZW9wbGU6e1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTGFiZWxcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBhdWQ6e1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuQXVkaW9Tb3VyY2VcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBTZXNzaW9uOntcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLkxhYmVsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBcclxuICAgICAgICBXcm9uZ0FsZXJ0OntcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLk5vZGVcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICBnYW1lTW9kZWwuY29ubmV0X3dzID0gZmFsc2VcclxuICAgICAgICB0aGlzLlNlc3Npb24uc3RyaW5nID0gXCLnlbbliY3loLTmrKEgOiBcIiArIGdhbWVNb2RlbC5TZXNzaW9uOyBcclxuICAgICAgICB0aGlzLkFsZXJ0VGV4dCA9IGNjLmZpbmQoXCLnlavluIMv6K2m5ZGKL+itpuWRiuaWh+Wtl1wiKSAgIFxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIGNjLmRpcmVjdG9yLnByZWxvYWRTY2VuZShcIkhvc3QzX0dhbWVcIilcclxuICAgIH0sXHJcblxyXG5cclxuICAgIHRvdWNoQmVnaW4gKCl7XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLnBlb3BsZSA9PSAwKSBcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuQWxlcnRUZXh0LmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gXCLlsJrmnKrmnInnjqnlrrbliqDlhaXpgYrmiLJcIjtcclxuICAgICAgICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZihnYW1lTW9kZWwuWE1MVGltZUxpbWl0ID09IHRydWUpIGdhbWVNb2RlbC5nYW1ldGltZUNvdW50RG93biA9IGdhbWVNb2RlbC5nYW1ldGltZWxpbWl0O1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwuQ3VycmVudFJvdW5kID0gZ2FtZU1vZGVsLnJvdW5kO1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwuV2ViU29ja2V0X0dhbWVTdGF0dXNfSG9zdChcInN0YXJ0XCIsMC4xKVxyXG4gICAgICAgICAgICB0aGlzLnNjaGVkdWxlT25jZShmdW5jdGlvbigpIHsgXHJcbiAgICAgICAgICAgICAgICBpZihnYW1lTW9kZWwuY29ubmV0X3dzID09IHRydWUpXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9IFwic3RhcnRcIlxyXG4gICAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJIb3N0Ml9Db3VudERvd25cIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuY29ubmV0X3dzID0gZmFsc2VcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFsZXJ0VGV4dC5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IFwi5bCa5pyq6IiH5Ly65pyN5Zmo6YCj5o6lXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sIDAuNyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBDbG9zZUFsZXJ0KCl7XHJcbiAgICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgfSxcclxuICAgXHJcbiAgICB1cGRhdGUgKGR0KSB7XHJcbiAgICAgICAgdGhpcy5yb3VuZC5zdHJpbmcgPSBnYW1lTW9kZWwucm91bmQ7XHJcbiAgICAgICAgdGhpcy5Ob3dQZW9wbGUuc3RyaW5nID0gZ2FtZU1vZGVsLnBlb3BsZTtcclxuICAgIH0sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Guest5_PrizeRecordItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '34a39kGdyJLpY+shmDebf2c', 'Guest5_PrizeRecordItem');
// 共用模塊/Guest5_PrizeRecordItem.js

"use strict";

var gameModel = require("Model"); ///玩家將獎品資訊顯示出來js


cc.Class({
  "extends": cc.Component,
  properties: {
    timelabel: {
      "default": null,
      type: cc.Label
    },
    roundlabel: {
      "default": null,
      type: cc.Label
    },
    prize_namelabel: {
      "default": null,
      type: cc.Label
    },
    PrizeMethod: {
      "default": null,
      type: cc.Label
    },
    Prize_img: {
      "default": null,
      type: cc.Sprite
    },
    AlreadyExchange: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    this.prize_method_chinese = null;
  },
  //取得當前獎品資料
  updateInfo: function updateInfo(i) {
    var self = this;
    cc.assetManager.loadRemote(gameModel.Domain + gameModel.prize_picture[i], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.Prize_img.getComponent(cc.Sprite).spriteFrame = picture;
      }
    });
    this.timelabel.string = gameModel.Win_Time[i]; //顯示得獎時間

    this.roundlabel.string = "第" + gameModel.getprize_round[i] + "輪"; //顯示得獎輪次

    this.prize_namelabel.string = gameModel.prize_name_guest[i]; //顯示獎品名稱

    this.prize_method_chinese = gameModel.prize_method[gameModel.WhitchPrize_index] == "site" ? "現場兌換" : "郵件兌換"; //將兌獎方式翻成中文

    this.PrizeMethod.string = this.prize_method_chinese; //顯示兌獎方式

    if (gameModel.exchangePrize[i] == "yes") this.AlreadyExchange.active = true; //若已兌換，兌換按鍵功能停止，並將圖片轉為已兌換
  },
  //取得當前獎品資料
  updatePrizeBlock: function updatePrizeBlock(i) {
    var self = this;
    cc.assetManager.loadRemote(gameModel.Domain + gameModel.PrizeStaffs[i].picture, {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.Prize_img.getComponent(cc.Sprite).spriteFrame = picture;
      }
    });
    this.timelabel.string = gameModel.PrizeStaffs[i].win_time; //顯示得獎時間

    this.roundlabel.string = "第" + gameModel.PrizeStaffs[i].round + "輪"; //顯示得獎輪次

    this.prize_namelabel.string = gameModel.PrizeStaffs[i].prize_name; //顯示獎品名稱

    this.prize_method_chinese = gameModel.PrizeStaffs[i].method == "site" ? "現場兌換" : "郵件兌換"; //將兌獎方式翻成中文

    this.PrizeMethod.string = this.prize_method_chinese; //顯示兌獎方式

    if (gameModel.PrizeStaffs[i].status == "yes") this.AlreadyExchange.active = true; //若已兌換，兌換按鍵功能停止，並將圖片轉為已兌換
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host3_GameTimeCountDown.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'edcd5kCsdpKrZH8BJltQ2Jk', 'Host3_GameTimeCountDown');
// 共用模塊/Host3_GameTimeCountDown.js

"use strict";

var gameModel = require("Model"); ///主持人遊戲時間倒數js


cc.Class({
  "extends": cc.Component,
  properties: {
    countdownText: {
      "default": null,
      type: cc.Label
    },
    tensecond: {
      "default": null,
      type: cc.AudioClip
    }
  },
  onLoad: function onLoad() {
    if (gameModel.XMLTimeLimit == true) {
      this.countdownText.string = gameModel.gametimeCountDown;
      this.schedule(function () {
        //每1秒鐘值行一次，重複做gameModel.gametimelimit + 1次
        this.countdown();
      }, 1, gameModel.gametimelimit + 1);
    } else if (gameModel.XMLTimeLimit == false && gameModel.GameName == "redpack") {
      this.NoLimitTime = cc.find("畫布/場景/倒數燈籠/無限時");
      this.NoLimitTime.active = true;
    }
  },
  start: function start() {},
  //遊戲倒數
  countdown: function countdown() {
    if (gameModel.GameStatusMessage == "end" || gameModel.gametimeCountDown == 0) return;
    gameModel.gametimeCountDown--;
    this.countdownText.string = gameModel.gametimeCountDown;
    if (gameModel.gametimeCountDown == 10) this.currentsound = cc.audioEngine.play(this.tensecond, true, 15);

    if (gameModel.gametimeCountDown == 0) {
      cc.audioEngine.stop(this.currentsound); //gameModel.WebSocket_GameStatus_Host("end",0.1)

      gameModel.GameStatusMessage = "end";
    }
  },
  update: function update(dt) {}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0M19HYW1lVGltZUNvdW50RG93bi5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJjb3VudGRvd25UZXh0IiwidHlwZSIsIkxhYmVsIiwidGVuc2Vjb25kIiwiQXVkaW9DbGlwIiwib25Mb2FkIiwiWE1MVGltZUxpbWl0Iiwic3RyaW5nIiwiZ2FtZXRpbWVDb3VudERvd24iLCJzY2hlZHVsZSIsImNvdW50ZG93biIsImdhbWV0aW1lbGltaXQiLCJHYW1lTmFtZSIsIk5vTGltaXRUaW1lIiwiZmluZCIsImFjdGl2ZSIsInN0YXJ0IiwiR2FtZVN0YXR1c01lc3NhZ2UiLCJjdXJyZW50c291bmQiLCJhdWRpb0VuZ2luZSIsInBsYXkiLCJzdG9wIiwidXBkYXRlIiwiZHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUF2QixFQUVBOzs7QUFDQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLGFBQWEsRUFBRTtBQUNYLGlCQUFRLElBREc7QUFFWEMsTUFBQUEsSUFBSSxFQUFDTCxFQUFFLENBQUNNO0FBRkcsS0FEUDtBQUtSQyxJQUFBQSxTQUFTLEVBQUU7QUFDUCxpQkFBUyxJQURGO0FBRVBGLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDUTtBQUZGO0FBTEgsR0FIUDtBQWNMQyxFQUFBQSxNQWRLLG9CQWNLO0FBQ04sUUFBR1gsU0FBUyxDQUFDWSxZQUFWLElBQTBCLElBQTdCLEVBQ0E7QUFDSSxXQUFLTixhQUFMLENBQW1CTyxNQUFuQixHQUE0QmIsU0FBUyxDQUFDYyxpQkFBdEM7QUFDQSxXQUFLQyxRQUFMLENBQWMsWUFBVztBQUFJO0FBQzFCLGFBQUtDLFNBQUw7QUFDRixPQUZELEVBRUcsQ0FGSCxFQUVLaEIsU0FBUyxDQUFDaUIsYUFBVixHQUEwQixDQUYvQjtBQUdILEtBTkQsTUFPSyxJQUFHakIsU0FBUyxDQUFDWSxZQUFWLElBQTBCLEtBQTFCLElBQW1DWixTQUFTLENBQUNrQixRQUFWLElBQXNCLFNBQTVELEVBQ0w7QUFDSSxXQUFLQyxXQUFMLEdBQW1CakIsRUFBRSxDQUFDa0IsSUFBSCxDQUFRLGdCQUFSLENBQW5CO0FBQ0EsV0FBS0QsV0FBTCxDQUFpQkUsTUFBakIsR0FBMEIsSUFBMUI7QUFDSDtBQUNKLEdBM0JJO0FBNkJMQyxFQUFBQSxLQTdCSyxtQkE2QkksQ0FBRSxDQTdCTjtBQStCTDtBQUNBTixFQUFBQSxTQWhDSyx1QkFnQ007QUFDUCxRQUFHaEIsU0FBUyxDQUFDdUIsaUJBQVYsSUFBK0IsS0FBL0IsSUFBd0N2QixTQUFTLENBQUNjLGlCQUFWLElBQStCLENBQTFFLEVBQTZFO0FBQzdFZCxJQUFBQSxTQUFTLENBQUNjLGlCQUFWO0FBQ0EsU0FBS1IsYUFBTCxDQUFtQk8sTUFBbkIsR0FBNEJiLFNBQVMsQ0FBQ2MsaUJBQXRDO0FBQ0EsUUFBR2QsU0FBUyxDQUFDYyxpQkFBVixJQUErQixFQUFsQyxFQUFzQyxLQUFLVSxZQUFMLEdBQW9CdEIsRUFBRSxDQUFDdUIsV0FBSCxDQUFlQyxJQUFmLENBQW9CLEtBQUtqQixTQUF6QixFQUFvQyxJQUFwQyxFQUEwQyxFQUExQyxDQUFwQjs7QUFDdEMsUUFBR1QsU0FBUyxDQUFDYyxpQkFBVixJQUErQixDQUFsQyxFQUNBO0FBQ0laLE1BQUFBLEVBQUUsQ0FBQ3VCLFdBQUgsQ0FBZUUsSUFBZixDQUFvQixLQUFLSCxZQUF6QixFQURKLENBRUk7O0FBQ0F4QixNQUFBQSxTQUFTLENBQUN1QixpQkFBVixHQUE4QixLQUE5QjtBQUNIO0FBQ0osR0EzQ0k7QUE2Q0pLLEVBQUFBLE1BN0NJLGtCQTZDSUMsRUE3Q0osRUE2Q1EsQ0FBRTtBQTdDVixDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpOyBcclxuXHJcbi8vL+S4u+aMgeS6uumBiuaIsuaZgumWk+WAkuaVuGpzXHJcbmNjLkNsYXNzKHsgXHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIGNvdW50ZG93blRleHQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLkxhYmVsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0ZW5zZWNvbmQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuQXVkaW9DbGlwXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICBpZihnYW1lTW9kZWwuWE1MVGltZUxpbWl0ID09IHRydWUpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50ZG93blRleHQuc3RyaW5nID0gZ2FtZU1vZGVsLmdhbWV0aW1lQ291bnREb3duO1xyXG4gICAgICAgICAgICB0aGlzLnNjaGVkdWxlKGZ1bmN0aW9uKCkgeyAgIC8v5q+PMeenkumQmOWAvOihjOS4gOasoe+8jOmHjeikh+WBmmdhbWVNb2RlbC5nYW1ldGltZWxpbWl0ICsgMeasoVxyXG4gICAgICAgICAgICAgICB0aGlzLmNvdW50ZG93bigpO1xyXG4gICAgICAgICAgICB9LCAxLGdhbWVNb2RlbC5nYW1ldGltZWxpbWl0ICsgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoZ2FtZU1vZGVsLlhNTFRpbWVMaW1pdCA9PSBmYWxzZSAmJiBnYW1lTW9kZWwuR2FtZU5hbWUgPT0gXCJyZWRwYWNrXCIpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLk5vTGltaXRUaW1lID0gY2MuZmluZChcIueVq+W4gy/loLTmma8v5YCS5pW454eI57GgL+eEoemZkOaZglwiKSBcclxuICAgICAgICAgICAgdGhpcy5Ob0xpbWl0VGltZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge30sXHJcbiAgICBcclxuICAgIC8v6YGK5oiy5YCS5pW4XHJcbiAgICBjb3VudGRvd24oKXtcclxuICAgICAgICBpZihnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPT0gXCJlbmRcIiB8fCBnYW1lTW9kZWwuZ2FtZXRpbWVDb3VudERvd24gPT0gMCkgcmV0dXJuO1xyXG4gICAgICAgIGdhbWVNb2RlbC5nYW1ldGltZUNvdW50RG93bi0tO1xyXG4gICAgICAgIHRoaXMuY291bnRkb3duVGV4dC5zdHJpbmcgPSBnYW1lTW9kZWwuZ2FtZXRpbWVDb3VudERvd247XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLmdhbWV0aW1lQ291bnREb3duID09IDEwKSB0aGlzLmN1cnJlbnRzb3VuZCA9IGNjLmF1ZGlvRW5naW5lLnBsYXkodGhpcy50ZW5zZWNvbmQsIHRydWUsIDE1KTtcclxuICAgICAgICBpZihnYW1lTW9kZWwuZ2FtZXRpbWVDb3VudERvd24gPT0gMClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNjLmF1ZGlvRW5naW5lLnN0b3AodGhpcy5jdXJyZW50c291bmQpXHJcbiAgICAgICAgICAgIC8vZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QoXCJlbmRcIiwwLjEpXHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9IFwiZW5kXCJcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgICB1cGRhdGUgKGR0KSB7fSxcclxufSk7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host3_ShowNewWinner_NewestWinner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '01c0cvG7rtNEKfeKqtPa8Hn', 'Host3_ShowNewWinner_NewestWinner');
// 共用模塊/Host3_ShowNewWinner_NewestWinner.js

"use strict";

var gameModel = require("Model");

var Host3_ShowNewWinner_Original = require("Host3_ShowNewWinner"); ///主持人及時顯示中獎玩家並更新最新兩位中獎玩家js


cc.Class({
  "extends": Host3_ShowNewWinner_Original,
  properties: {
    items3_Text: {
      "default": null,
      type: cc.Label
    },
    items4_Text: {
      "default": null,
      type: cc.Label
    },
    items3_Picture: {
      "default": null,
      type: cc.Sprite
    },
    items4_Picture: {
      "default": null,
      type: cc.Sprite
    }
  },
  onLoad: function onLoad() {
    this.itemlist = [];
    this.winlist = [];
    this.index = [];
    this.indexcount = 0;
    this.alreadyend = false;
    this.items3_Text.string = "";
    this.items3_Picture.spriteFrame = null;
    gameModel.WinnerData = this;
    gameModel.SpawnNewestWinner = true;
  },
  //傳送最新2位最新得獎人資料
  NewestWinner: function NewestWinner() {
    var self = this;
    this.items3_Picture.spriteFrame = null;
    this.items3_Text.string = gameModel.winner_name[gameModel.winner_name.length - 1]; //遠端載入: 網址轉圖片

    cc.assetManager.loadRemote(gameModel.winner_picture[gameModel.winner_name.length - 1], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.items3_Picture.spriteFrame = picture;
      }
    }); //取得第二新得獎人資料

    if (gameModel.winner_name.length >= 2) {
      self.items4_Picture.spriteFrame = null;
      this.items4_Text.string = gameModel.winner_name[gameModel.winner_name.length - 2]; //遠端載入: 網址轉圖片

      cc.assetManager.loadRemote(gameModel.winner_picture[gameModel.winner_name.length - 2], {
        ext: '.jpg' || '.png'
      }, function (err, texture) {
        if (err) console.log("錯誤");else {
          var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

          self.items4_Picture.spriteFrame = picture;
        }
      });
    } else {
      this.items4_Text.string = "";
      this.items4_Picture.spriteFrame = null;
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0M19TaG93TmV3V2lubmVyX05ld2VzdFdpbm5lci5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiSG9zdDNfU2hvd05ld1dpbm5lcl9PcmlnaW5hbCIsImNjIiwiQ2xhc3MiLCJwcm9wZXJ0aWVzIiwiaXRlbXMzX1RleHQiLCJ0eXBlIiwiTGFiZWwiLCJpdGVtczRfVGV4dCIsIml0ZW1zM19QaWN0dXJlIiwiU3ByaXRlIiwiaXRlbXM0X1BpY3R1cmUiLCJvbkxvYWQiLCJpdGVtbGlzdCIsIndpbmxpc3QiLCJpbmRleCIsImluZGV4Y291bnQiLCJhbHJlYWR5ZW5kIiwic3RyaW5nIiwic3ByaXRlRnJhbWUiLCJXaW5uZXJEYXRhIiwiU3Bhd25OZXdlc3RXaW5uZXIiLCJOZXdlc3RXaW5uZXIiLCJzZWxmIiwid2lubmVyX25hbWUiLCJsZW5ndGgiLCJhc3NldE1hbmFnZXIiLCJsb2FkUmVtb3RlIiwid2lubmVyX3BpY3R1cmUiLCJleHQiLCJlcnIiLCJ0ZXh0dXJlIiwiY29uc29sZSIsImxvZyIsInBpY3R1cmUiLCJTcHJpdGVGcmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCOztBQUNBLElBQUlDLDRCQUE0QixHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBMUMsRUFFQTs7O0FBQ0FFLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0YsNEJBREo7QUFHTEcsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLFdBQVcsRUFBRTtBQUNULGlCQUFTLElBREE7QUFFVEMsTUFBQUEsSUFBSSxFQUFFSixFQUFFLENBQUNLO0FBRkEsS0FETDtBQUtSQyxJQUFBQSxXQUFXLEVBQUU7QUFDVCxpQkFBUyxJQURBO0FBRVRGLE1BQUFBLElBQUksRUFBRUosRUFBRSxDQUFDSztBQUZBLEtBTEw7QUFTUkUsSUFBQUEs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LENBQWlCVSxNQUFqQixHQUEwQixFQUExQjtBQUNBLFdBQUtQLGNBQUwsQ0FBb0JRLFdBQXBCLEdBQWtDLElBQWxDO0FBQ0E7QUFDSjtBQXRFSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG52YXIgSG9zdDNfU2hvd05ld1dpbm5lcl9PcmlnaW5hbCA9IHJlcXVpcmUoXCJIb3N0M19TaG93TmV3V2lubmVyXCIpXHJcblxyXG4vLy/kuLvmjIHkurrlj4rmmYLpoa/npLrkuK3njY7njqnlrrbkuKbmm7TmlrDmnIDmlrDlhankvY3kuK3njY7njqnlrrZqc1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBIb3N0M19TaG93TmV3V2lubmVyX09yaWdpbmFsLFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBpdGVtczNfVGV4dDoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5MYWJlbFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaXRlbXM0X1RleHQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGl0ZW1zM19QaWN0dXJlOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLlNwcml0ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaXRlbXM0X1BpY3R1cmU6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuU3ByaXRlXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLml0ZW1saXN0PVtdO1xyXG4gICAgICAgIHRoaXMud2lubGlzdD1bXTtcclxuICAgICAgICB0aGlzLmluZGV4ID0gW107XHJcbiAgICAgICAgdGhpcy5pbmRleGNvdW50ID0gMDtcclxuICAgICAgICB0aGlzLmFscmVhZHllbmQgPSBmYWxzZVxyXG4gICAgICAgIHRoaXMuaXRlbXMzX1RleHQuc3RyaW5nID0gXCJcIjtcclxuICAgICAgICB0aGlzLml0ZW1zM19QaWN0dXJlLnNwcml0ZUZyYW1lID0gbnVsbDtcclxuICAgICAgICBnYW1lTW9kZWwuV2lubmVyRGF0YSA9IHRoaXM7XHJcbiAgICAgICAgZ2FtZU1vZGVsLlNwYXduTmV3ZXN0V2lubmVyID0gdHJ1ZTtcclxuICAgIH0sXHJcblxyXG4gICAgLy/lgrPpgIHmnIDmlrAy5L2N5pyA5paw5b6X542O5Lq66LOH5paZXHJcbiAgICBOZXdlc3RXaW5uZXIoKXtcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgICB0aGlzLml0ZW1zM19QaWN0dXJlLnNwcml0ZUZyYW1lID0gbnVsbDtcclxuICAgICAgICB0aGlzLml0ZW1zM19UZXh0LnN0cmluZyA9IGdhbWVNb2RlbC53aW5uZXJfbmFtZVtnYW1lTW9kZWwud2lubmVyX25hbWUubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgLy/pgaDnq6/ovInlhaU6IOe2suWdgOi9ieWclueJh1xyXG4gICAgICAgIGNjLmFzc2V0TWFuYWdlci5sb2FkUmVtb3RlKGdhbWVNb2RlbC53aW5uZXJfcGljdHVyZVtnYW1lTW9kZWwud2lubmVyX25hbWUubGVuZ3RoIC0gMV0se2V4dCA6Jy5qcGcnfHwnLnBuZyd9LGZ1bmN0aW9uKGVycix0ZXh0dXJlKVxyXG4gICAgICAgIHsgXHJcbiAgICAgICAgICBpZiAoZXJyKSBjb25zb2xlLmxvZyhcIumMr+iqpFwiKVxyXG4gICAgICAgICAgZWxzZVxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICB2YXIgcGljdHVyZSA9IG5ldyBjYy5TcHJpdGVGcmFtZSh0ZXh0dXJlKTsgLy90ZXh0dXJlIOi9iSBTcHJpdGVGcmFtZVxyXG4gICAgICAgICAgICBzZWxmLml0ZW1zM19QaWN0dXJlLnNwcml0ZUZyYW1lID0gcGljdHVyZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvL+WPluW+l+esrOS6jOaWsOW+l+eNjuS6uuizh+aWmVxyXG4gICAgICAgIGlmKGdhbWVNb2RlbC53aW5uZXJfbmFtZS5sZW5ndGggPj0gMikgXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzZWxmLml0ZW1zNF9QaWN0dXJlLnNwcml0ZUZyYW1lID0gbnVsbDtcclxuICAgICAgICAgICB0aGlzLml0ZW1zNF9UZXh0LnN0cmluZyA9IGdhbWVNb2RlbC53aW5uZXJfbmFtZVtnYW1lTW9kZWwud2lubmVyX25hbWUubGVuZ3RoIC0gMl07XHJcbiAgICAgICAgICAgLy/pgaDnq6/ovInlhaU6IOe2suWdgOi9ieWclueJh1xyXG4gICAgICAgICAgIGNjLmFzc2V0TWFuYWdlci5sb2FkUmVtb3RlKGdhbWVNb2RlbC53aW5uZXJfcGljdHVyZVtnYW1lTW9kZWwud2lubmVyX25hbWUubGVuZ3RoIC0gMl0se2V4dCA6Jy5qcGcnfHwnLnBuZyd9LGZ1bmN0aW9uKGVycix0ZXh0dXJlKSBcclxuICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIGlmIChlcnIpY29uc29sZS5sb2coXCLpjK/oqqRcIilcclxuICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICB2YXIgcGljdHVyZSA9IG5ldyBjYy5TcHJpdGVGcmFtZSh0ZXh0dXJlKTsgLy90ZXh0dXJlIOi9iSBTcHJpdGVGcmFtZVxyXG4gICAgICAgICAgICAgICAgICAgc2VsZi5pdGVtczRfUGljdHVyZS5zcHJpdGVGcmFtZSA9IHBpY3R1cmU7XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgdGhpcy5pdGVtczRfVGV4dC5zdHJpbmcgPSBcIlwiO1xyXG4gICAgICAgICB0aGlzLml0ZW1zNF9QaWN0dXJlLnNwcml0ZUZyYW1lID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxufSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuIFxyXG4gICAiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host3_ShowNewWinner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '061559Bg5ZGurxX7ddMHO9N', 'Host3_ShowNewWinner');
// 共用模塊/Host3_ShowNewWinner.js

"use strict";

var gameModel = require("Model");

var WinnerItem = require('Host3_WinRecordItem'); ///主持人及時顯示中獎玩家js


cc.Class({
  "extends": cc.Component,
  properties: {
    items: {
      "default": null,
      type: cc.Prefab
    },
    items2: {
      "default": null,
      type: cc.Prefab
    },
    prize_total: {
      "default": null,
      type: cc.Label
    }
  },
  onLoad: function onLoad() {
    this.itemlist = [];
    this.winlist = [];
    this.index = [];
    this.indexcount = 0;
    this.alreadyend = false;
    cc.director.getPhysicsManager().enabled = true;
    gameModel.WinnerData = this;
    gameModel.SpawnNewestWinner = false;
  },
  start: function start() {
    this.items_parent = cc.find("畫布/中獎列表/view/內容");
    gameModel.WebSocket_NumberOfLottery_Host();
    this.prize_total.string = gameModel.prize_total;
  },
  //列出得人獎物件
  SpawnNewWinner: function SpawnNewWinner() {
    if (gameModel.winner_name.length % 2 == 0) {
      this.indexcount++;
      this.index.push(this.indexcount);
      var node = cc.instantiate(this.items);
      node.parent = this.items_parent;
      node.setSiblingIndex(0); //讓子物件顯示在最上層

      var obj = node.getComponent(WinnerItem); //抓取WinnerItem

      this.itemlist.push(obj);
      this.itemlist[this.indexcount - 1].updateInfo(this.indexcount - 1);
    } else {
      this.indexcount++;
      this.index.push(this.indexcount);
      var node = cc.instantiate(this.items2);
      node.parent = this.items_parent;
      node.setSiblingIndex(0); //讓子物件顯示在最上層

      var obj = node.getComponent(WinnerItem); //抓取WinnerItem

      this.itemlist.push(obj);
      this.itemlist[this.indexcount - 1].updateInfo(this.indexcount - 1);
    }

    this.prize_total.string = gameModel.prize_total;
  },
  //按下關閉遊戲鍵
  CloseGame: function CloseGame() {
    gameModel.WebSocket_GameStatus_Host("end", 0.1);
    gameModel.GameStatusMessage = "end";
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "end" && this.alreadyend == false) {
      this.alreadyend = true;
      gameModel.NumberOfLotteryWS_Host.close();
      cc.director.loadScene("Host4_Last" + gameModel.BackGround_Theme);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0M19TaG93TmV3V2lubmVyLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJXaW5uZXJJdGVtIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJpdGVtcyIsInR5cGUiLCJQcmVmYWIiLCJpdGVtczIiLCJwcml6ZV90b3RhbCIsIkxhYmVsIiwib25Mb2FkIiwiaXRlbWxpc3QiLCJ3aW5saXN0IiwiaW5kZXgiLCJpbmRleGNvdW50IiwiYWxyZWFkeWVuZCIsImRpcmVjdG9yIiwiZ2V0UGh5c2ljc01hbmFnZXIiLCJlbmFibGVkIiwiV2lubmVyRGF0YSIsIlNwYXduTmV3ZXN0V2lubmVyIiwic3RhcnQiLCJpdGVtc19wYXJlbnQiLCJmaW5kIiwiV2ViU29ja2V0X051bWJlck9mTG90dGVyeV9Ib3N0Iiwic3RyaW5nIiwiU3Bhd25OZXdXaW5uZXIiLCJ3aW5uZXJfbmFtZSIsImxlbmd0aCIsInB1c2giLCJub2RlIiwiaW5zdGFudGlhdGUiLCJwYXJlbnQiLCJzZXRTaWJsaW5nSW5kZXgiLCJvYmoiLCJnZXRDb21wb25lbnQiLCJ1cGRhdGVJbmZvIiwiQ2xvc2VHYW1lIiwiV2ViU29ja2V0X0dhbWVTdGF0dXNfSG9zdCIsIkdhbWVTdGF0dXNNZXNzYWdlIiwidXBkYXRlIiwiZHQiLCJOdW1iZXJPZkxvdHRlcnlXU19Ib3N0IiwiY2xvc2UiLCJsb2FkU2NlbmUiLCJCYWNrR3JvdW5kX1RoZW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBeEIsRUFFQTs7O0FBQ0FFLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxL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LFNBL0RLLHVCQStETTtBQUNQeEMsSUFBQUEsU0FBUyxDQUFDeUMseUJBQVYsQ0FBb0MsS0FBcEMsRUFBMEMsR0FBMUM7QUFDQXpDLElBQUFBLFNBQVMsQ0FBQzBDLGlCQUFWLEdBQThCLEtBQTlCO0FBQ0gsR0FsRUk7QUFvRUxDLEVBQUFBLE1BcEVLLGtCQW9FR0MsRUFwRUgsRUFvRU87QUFDVCxRQUFHNUMsU0FBUyxDQUFDMEMsaUJBQVYsSUFBK0IsS0FBL0IsSUFBd0MsS0FBS3hCLFVBQUwsSUFBbUIsS0FBOUQsRUFDQTtBQUNHLFdBQUtBLFVBQUwsR0FBa0IsSUFBbEI7QUFDQWxCLE1BQUFBLFNBQVMsQ0FBQzZDLHNCQUFWLENBQWlDQyxLQUFqQztBQUNBM0MsTUFBQUEsRUFBRSxDQUFDZ0IsUUFBSCxDQUFZNEIsU0FBWixDQUFzQixlQUFjL0MsU0FBUyxDQUFDZ0QsZ0JBQTlDO0FBQ0Y7QUFDSDtBQTNFSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG52YXIgV2lubmVySXRlbSA9IHJlcXVpcmUoJ0hvc3QzX1dpblJlY29yZEl0ZW0nKVxyXG5cclxuLy8v5Li75oyB5Lq65Y+K5pmC6aGv56S65Lit542O546p5a62anNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBpdGVtczoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5QcmVmYWJcclxuICAgICAgICB9LFxyXG4gICAgICAgIGl0ZW1zMjoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5QcmVmYWJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHByaXplX3RvdGFsOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkxhYmVsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLml0ZW1saXN0PSBbXTtcclxuICAgICAgICB0aGlzLndpbmxpc3Q9IFtdO1xyXG4gICAgICAgIHRoaXMuaW5kZXggPSBbXTtcclxuICAgICAgICB0aGlzLmluZGV4Y291bnQgPSAwO1xyXG4gICAgICAgIHRoaXMuYWxyZWFkeWVuZCA9IGZhbHNlXHJcbiAgICAgICAgY2MuZGlyZWN0b3IuZ2V0UGh5c2ljc01hbmFnZXIoKS5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICBnYW1lTW9kZWwuV2lubmVyRGF0YSA9IHRoaXM7XHJcbiAgICAgICAgZ2FtZU1vZGVsLlNwYXduTmV3ZXN0V2lubmVyID0gZmFsc2U7ICAgIFxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIHRoaXMuaXRlbXNfcGFyZW50ID0gY2MuZmluZChcIueVq+W4gy/kuK3njY7liJfooagvdmlldy/lhaflrrlcIik7XHJcbiAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9OdW1iZXJPZkxvdHRlcnlfSG9zdCgpO1xyXG4gICAgICAgIHRoaXMucHJpemVfdG90YWwuc3RyaW5nID0gZ2FtZU1vZGVsLnByaXplX3RvdGFsO1xyXG4gICAgfSxcclxuXHJcbiAgICAvL+WIl+WHuuW+l+S6uueNjueJqeS7tlxyXG4gICAgU3Bhd25OZXdXaW5uZXIoKXtcclxuICAgICAgICAgICBpZihnYW1lTW9kZWwud2lubmVyX25hbWUubGVuZ3RoICUgMiA9PSAwKVxyXG4gICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdGhpcy5pbmRleGNvdW50Kys7XHJcbiAgICAgICAgICAgICAgIHRoaXMuaW5kZXgucHVzaCh0aGlzLmluZGV4Y291bnQpO1xyXG4gICAgICAgICAgICAgICB2YXIgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuaXRlbXMpO1xyXG4gICAgICAgICAgICAgICBub2RlLnBhcmVudCA9IHRoaXMuaXRlbXNfcGFyZW50O1xyXG4gICAgICAgICAgICAgICBub2RlLnNldFNpYmxpbmdJbmRleCgwKTsgLy/orpPlrZDnianku7bpoa/npLrlnKjmnIDkuIrlsaRcclxuICAgICAgICAgICAgICAgdmFyIG9iaiA9IG5vZGUuZ2V0Q29tcG9uZW50KFdpbm5lckl0ZW0pOy8v5oqT5Y+WV2lubmVySXRlbVxyXG4gICAgICAgICAgICAgICB0aGlzLml0ZW1saXN0LnB1c2gob2JqKTtcclxuICAgICAgICAgICAgICAgdGhpcy5pdGVtbGlzdFt0aGlzLmluZGV4Y291bnQgLSAxXS51cGRhdGVJbmZvKHRoaXMuaW5kZXhjb3VudCAtIDEpO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB0aGlzLmluZGV4Y291bnQrKztcclxuICAgICAgICAgICAgICAgdGhpcy5pbmRleC5wdXNoKHRoaXMuaW5kZXhjb3VudCk7XHJcbiAgICAgICAgICAgICAgIHZhciBub2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy5pdGVtczIpO1xyXG4gICAgICAgICAgICAgICBub2RlLnBhcmVudCA9IHRoaXMuaXRlbXNfcGFyZW50O1xyXG4gICAgICAgICAgICAgICBub2RlLnNldFNpYmxpbmdJbmRleCgwKTsgLy/orpPlrZDnianku7bpoa/npLrlnKjmnIDkuIrlsaRcclxuICAgICAgICAgICAgICAgdmFyIG9iaiA9IG5vZGUuZ2V0Q29tcG9uZW50KFdpbm5lckl0ZW0pOy8v5oqT5Y+WV2lubmVySXRlbVxyXG4gICAgICAgICAgICAgICB0aGlzLml0ZW1saXN0LnB1c2gob2JqKTtcclxuICAgICAgICAgICAgICAgdGhpcy5pdGVtbGlzdFt0aGlzLmluZGV4Y291bnQgLSAxXS51cGRhdGVJbmZvKHRoaXMuaW5kZXhjb3VudCAtIDEpO1xyXG4gICAgICAgICAgIH0gICAgXHJcbiAgICAgICAgICAgdGhpcy5wcml6ZV90b3RhbC5zdHJpbmcgPSBnYW1lTW9kZWwucHJpemVfdG90YWw7XHJcbiAgICB9LFxyXG5cclxuICAgIC8v5oyJ5LiL6Zec6ZaJ6YGK5oiy6Y21XHJcbiAgICBDbG9zZUdhbWUoKXtcclxuICAgICAgICBnYW1lTW9kZWwuV2ViU29ja2V0X0dhbWVTdGF0dXNfSG9zdChcImVuZFwiLDAuMSlcclxuICAgICAgICBnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPSBcImVuZFwiXHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZSAoZHQpIHtcclxuICAgICAgIGlmKGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcImVuZFwiICYmIHRoaXMuYWxyZWFkeWVuZCA9PSBmYWxzZSlcclxuICAgICAgIHtcclxuICAgICAgICAgIHRoaXMuYWxyZWFkeWVuZCA9IHRydWU7XHJcbiAgICAgICAgICBnYW1lTW9kZWwuTnVtYmVyT2ZMb3R0ZXJ5V1NfSG9zdC5jbG9zZSgpO1xyXG4gICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiSG9zdDRfTGFzdFwiKyBnYW1lTW9kZWwuQmFja0dyb3VuZF9UaGVtZSk7XHJcbiAgICAgICB9XHJcbiAgICB9LFxyXG59KTtcclxuXHJcblxyXG5cclxuXHJcblxyXG4gXHJcbiAgICJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host3_ShowNewWinner_Score.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '03276Fbw89CPYjVjkDILSwm', 'Host3_ShowNewWinner_Score');
// 共用模塊/Host3_ShowNewWinner_Score.js

"use strict";

var gameModel = require("Model");

var WinnerItem = require('Host3_WinRecordItem_Score');

var Host3_ShowNewWinner_Original = require("Host3_ShowNewWinner"); ///主持人及時顯示玩家分數js


cc.Class({
  "extends": Host3_ShowNewWinner_Original,
  properties: {
    round: {
      "default": null,
      type: cc.Label
    },
    WaitingRank: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    this.alreadyend = false;
    this.itemlist = [];
    this.winlist = [];
    this.index = [];
    this.indexcount = 0;
    gameModel.WinnerData = this;
    gameModel.SpawnNewestWinner = false;
  },
  start: function start() {
    this.items_parent = cc.find("畫布/中獎列表/view/內容");
    gameModel.WebSocket_NumberOfLottery_Score_Host();
    this.round.string = gameModel.CurrentRound;
  },
  //列出得人獎物件
  SpawnNewWinner: function SpawnNewWinner() {
    if (gameModel.winner_name.length % 2 == 0) {
      this.indexcount++;
      this.index.push(this.indexcount);
      var node = cc.instantiate(this.items);
      node.parent = this.items_parent;
      var obj = node.getComponent(WinnerItem); //抓取WinnerItem

      this.itemlist.push(obj);
      this.itemlist[this.indexcount - 1].updateInfo(this.indexcount - 1);
    } else {
      this.indexcount++;
      this.index.push(this.indexcount);
      var node = cc.instantiate(this.items2);
      node.parent = this.items_parent;
      var obj = node.getComponent(WinnerItem); //抓取WinnerItem

      this.itemlist.push(obj);
      this.itemlist[this.indexcount - 1].updateInfo(this.indexcount - 1);
    }
  },
  ClearRank: function ClearRank() {
    this.indexcount = 0;
    this.index.length = 0;
    this.itemlist.length = 0;
    this.items_parent.removeAllChildren();
  },
  NextSence: function NextSence() {
    gameModel.WebSocket_GameStatus_Host("end", 0.1);
    gameModel.GameStatusMessage = "end";
    this.scheduleOnce(function () {
      cc.director.loadScene("Host4_Last" + gameModel.BackGround_Theme);
    }, 2);
  },
  CloseGame: function CloseGame() {
    gameModel.WebSocket_GameStatus_Host("calculate", 0.1);
    gameModel.GameStatusMessage = "calculate";
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "calculate" && this.alreadyend == false) {
      this.alreadyend = true;
      this.WaitingRank.active = true;
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host3_WinRecordItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9bc09ZSX01DaKAtO2ymPTAw', 'Host3_WinRecordItem');
// 共用模塊/Host3_WinRecordItem.js

"use strict";

var gameModel = require("Model"); ///即時中獎玩家資訊物件js


cc.Class({
  "extends": cc.Component,
  properties: {
    playerName: {
      "default": null,
      type: cc.Label
    },
    playerAvatar: {
      "default": null,
      type: cc.Sprite
    }
  },
  updateInfo: function updateInfo(i) {
    var self = this;
    this.playerName.string = gameModel.winner_name[i]; //遠端載入: 網址轉圖片

    cc.assetManager.loadRemote(gameModel.winner_picture[i], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.playerAvatar.spriteFrame = picture;
      }
    });
  },
  onLoad: function onLoad() {},
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0M19XaW5SZWNvcmRJdGVtLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInBsYXllck5hbWUiLCJ0eXBlIiwiTGFiZWwiLCJwbGF5ZXJBdmF0YXIiLCJTcHJpdGUiLCJ1cGRhdGVJbmZvIiwiaSIsInNlbGYiLCJzdHJpbmciLCJ3aW5uZXJfbmFtZSIsImFzc2V0TWFuYWdlciIsImxvYWRSZW1vdGUiLCJ3aW5uZXJfcGljdHVyZSIsImV4dCIsImVyciIsInRleHR1cmUiLCJjb25zb2xlIiwibG9nIiwicGljdHVyZSIsIlNwcml0ZUZyYW1lIiwic3ByaXRlRnJhbWUiLCJvbkxvYWQiLCJzdGFydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCLEVBRUE7OztBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFFUkMsSUFBQUEsVUFBVSxFQUFFO0FBQ1IsaUJBQVEsSUFEQTtBQUVSQyxNQUFBQSxJQUFJLEVBQUNMLEVBQUUsQ0FBQ007QUFGQSxLQUZKO0FBTVJDLElBQUFBLFlBQVksRUFBQztBQUNULGlCQUFRLElBREM7QUFFVEYsTUFBQUEsSUFBSSxFQUFDTCxFQUFFLENBQUNRO0FBRkM7QUFOTCxHQUhQO0FBZUxDLEVBQUFBLFVBZkssc0JBZU1DLENBZk4sRUFlUTtBQUNULFFBQUlDLElBQUksR0FBRyxJQUFYO0FBQ0EsU0FBS1AsVUFBTCxDQUFnQlEsTUFBaEIsR0FBeUJkLFNBQVMsQ0FBQ2UsV0FBVixDQUFzQkgsQ0FBdEIsQ0FBekIsQ0FGUyxDQUdUOztBQUNDVixJQUFBQSxFQUFFLENBQUNjLFlBQUgsQ0FBZ0JDLFVBQWhCLENBQTJCakIsU0FBUyxDQUFDa0IsY0FBVixDQUF5Qk4sQ0FBekIsQ0FBM0IsRUFBdUQ7QUFBQ08sTUFBQUEsR0FBRyxFQUFFLFVBQVE7QUFBZCxLQUF2RCxFQUE2RSxVQUFTQyxHQUFULEVBQWFDLE9BQWIsRUFDN0U7QUFDSSxVQUFHRCxHQUFILEVBQVFFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVosRUFBUixLQUVBO0FBQ0ksWUFBSUMsT0FBTyxHQUFHLElBQUl0QixFQUFFLENBQUN1QixXQUFQLENBQW1CSixPQUFuQixDQUFkLENBREosQ0FDK0M7O0FBQzNDUixRQUFBQSxJQUFJLENBQUNKLFlBQUwsQ0FBa0JpQixXQUFsQixHQUFnQ0YsT0FBaEM7QUFDSDtBQUNILEtBUkY7QUFTSixHQTVCSTtBQThCTEcsRUFBQUEsTUE5Qkssb0JBOEJLLENBQUUsQ0E5QlA7QUFnQ0xDLEVBQUFBLEtBaENLLG1CQWdDSSxDQUFFLENBaENOLENBa0NMOztBQWxDSyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5cclxuLy8v5Y2z5pmC5Lit542O546p5a626LOH6KiK54mp5Lu2anNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuXHJcbiAgICAgICAgcGxheWVyTmFtZToge1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBsYXllckF2YXRhcjp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcclxuICAgICAgICAgICAgdHlwZTpjYy5TcHJpdGVcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgdXBkYXRlSW5mbyhpKXsgXHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMucGxheWVyTmFtZS5zdHJpbmcgPSBnYW1lTW9kZWwud2lubmVyX25hbWVbaV07XHJcbiAgICAgICAgLy/pgaDnq6/ovInlhaU6IOe2suWdgOi9ieWclueJh1xyXG4gICAgICAgICBjYy5hc3NldE1hbmFnZXIubG9hZFJlbW90ZShnYW1lTW9kZWwud2lubmVyX3BpY3R1cmVbaV0se2V4dCA6Jy5qcGcnfHwnLnBuZyd9LGZ1bmN0aW9uKGVycix0ZXh0dXJlKVxyXG4gICAgICAgICB7IFxyXG4gICAgICAgICAgICAgaWYoZXJyKSBjb25zb2xlLmxvZyhcIumMr+iqpFwiKVxyXG4gICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgIHZhciBwaWN0dXJlID0gbmV3IGNjLlNwcml0ZUZyYW1lKHRleHR1cmUpOyAvL3RleHR1cmUg6L2JIFNwcml0ZUZyYW1lXHJcbiAgICAgICAgICAgICAgICAgc2VsZi5wbGF5ZXJBdmF0YXIuc3ByaXRlRnJhbWUgPSBwaWN0dXJlO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZCAoKSB7fSxcclxuXHJcbiAgICBzdGFydCAoKSB7fSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host3_WinRecordItem_Score.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7c76p0jrlDFbC91FqfD5fX', 'Host3_WinRecordItem_Score');
// 共用模塊/Host3_WinRecordItem_Score.js

"use strict";

var gameModel = require("Model");

var Host3_WinRecordItem = require("Host3_WinRecordItem"); ///即時中獎玩家資訊物件js


cc.Class({
  "extends": Host3_WinRecordItem,
  properties: {
    Score: {
      "default": null,
      type: cc.Label
    }
  },
  updateInfo: function updateInfo(i) {
    var self = this;
    this.playerName.string = gameModel.winner_name[i];
    this.Score.string = gameModel.winner_score[i]; //遠端載入: 網址轉圖片

    cc.assetManager.loadRemote(gameModel.winner_picture[i], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.playerAvatar.spriteFrame = picture;
      }
    });
  },
  onLoad: function onLoad() {},
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0M19XaW5SZWNvcmRJdGVtX1Njb3JlLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJIb3N0M19XaW5SZWNvcmRJdGVtIiwiY2MiLCJDbGFzcyIsInByb3BlcnRpZXMiLCJTY29yZSIsInR5cGUiLCJMYWJlbCIsInVwZGF0ZUluZm8iLCJpIiwic2VsZiIsInBsYXllck5hbWUiLCJzdHJpbmciLCJ3aW5uZXJfbmFtZSIsIndpbm5lcl9zY29yZSIsImFzc2V0TWFuYWdlciIsImxvYWRSZW1vdGUiLCJ3aW5uZXJfcGljdHVyZSIsImV4dCIsImVyciIsInRleHR1cmUiLCJjb25zb2xlIiwibG9nIiwicGljdHVyZSIsIlNwcml0ZUZyYW1lIiwicGxheWVyQXZhdGFyIiwic3ByaXRlRnJhbWUiLCJvbkxvYWQiLCJzdGFydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCOztBQUNBLElBQUlDLG1CQUFtQixHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBakMsRUFFQTs7O0FBQ0FFLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0YsbUJBREo7QUFHTEcsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLEtBQUssRUFBQztBQUNGLGlCQUFTLElBRFA7QUFFRkMsTUFBQUEsSUFBSSxFQUFFSixFQUFFLENBQUNLO0FBRlA7QUFERSxHQUhQO0FBVUxDLEVBQUFBLFVBVkssc0JBVU1DLENBVk4sRUFVUTtBQUNULFFBQUlDLElBQUksR0FBRyxJQUFYO0FBQ0EsU0FBS0MsVUFBTCxDQUFnQkMsTUFBaEIsR0FBeUJiLFNBQVMsQ0FBQ2MsV0FBVixDQUFzQkosQ0FBdEIsQ0FBekI7QUFDQSxTQUFLSixLQUFMLENBQVdPLE1BQVgsR0FBb0JiLFNBQVMsQ0FBQ2UsWUFBVixDQUF1QkwsQ0FBdkIsQ0FBcEIsQ0FIUyxDQUlUOztBQUNDUCxJQUFBQSxFQUFFLENBQUNhLFlBQUgsQ0FBZ0JDLFVBQWhCLENBQTJCakIsU0FBUyxDQUFDa0IsY0FBVixDQUF5QlIsQ0FBekIsQ0FBM0IsRUFBdUQ7QUFBQ1MsTUFBQUEsR0FBRyxFQUFFLFVBQVE7QUFBZCxLQUF2RCxFQUE2RSxVQUFTQyxHQUFULEVBQWFDLE9BQWIsRUFDN0U7QUFDSSxVQUFHRCxHQUFILEVBQVFFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVosRUFBUixLQUVBO0FBQ0ksWUFBSUMsT0FBTyxHQUFHLElBQUlyQixFQUFFLENBQUNzQixXQUFQLENBQW1CSixPQUFuQixDQUFkLENBREosQ0FDK0M7O0FBQzNDVixRQUFBQSxJQUFJLENBQUNlLFlBQUwsQ0FBa0JDLFdBQWxCLEdBQWdDSCxPQUFoQztBQUNIO0FBQ0gsS0FSRjtBQVNKLEdBeEJJO0FBMEJMSSxFQUFBQSxNQTFCSyxvQkEwQkssQ0FBRSxDQTFCUDtBQTRCTEMsRUFBQUEsS0E1QkssbUJBNEJJLENBQUUsQ0E1Qk4sQ0E4Qkw7O0FBOUJLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcbnZhciBIb3N0M19XaW5SZWNvcmRJdGVtID0gcmVxdWlyZShcIkhvc3QzX1dpblJlY29yZEl0ZW1cIilcclxuXHJcbi8vL+WNs+aZguS4reeNjueOqeWutuizh+ioiueJqeS7tmpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IEhvc3QzX1dpblJlY29yZEl0ZW0sXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIFNjb3JlOntcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgdXBkYXRlSW5mbyhpKXsgXHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMucGxheWVyTmFtZS5zdHJpbmcgPSBnYW1lTW9kZWwud2lubmVyX25hbWVbaV07XHJcbiAgICAgICAgdGhpcy5TY29yZS5zdHJpbmcgPSBnYW1lTW9kZWwud2lubmVyX3Njb3JlW2ldXHJcbiAgICAgICAgLy/pgaDnq6/ovInlhaU6IOe2suWdgOi9ieWclueJh1xyXG4gICAgICAgICBjYy5hc3NldE1hbmFnZXIubG9hZFJlbW90ZShnYW1lTW9kZWwud2lubmVyX3BpY3R1cmVbaV0se2V4dCA6Jy5qcGcnfHwnLnBuZyd9LGZ1bmN0aW9uKGVycix0ZXh0dXJlKVxyXG4gICAgICAgICB7IFxyXG4gICAgICAgICAgICAgaWYoZXJyKSBjb25zb2xlLmxvZyhcIumMr+iqpFwiKVxyXG4gICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgIHZhciBwaWN0dXJlID0gbmV3IGNjLlNwcml0ZUZyYW1lKHRleHR1cmUpOyAvL3RleHR1cmUg6L2JIFNwcml0ZUZyYW1lXHJcbiAgICAgICAgICAgICAgICAgc2VsZi5wbGF5ZXJBdmF0YXIuc3ByaXRlRnJhbWUgPSBwaWN0dXJlO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZCAoKSB7fSxcclxuXHJcbiAgICBzdGFydCAoKSB7fSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host4_WinnerRedpaket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0e162/m1CBNZLvJg8kV82EK', 'Host4_WinnerRedpaket');
// 共用模塊/Host4_WinnerRedpaket.js

"use strict";

var gameModel = require("Model"); ///主持人結算場景中獎玩家資訊物件js


cc.Class({
  "extends": cc.Component,
  properties: {
    playerName: {
      "default": null,
      type: cc.Label
    },
    prize_name: {
      "default": null,
      type: cc.Label
    },
    playerAvatar: {
      "default": null,
      type: cc.Sprite
    }
  },
  updateInfo: function updateInfo(i) {
    var self = this;
    this.playerName.string = gameModel.winner_name[i];
    this.playerAvatar.spriteFrames = gameModel.winner_picture[i];
    this.prize_name.string = gameModel.prize_name_host[i];
    cc.assetManager.loadRemote(gameModel.winner_picture[i], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.playerAvatar.spriteFrame = picture;
      }
    });
  },
  onLoad: function onLoad() {},
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0NF9XaW5uZXJSZWRwYWtldC5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJwbGF5ZXJOYW1lIiwidHlwZSIsIkxhYmVsIiwicHJpemVfbmFtZSIsInBsYXllckF2YXRhciIsIlNwcml0ZSIsInVwZGF0ZUluZm8iLCJpIiwic2VsZiIsInN0cmluZyIsIndpbm5lcl9uYW1lIiwic3ByaXRlRnJhbWVzIiwid2lubmVyX3BpY3R1cmUiLCJwcml6ZV9uYW1lX2hvc3QiLCJhc3NldE1hbmFnZXIiLCJsb2FkUmVtb3RlIiwiZXh0IiwiZXJyIiwidGV4dHVyZSIsImNvbnNvbGUiLCJsb2ciLCJwaWN0dXJlIiwiU3ByaXRlRnJhbWUiLCJzcHJpdGVGcmFtZSIsIm9uTG9hZCIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkIsRUFFQTs7O0FBQ0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxVQUFVLEVBQUU7QUFDUixpQkFBUSxJQURBO0FBRVJDLE1BQUFBLElBQUksRUFBQ0wsRUFBRSxDQUFDTTtBQUZBLEtBREo7QUFLUkMsSUFBQUEsVUFBVSxFQUFFO0FBQ1IsaUJBQVEsSUFEQTtBQUVSRixNQUFBQSxJQUFJLEVBQUNMLEVBQUUsQ0FBQ007QUFGQSxLQUxKO0FBU1JFLElBQUFBLFlBQVksRUFBQztBQUNULGlCQUFRLElBREM7QUFFVEgsTUFBQUEsSUFBSSxFQUFDTCxFQUFFLENBQUNTO0FBRkM7QUFUTCxHQUhQO0FBa0JMQyxFQUFBQSxVQWxCSyxzQkFrQk1DLENBbEJOLEVBa0JRO0FBQ1QsUUFBSUMsSUFBSSxHQUFHLElBQVg7QUFDQSxTQUFLUixVQUFMLENBQWdCUyxNQUFoQixHQUF5QmYsU0FBUyxDQUFDZ0IsV0FBVixDQUFzQkgsQ0FBdEIsQ0FBekI7QUFDQSxTQUFLSCxZQUFMLENBQWtCTyxZQUFsQixHQUFpQ2pCLFNBQVMsQ0FBQ2tCLGNBQVYsQ0FBeUJMLENBQXpCLENBQWpDO0FBQ0EsU0FBS0osVUFBTCxDQUFnQk0sTUFBaEIsR0FBeUJmLFNBQVMsQ0FBQ21CLGVBQVYsQ0FBMEJOLENBQTFCLENBQXpCO0FBQ0FYLElBQUFBLEVBQUUsQ0FBQ2tCLFlBQUgsQ0FBZ0JDLFVBQWhCLENBQTJCckIsU0FBUyxDQUFDa0IsY0FBVixDQUF5QkwsQ0FBekIsQ0FBM0IsRUFBdUQ7QUFBQ1MsTUFBQUEsR0FBRyxFQUFFLFVBQVE7QUFBZCxLQUF2RCxFQUE2RSxVQUFTQyxHQUFULEVBQWFDLE9BQWIsRUFDN0U7QUFDSSxVQUFHRCxHQUFILEVBQVFFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVosRUFBUixLQUVBO0FBQ0ksWUFBSUMsT0FBTyxHQUFHLElBQUl6QixFQUFFLENBQUMwQixXQUFQLENBQW1CSixPQUFuQixDQUFkLENBREosQ0FDK0M7O0FBQzNDVixRQUFBQSxJQUFJLENBQUNKLFlBQUwsQ0FBa0JtQixXQUFsQixHQUFnQ0YsT0FBaEM7QUFDSDtBQUNILEtBUkY7QUFTSCxHQWhDSTtBQWtDTEcsRUFBQUEsTUFsQ0ssb0JBa0NLLENBQUUsQ0FsQ1A7QUFvQ0xDLEVBQUFBLEtBcENLLG1CQW9DSSxDQUFFLENBcENOLENBc0NMOztBQXRDSyxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5cclxuLy8v5Li75oyB5Lq657WQ566X5aC05pmv5Lit542O546p5a626LOH6KiK54mp5Lu2anNcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBwbGF5ZXJOYW1lOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcclxuICAgICAgICAgICAgdHlwZTpjYy5MYWJlbFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcHJpemVfbmFtZToge1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBsYXllckF2YXRhcjp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcclxuICAgICAgICAgICAgdHlwZTpjYy5TcHJpdGVcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuXHJcbiAgICB1cGRhdGVJbmZvKGkpeyBcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXJOYW1lLnN0cmluZyA9IGdhbWVNb2RlbC53aW5uZXJfbmFtZVtpXTtcclxuICAgICAgICB0aGlzLnBsYXllckF2YXRhci5zcHJpdGVGcmFtZXMgPSBnYW1lTW9kZWwud2lubmVyX3BpY3R1cmVbaV07XHJcbiAgICAgICAgdGhpcy5wcml6ZV9uYW1lLnN0cmluZyA9IGdhbWVNb2RlbC5wcml6ZV9uYW1lX2hvc3RbaV07XHJcbiAgICAgICAgY2MuYXNzZXRNYW5hZ2VyLmxvYWRSZW1vdGUoZ2FtZU1vZGVsLndpbm5lcl9waWN0dXJlW2ldLHtleHQgOicuanBnJ3x8Jy5wbmcnfSxmdW5jdGlvbihlcnIsdGV4dHVyZSlcclxuICAgICAgICB7IFxyXG4gICAgICAgICAgICBpZihlcnIpIGNvbnNvbGUubG9nKFwi6Yyv6KqkXCIpXHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBpY3R1cmUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7IC8vdGV4dHVyZSDovYkgU3ByaXRlRnJhbWVcclxuICAgICAgICAgICAgICAgIHNlbGYucGxheWVyQXZhdGFyLnNwcml0ZUZyYW1lID0gcGljdHVyZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkICgpIHt9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHt9LFxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/RoleConfirm.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4b008WMP59FvIX0HbAAwdXl', 'RoleConfirm');
// 共用模塊/RoleConfirm.js

"use strict";

var gameModel = require("Model"); ///判斷腳色js


cc.Class({
  "extends": cc.Component,
  properties: {
    WrongAlert: {
      "default": null,
      type: cc.Node
    },
    AlertText: {
      "default": null,
      type: cc.Label
    }
  },
  onLoad: function onLoad() {
    gameModel.GameName = cc.director.getScene()._name.substr(12, cc.director.getScene()._name.length); //取得遊戲名稱

    gameModel.local_ID = window.location.host == ("hilives.net" || "www.hilives.net") ? "api.hilives.net" : "apidev.hilives.net";
    gameModel.Domain = "https://" + window.location.host; //取得目前的網域

    this.CheckRole = false;
    gameModel.GameStatusMessage = "open";
    gameModel.Game_Information();
  },
  start: function start() {
    gameModel.RoleComfirm();
  },
  JudgeError: function JudgeError() {
    if (gameModel.CheckRole == true && gameModel.CannotJoinGame == "") this.JudgeRole();else if (gameModel.CheckRole == true && gameModel.CannotJoinGame != "") {
      this.AlertText.string = gameModel.CannotJoinGame;
      this.WrongAlert.active = true;
      gameModel.CheckRole = false;
    }
  },
  //判斷用戶角色並切換至各自角色場景
  JudgeRole: function JudgeRole() {
    gameModel.CheckRole = false;

    if (gameModel.role == "guest" && this.CheckRole == false) {
      this.CheckRole = true;
      gameModel.WebSocket_NumberOfPeople_Guest(1000, false);
      gameModel.WebSocket_GameStatus_Guest();
      if (gameModel.game_type == "turntable") cc.director.loadScene("Guest1_Weel" + gameModel.BackGround_Theme);else if (gameModel.game_type == "jiugongge") cc.director.loadScene("Guest1_Jiugongge" + gameModel.BackGround_Theme);else cc.director.loadScene("Guest1_JoinGame" + gameModel.BackGround_Theme);
    } else if (gameModel.role == "host" && this.CheckRole == false) {
      this.CheckRole = true;
      gameModel.GameStatusWS_Host = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/status/host?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //開啟遊戲狀態ws

      this.scheduleOnce(function () {
        //每1秒鐘值行一次，重複做1次
        gameModel.WebSocket_NumberOfPeople_Host();

        if (gameModel.game_type == "turntable") {
          gameModel.WebSocket_GameStatus_Host("close", 0.1);
          gameModel.NumberOfLotteryWS_Host = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/winning/staff?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //開啟更新得獎人的ws

          cc.director.loadScene("Host1_Weel" + gameModel.BackGround_Theme);
        } else if (gameModel.game_type == "jiugongge") {
          gameModel.WebSocket_GameStatus_Host("close", 0.1);
          gameModel.NumberOfLotteryWS_Host = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/winning/staff?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //開啟更新得獎人的ws

          cc.director.loadScene("Host1_Jiugongge" + gameModel.BackGround_Theme);
        } else {
          gameModel.WebSocket_GameStatus_Host("open", 0.1);
          cc.director.loadScene("Host1_Start" + gameModel.BackGround_Theme);
        }
      }, 1);
    }
  },
  //持續判斷用戶角色
  update: function update(dt) {
    this.JudgeError();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxSb2xlQ29uZmlybS5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJXcm9uZ0FsZXJ0IiwidHlwZSIsIk5vZGUiLCJBbGVydFRleHQiLCJMYWJlbCIsIm9uTG9hZCIsIkdhbWVOYW1lIiwiZGlyZWN0b3IiLCJnZXRTY2VuZSIsIl9uYW1lIiwic3Vic3RyIiwibGVuZ3RoIiwibG9jYWxfSUQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhvc3QiLCJEb21haW4iLCJDaGVja1JvbGUiLCJHYW1lU3RhdHVzTWVzc2FnZSIsIkdhbWVfSW5mb3JtYXRpb24iLCJzdGFydCIsIlJvbGVDb21maXJtIiwiSnVkZ2VFcnJvciIsIkNhbm5vdEpvaW5HYW1lIiwiSnVkZ2VSb2xlIiwic3RyaW5nIiwiYWN0aXZlIiwicm9sZSIsIldlYlNvY2tldF9OdW1iZXJPZlBlb3BsZV9HdWVzdCIsIldlYlNvY2tldF9HYW1lU3RhdHVzX0d1ZXN0IiwiZ2FtZV90eXBlIiwibG9hZFNjZW5lIiwiQmFja0dyb3VuZF9UaGVtZSIsIkdhbWVTdGF0dXNXU19Ib3N0IiwiV2ViU29ja2V0IiwiYWN0aXZpdHlfaWQiLCJnYW1lX2lkIiwic2NoZWR1bGVPbmNlIiwiV2ViU29ja2V0X051bWJlck9mUGVvcGxlX0hvc3QiLCJXZWJTb2NrZXRfR2FtZVN0YXR1c19Ib3N0IiwiTnVtYmVyT2ZMb3R0ZXJ5V1NfSG9zdCIsInVwZGF0ZSIsImR0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkIsRUFFQTs7O0FBQ0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxVQUFVLEVBQUM7QUFDUCxpQkFBUSxJ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STFDLFNBQVMsQ0FBQ1ksUUFBckssQ0FBbkMsQ0FGSixDQUV1Tjs7QUFDbk5WLFVBQUFBLEVBQUUsQ0FBQ1csUUFBSCxDQUFZd0IsU0FBWixDQUFzQixvQkFBbUJyQyxTQUFTLENBQUNzQyxnQkFBbkQ7QUFDSCxTQUxJLE1BT0w7QUFDSXRDLFVBQUFBLFNBQVMsQ0FBQzZDLHlCQUFWLENBQW9DLE1BQXBDLEVBQTJDLEdBQTNDO0FBQ0EzQyxVQUFBQSxFQUFFLENBQUNXLFFBQUgsQ0FBWXdCLFNBQVosQ0FBc0IsZ0JBQWVyQyxTQUFTLENBQUNzQyxnQkFBL0M7QUFDSDtBQUNILE9BbkJGLEVBbUJJLENBbkJKO0FBb0JKO0FBQ0gsR0ExRUk7QUE0RUo7QUFDQVMsRUFBQUEsTUE3RUksa0JBNkVHQyxFQTdFSCxFQTZFTztBQUNQLFNBQUtwQixVQUFMO0FBQ0g7QUEvRUcsQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuXHJcbi8vL+WIpOaWt+iFs+iJsmpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgV3JvbmdBbGVydDp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbCxcclxuICAgICAgICAgICAgdHlwZTpjYy5Ob2RlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBBbGVydFRleHQgOntcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLkxhYmVsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBcclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgZ2FtZU1vZGVsLkdhbWVOYW1lID0gIGNjLmRpcmVjdG9yLmdldFNjZW5lKCkuX25hbWUuc3Vic3RyKDEyLGNjLmRpcmVjdG9yLmdldFNjZW5lKCkuX25hbWUubGVuZ3RoKSAvL+WPluW+l+mBiuaIsuWQjeeosVxyXG4gICAgICAgIGdhbWVNb2RlbC5sb2NhbF9JRCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0ID09IChcImhpbGl2ZXMubmV0XCIgfHwgXCJ3d3cuaGlsaXZlcy5uZXRcIikgPyBcImFwaS5oaWxpdmVzLm5ldFwiIDogXCJhcGlkZXYuaGlsaXZlcy5uZXRcIlxyXG4gICAgICAgIGdhbWVNb2RlbC5Eb21haW4gPSBcImh0dHBzOi8vXCIgKyB3aW5kb3cubG9jYXRpb24uaG9zdDsgLy/lj5blvpfnm67liY3nmoTntrLln59cclxuICAgICAgICB0aGlzLkNoZWNrUm9sZSA9IGZhbHNlO1xyXG4gICAgICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9IFwib3BlblwiXHJcbiAgICAgICAgZ2FtZU1vZGVsLkdhbWVfSW5mb3JtYXRpb24oKTtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQoKSB7XHJcbiAgICAgICAgZ2FtZU1vZGVsLlJvbGVDb21maXJtKCk7XHJcbiAgICB9LFxyXG5cclxuICAgIEp1ZGdlRXJyb3IoKXtcclxuICAgICAgICBpZiAoZ2FtZU1vZGVsLkNoZWNrUm9sZSA9PSB0cnVlICYmIGdhbWVNb2RlbC5DYW5ub3RKb2luR2FtZSA9PSBcIlwiKSB0aGlzLkp1ZGdlUm9sZSgpO1xyXG4gICAgICAgIGVsc2UgaWYoZ2FtZU1vZGVsLkNoZWNrUm9sZSA9PSB0cnVlICYmIGdhbWVNb2RlbC5DYW5ub3RKb2luR2FtZSAhPSBcIlwiKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5BbGVydFRleHQuc3RyaW5nID0gZ2FtZU1vZGVsLkNhbm5vdEpvaW5HYW1lO1xyXG4gICAgICAgICAgICB0aGlzLldyb25nQWxlcnQuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLkNoZWNrUm9sZSA9IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICAvL+WIpOaWt+eUqOaItuinkuiJsuS4puWIh+aPm+iHs+WQhOiHquinkuiJsuWgtOaZr1xyXG4gICAgSnVkZ2VSb2xlKCl7XHJcbiAgICAgICBnYW1lTW9kZWwuQ2hlY2tSb2xlID0gZmFsc2VcclxuICAgICAgIGlmKGdhbWVNb2RlbC5yb2xlID09IFwiZ3Vlc3RcIiAmJiB0aGlzLkNoZWNrUm9sZSA9PSBmYWxzZSkgXHJcbiAgICAgICB7XHJcbiAgICAgICAgICB0aGlzLkNoZWNrUm9sZSA9IHRydWU7XHJcbiAgICAgICAgICBnYW1lTW9kZWwuV2ViU29ja2V0X051bWJlck9mUGVvcGxlX0d1ZXN0KDEwMDAsZmFsc2UpXHJcbiAgICAgICAgICBnYW1lTW9kZWwuV2ViU29ja2V0X0dhbWVTdGF0dXNfR3Vlc3QoKTtcclxuICAgICAgICAgIGlmKGdhbWVNb2RlbC5nYW1lX3R5cGUgPT0gXCJ0dXJudGFibGVcIikgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR3Vlc3QxX1dlZWxcIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgICAgICAgZWxzZSBpZiAoZ2FtZU1vZGVsLmdhbWVfdHlwZSA9PSBcImppdWdvbmdnZVwiKSBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJHdWVzdDFfSml1Z29uZ2dlXCIrIGdhbWVNb2RlbC5CYWNrR3JvdW5kX1RoZW1lKTtcclxuICAgICAgICAgIGVsc2UgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR3Vlc3QxX0pvaW5HYW1lXCIrIGdhbWVNb2RlbC5CYWNrR3JvdW5kX1RoZW1lKTtcclxuICAgICAgIH1cclxuICAgICAgIGVsc2UgaWYoZ2FtZU1vZGVsLnJvbGUgPT0gXCJob3N0XCIgJiYgdGhpcy5DaGVja1JvbGUgPT0gZmFsc2UpIFxyXG4gICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLkNoZWNrUm9sZSA9IHRydWU7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzV1NfSG9zdCA9IG5ldyBXZWJTb2NrZXQoXCJ3c3M6Ly9cIiArIGdhbWVNb2RlbC5sb2NhbF9JRCArIFwiL3dzL3YxL2dhbWUvc3RhdHVzL2hvc3Q/YWN0aXZpdHlfaWQ9XCIrIGdhbWVNb2RlbC5hY3Rpdml0eV9pZCArJyZnYW1lX2lkPScgKyBnYW1lTW9kZWwuZ2FtZV9pZCArICcmZ2FtZT0nKyBnYW1lTW9kZWwuR2FtZU5hbWUpOyAvL+mWi+WVn+mBiuaIsueLgOaFi3dzXHJcbiAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uKCkgeyAgIC8v5q+PMeenkumQmOWAvOihjOS4gOasoe+8jOmHjeikh+WBmjHmrKFcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5XZWJTb2NrZXRfTnVtYmVyT2ZQZW9wbGVfSG9zdCgpO1xyXG4gICAgICAgICAgICAgICAgaWYoZ2FtZU1vZGVsLmdhbWVfdHlwZSA9PSBcInR1cm50YWJsZVwiKSAgXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QoXCJjbG9zZVwiLDAuMSlcclxuICAgICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuTnVtYmVyT2ZMb3R0ZXJ5V1NfSG9zdCA9IG5ldyBXZWJTb2NrZXQoXCJ3c3M6Ly9cIiArIGdhbWVNb2RlbC5sb2NhbF9JRCArIFwiL3dzL3YxL2dhbWUvd2lubmluZy9zdGFmZj9hY3Rpdml0eV9pZD1cIisgZ2FtZU1vZGVsLmFjdGl2aXR5X2lkICsnJmdhbWVfaWQ9JyArIGdhbWVNb2RlbC5nYW1lX2lkICsgJyZnYW1lPScrIGdhbWVNb2RlbC5HYW1lTmFtZSk7IC8v6ZaL5ZWf5pu05paw5b6X542O5Lq655qEd3NcclxuICAgICAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJIb3N0MV9XZWVsXCIrIGdhbWVNb2RlbC5CYWNrR3JvdW5kX1RoZW1lKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGdhbWVNb2RlbC5nYW1lX3R5cGUgPT0gXCJqaXVnb25nZ2VcIikgXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QoXCJjbG9zZVwiLDAuMSlcclxuICAgICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuTnVtYmVyT2ZMb3R0ZXJ5V1NfSG9zdCA9IG5ldyBXZWJTb2NrZXQoXCJ3c3M6Ly9cIiArIGdhbWVNb2RlbC5sb2NhbF9JRCArIFwiL3dzL3YxL2dhbWUvd2lubmluZy9zdGFmZj9hY3Rpdml0eV9pZD1cIisgZ2FtZU1vZGVsLmFjdGl2aXR5X2lkICsnJmdhbWVfaWQ9JyArIGdhbWVNb2RlbC5nYW1lX2lkICsgJyZnYW1lPScrIGdhbWVNb2RlbC5HYW1lTmFtZSk7IC8v6ZaL5ZWf5pu05paw5b6X542O5Lq655qEd3NcclxuICAgICAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoXCJIb3N0MV9KaXVnb25nZ2VcIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuV2ViU29ja2V0X0dhbWVTdGF0dXNfSG9zdChcIm9wZW5cIiwwLjEpXHJcbiAgICAgICAgICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiSG9zdDFfU3RhcnRcIisgZ2FtZU1vZGVsLkJhY2tHcm91bmRfVGhlbWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgfSwgMSk7XHJcbiAgICAgICB9XHJcbiAgICB9LFxyXG4gICBcclxuICAgICAvL+aMgee6jOWIpOaWt+eUqOaItuinkuiJslxyXG4gICAgIHVwZGF0ZShkdCkge1xyXG4gICAgICAgICB0aGlzLkp1ZGdlRXJyb3IoKTtcclxuICAgICB9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Model.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e7bd7G7ruVO1L6VM6c+ndqb', 'Model');
// 共用模塊/Model.js

"use strict";

///共用模塊js
var TopTitle = null;
var Prize_BackGround = null;
var WhitchPrize_index = 0;
var XMLTimeLimit = false;
var gametimelimit = 5;
var gametimeCountDown = 0;
var round = 1;
var Domain = null;
var GameStatusMessage = "close";
var result = "thanks";
var prize_total = 0;
var role = null;
var winner_name = [];
var winner_id = [];
var winner_picture = [];
var winner_score = [];
var winner_TakeTime = 0;
var WinnerData = null;
var AlreadyPlayed = 0;
var people = 0;
var activity_id = null;
var game_id = null;
var liffstate = null;
var User_id = null;
var User_Name = null;
var User_Picture = null;
var prize_ID = [];
var Win_Time = [];
var prize_name_guest = [];
var prize_name_host = [];
var prize_method = [];
var getprize_round = [];
var password = [];
var prize_picture = [];
var prize_type = "";
var exchangePrize = [];
var GameStatusWS_Host = null;
var NumberOfLotteryWS_Host = null;
var NumberOfPeople_Guest = null;
var Session = null;
var CannotJoinGame = "";
var AllowRePrize = "";
var CheckRole = false;
var connet_ws = false;
var Guest1_Join_JS = "";
var GameName = "";
var SpawnNewestWinner = false;
var session_id = "";
var CurrentRound = 0;
var HostWindow = "open";
var Score = 0;
var Skin = "";
var Local_ID = "";
var BackGround_Theme = "";
var AnswerResult = [];
var Question = [];
var QuestionCount = 0;
var Options = [];
var QuestionPicture = [];
var Answer = 0;
var Rank = 0;
var mode = "";
var chance = 0;
var Prizestack_id = [];
var Prizestack_name = [];
var Prizestack_picture = [];
var Game_js = "";
var game_type = "";
var PrizeStaffs = ""; //要在自己的腳本導出變量才能讓別人繼承  

module.exports = {
  TopTitle: TopTitle,
  //遊戲的上方框
  Prize_BackGround: Prize_BackGround,
  //玩家查看獎品場景的背景
  WhitchPrize_index: WhitchPrize_index,
  //兌換畫面當前選的獎品編號
  XMLTimeLimit: XMLTimeLimit,
  //遊戲是否限時
  gametimelimit: gametimelimit,
  //遊戲限制的時間
  gametimeCountDown: gametimeCountDown,
  //遊戲倒數計時
  round: round,
  //輪次
  Domain: Domain,
  //當前網域
  GameStatusMessage: GameStatusMessage,
  //遊戲狀態 : open、start、end
  result: result,
  //中獎結果 thanks代表沒中獎，其他代表中獎
  prize_total: prize_total,
  //獎品數量
  role: role,
  //用戶角色(主持人OR玩家)
  Game_Information: Game_Information,
  //取得遊戲設置資訊XML
  RoleComfirm: RoleComfirm,
  //接收角色判斷和輪次XML
  Lottery_Guest: Lottery_Guest,
  //玩家中獎判斷XML
  winner_name: winner_name,
  //主持人紀錄得獎玩家名子
  winner_picture: winner_picture,
  //主持人紀錄得獎玩家頭像
  winner_id: winner_id,
  //主持人紀錄得獎玩家辨識碼
  winner_score: winner_score,
  //主持人紀錄得獎玩家分數
  WinnerData: WinnerData,
  //主持人 Host3_ShowNewWinner js腳本
  WebSocket_NumberOfPeople_Guest: WebSocket_NumberOfPeople_Guest,
  //新增人員(玩家用)
  WebSocket_NumberOfPeople_Host: WebSocket_NumberOfPeople_Host,
  //新增人員(主持人用)
  WebSocket_GameStatus_Guest: WebSocket_GameStatus_Guest,
  //遊戲狀態的訊息傳送(玩家用)
  WebSocket_GameStatus_Host: WebSocket_GameStatus_Host,
  //遊戲狀態的訊息傳送(主持人用)
  WebSocket_UpDateScore_Guest: WebSocket_UpDateScore_Guest,
  //玩家每秒將分數傳給後端(玩家用)
  WebSocket_NumberOfLottery_Host: WebSocket_NumberOfLottery_Host,
  //主持人收到搖紅包到一定次數的玩家訊息(主持人用)
  WebSocket_NumberOfLottery_Score_Host: WebSocket_NumberOfLottery_Score_Host,
  //主持人收到玩家分數(主持人用)
  AlreadyPlayed: AlreadyPlayed,
  //該輪是否玩過
  people: people,
  //人數
  activity_id: activity_id,
  //活動辨識碼
  game_id: game_id,
  //遊戲辨識碼
  liffstate: liffstate,
  User_id: User_id,
  //用戶辨識碼(回傳後端用)
  User_Name: User_Name,
  //用戶名稱(回傳後端用)
  User_Picture: User_Picture,
  //用戶頭像(回傳後端用)
  prize_ID: prize_ID,
  //獎品辨識碼
  Win_Time: Win_Time,
  //得獎時間
  prize_name_guest: prize_name_guest,
  //獎品名稱(玩家兌獎畫面顯示)
  prize_name_host: prize_name_host,
  //獎品名稱(主持人結算場景顯示)
  prize_method: prize_method,
  //獎品兌換方式
  password: password,
  //獎品密碼
  prize_picture: prize_picture,
  //獎品圖片
  getprize_round: getprize_round,
  //取得得獎的輪次
  exchangePrize: exchangePrize,
  //獎品是否兌換過
  GameStatusWS_Host: GameStatusWS_Host,
  //開啟主持人遊戲狀態的ws
  NumberOfLotteryWS_Host: NumberOfLotteryWS_Host,
  //開啟主持人接收中獎人的ws 
  NumberOfPeople_Guest: NumberOfPeople_Guest,
  //開啟玩家加入遊戲執行的ws
  Session: Session,
  //場次
  CannotJoinGame: CannotJoinGame,
  //不能參加遊戲的錯誤訊息
  AllowRePrize: AllowRePrize,
  //可以重複中獎
  CheckRole: CheckRole,
  //是否檢查完角色
  connet_ws: connet_ws,
  //是否有連接到websocket
  Guest1_Join_JS: Guest1_Join_JS,
  //玩家 Guest1_Join js腳本
  GameName: GameName,
  //遊戲名稱
  SpawnNewestWinner: SpawnNewestWinner,
  //是否有顯示最新兩位得獎人
  session_id: session_id,
  //用戶cookie值
  CurrentRound: CurrentRound,
  //當前輪次(用於主持人結算頁面使用，因為開始遊戲會清空人數，輪次 + 1)
  HostWindow: HostWindow,
  //主持人在遊戲中是否關閉視窗
  Score: Score,
  //玩家分數
  Skin: Skin,
  //用戶選擇的角色皮膚
  Local_ID: Local_ID,
  BackGround_Theme: BackGround_Theme,
  //用戶選擇的主題背景
  ///--------------------------------------------------------------問答遊戲參數
  //=====主持人=====
  AnswerResult: AnswerResult,
  // 問答遊戲 每個選項的人數
  Question: Question,
  //問答遊戲 存放問題陣列
  QuestionCount: QuestionCount,
  //問答遊戲 計數目前是哪個問題
  Options: Options,
  //問答遊戲 問題選項文字陣列
  QuestionPicture: QuestionPicture,
  //問答遊戲 主持人遊戲時用得問題圖片陣列
  Answer: Answer,
  //問答遊戲 本輪問題的答案
  //=====玩家=====
  Rank: Rank,
  //問答問題 玩家排名
  winner_TakeTime: winner_TakeTime,
  //問答遊戲 玩家耗時
  ///--------------------------------------------------------------幸運輪盤參數
  mode: mode,
  //目前模式
  chance: chance,
  //目前抽獎次數
  Prize_Infromation: Prize_Infromation,
  prize_type: prize_type,
  Prizestack_id: Prizestack_id,
  Prizestack_name: Prizestack_name,
  Prizestack_picture: Prizestack_picture,
  Game_js: Game_js,
  game_type: game_type,
  PrizeStaffs: PrizeStaffs
}; //取得遊戲設置資訊

function Game_Information() {
  var url = 'https://' + gameModel.local_ID + '/v1/interact/game/' + gameModel.GameName + '?game_id=' + gameModel.game_id;
  var redpack = new XMLHttpRequest();
  redpack.open("GET", url, true);

  redpack.onreadystatechange = function () {
    if (redpack.readyState == 4 && redpack.status >= 200 && redpack.status <= 207) {
      //是否連接成功
      var text = redpack.responseText;
      var XMLobject = JSON.parse(redpack.responseText);
      gameModel.Session = XMLobject.data.title;
      gameModel.AllowRePrize = XMLobject.data.allow;
      gameModel.game_type = XMLobject.data.game_type; //是否有限制遊戲時間

      if (XMLobject.data.limit_time == "open") {
        gameModel.XMLTimeLimit = true;
        gameModel.gametimelimit = XMLobject.data.second;
      } else gameModel.XMLTimeLimit = false;
    }
  };

  redpack.send();
} //接收角色判斷和輪次XML


function RoleComfirm() {
  var url = 'https://' + gameModel.local_ID + '/v1/user?activity_id=' + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName + '&session_id=' + gameModel.session_id;
  var Role = new XMLHttpRequest();
  Role.open("GET", url, true); //GET取得、POST傳送、PUT更改

  Role.onreadystatechange = function () {
    if (Role.readyState == 4 && Role.status >= 200 && Role.status <= 207) {
      //是否連接成功
      var XMLobject = JSON.parse(Role.responseText); //開始接收訊息

      gameModel.role = XMLobject.data.User.role;
      gameModel.User_id = XMLobject.data.User.user_id;
      gameModel.User_Name = XMLobject.data.User.name;
      gameModel.User_Picture = XMLobject.data.User.avatar;
      gameModel.round = XMLobject.data.Game.round;
      gameModel.prize_total = XMLobject.data.Game.amount;
      gameModel.chance = XMLobject.data.Times;
      gameModel.PrizeStaffs = XMLobject.data.PrizeStaffs;

      for (var i = 0; i < XMLobject.data.PrizeStaffs.length; i++) //取得獎品資訊
      {
        gameModel.prize_ID[i] = XMLobject.data.PrizeStaffs[i].id; //獎品編號

        gameModel.prize_name_guest[i] = XMLobject.data.PrizeStaffs[i].prize_name; //獎品名稱

        gameModel.prize_method[i] = XMLobject.data.PrizeStaffs[i].method; //獎品兌換方式

        gameModel.password[i] = XMLobject.data.PrizeStaffs[i].password; //兌獎密碼

        gameModel.Win_Time[i] = XMLobject.data.PrizeStaffs[i].win_time; //抽到獎品的時間

        gameModel.getprize_round[i] = XMLobject.data.PrizeStaffs[i].round; //抽到獎品的輪次

        gameModel.prize_picture[i] = XMLobject.data.PrizeStaffs[i].picture; //獎品照片

        gameModel.exchangePrize[i] = XMLobject.data.PrizeStaffs[i].status; //是否兌換
      }

      gameModel.CheckRole = true;
    } else if (Role.readyState == 4 && Role.status >= 400) {
      var XMLobject = JSON.parse(Role.responseText);
      gameModel.CheckRole = true;
      gameModel.CannotJoinGame = XMLobject.message;
    }
  };

  Role.send();
} //查詢所有獎品XML


function Prize_Infromation() {
  var url = 'https://' + gameModel.local_ID + '/v1/interact/game/' + gameModel.GameName + '/prize?game_id=' + gameModel.game_id;
  var Prize = new XMLHttpRequest();
  Prize.open("GET", url, true); //GET取得、POST傳送、PUT更改

  Prize.onreadystatechange = function () {
    if (Prize.readyState == 4 && Prize.status >= 200 && Prize.status <= 207) {
      //是否連接成功
      var XMLobject = JSON.parse(Prize.responseText); //開始接收訊息

      for (var i = 0; i < XMLobject.data.length; i++) {
        gameModel.Prizestack_id[i] = XMLobject.data[i].prize_id; //獎品編號

        gameModel.Prizestack_name[i] = XMLobject.data[i].name; //獎品名稱

        gameModel.Prizestack_picture[i] = XMLobject.data[i].picture; //獎品照片
      }

      gameModel.Game_js.SpawnPrize();
    } else if (Prize.readyState == 4 && Prize.status >= 400) {
      var XMLobject = JSON.parse(Prize.responseText);
      gameModel.CannotJoinGame = XMLobject.message;
    }
  };

  Prize.send();
} //玩家中獎判斷XML


function Lottery_Guest() {
  var url = 'https://' + gameModel.local_ID + '/v1/game/lucky?activity_id=' + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName + '&session_id=' + gameModel.session_id + '&mode=' + gameModel.mode;
  var Lottery = new XMLHttpRequest();
  Lottery.open("GET", url, true); //GET取得、POST傳送、PUT更改

  Lottery.onreadystatechange = function () {
    if (Lottery.readyState == 4 && Lottery.status >= 200 && Lottery.status <= 207) {
      //是否連接成功
      var XMLobject = JSON.parse(Lottery.responseText); //開始接收訊息

      gameModel.result = XMLobject.data.PrizeStaff.method; //抽獎結果 不等於thanks代表中獎，thanks帶表未中獎

      if (gameModel.GameName == "lottery") {
        gameModel.prize_ID = XMLobject.data.PrizeStaff.prize_id; //獎品編號

        gameModel.prize_name_guest = XMLobject.data.PrizeStaff.prize_name; //獎品名稱

        gameModel.prize_picture = XMLobject.data.PrizeStaff.picture; //獎品照片

        gameModel.prize_type = XMLobject.data.PrizeStaff.prize_type;
        gameModel.PrizeStaffs = XMLobject.data.PrizeStaffs;
        gameModel.Game_js.lettorey();
      } else {
        for (var i = 0; i < XMLobject.data.PrizeStaffs.length; i++) {
          gameModel.prize_ID[i] = XMLobject.data.PrizeStaffs[i].id; //獎品編號

          gameModel.prize_name_guest[i] = XMLobject.data.PrizeStaffs[i].prize_name; //獎品名稱

          gameModel.prize_method[i] = XMLobject.data.PrizeStaffs[i].method; //獎品兌換方式

          gameModel.password[i] = XMLobject.data.PrizeStaffs[i].password; //兌獎密碼

          gameModel.Win_Time[i] = XMLobject.data.PrizeStaffs[i].win_time; //抽到獎品的時間

          gameModel.getprize_round[i] = XMLobject.data.PrizeStaffs[i].round; //抽到獎品的輪次

          gameModel.prize_picture[i] = XMLobject.data.PrizeStaffs[i].picture; //獎品照片

          gameModel.exchangePrize[i] = XMLobject.data.PrizeStaffs[i].status; //是否兌換
        }
      }
    } else if (Lottery.readyState == 4 && Lottery.status >= 400) {
      var XMLobject = JSON.parse(Lottery.responseText);
      gameModel.CannotJoinGame = XMLobject.message;
      if (gameModel.GameName == "lottery") gameModel.Game_js.lettorey();
    }
  };

  Lottery.send();
} //將玩家人數新增到Websocket、接收玩家中獎紀錄


function WebSocket_NumberOfPeople_Guest(time, sendmessage) {
  if (sendmessage == false) {
    gameModel.NumberOfPeople_Guest = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/staff?activity_id=" + gameModel.activity_id + "&game_id=" + gameModel.game_id + "&game=" + gameModel.GameName); //連線開啟時觸發 

    gameModel.NumberOfPeople_Guest.onopen = function (event) {}; //連線錯誤時


    gameModel.NumberOfPeople_Guest.onerror = function (event) {}; //連線關閉時觸發  


    gameModel.NumberOfPeople_Guest.onclose = function (event) {
      if (gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲") {
        gameModel.WebSocket_NumberOfPeople_Guest(1000, false);
      }
    };
  } else {
    //等待1秒，等通道打開再執行推送資料給Websocket
    setTimeout(function () {
      if (gameModel.NumberOfPeople_Guest.readyState === WebSocket.OPEN) {
        gameModel.NumberOfPeople_Guest.send(JSON.stringify({
          User: {
            user_id: gameModel.User_id,
            name: gameModel.User_Name,
            avatar: gameModel.User_Picture
          },
          Game: {
            round: gameModel.GameStatusMessage == "start" || gameModel.GameStatusMessage == "gaming" ? gameModel.round - 1 : gameModel.round
          }
        }));
      } else {
        if (gameModel.CannotJoinGame != "錯誤: 該場次遊戲不允許重複中獎，您已中獎，無法參加下一輪遊戲") gameModel.Guest1_Join_JS.ConnetFail();else gameModel.Guest1_Join_JS.ConnetSuccess();
      }
    }, time);
  } //接收到訊息時觸發  


  gameModel.NumberOfPeople_Guest.onmessage = function (event) {
    var gameModel = require("Model");

    var object = JSON.parse(event.data); //將後端資料放入object

    gameModel.CannotJoinGame = object.error;
    gameModel.AlreadyPlayed = object.PrizeStaff.id; //是否有搖過 0代表還沒玩過 不等於0代表玩過了

    for (var i = 0; i < object.PrizeStaffs.length; i++) {
      gameModel.prize_ID[i] = object.PrizeStaffs[i].id; //獎品編號

      gameModel.prize_name_guest[i] = object.PrizeStaffs[i].prize_name; //獎品名稱

      gameModel.prize_method[i] = object.PrizeStaffs[i].method; //獎品兌換方式

      gameModel.password[i] = object.PrizeStaffs[i].password; //兌獎密碼

      gameModel.Win_Time[i] = object.PrizeStaffs[i].win_time; //抽到獎品的時間

      gameModel.getprize_round[i] = object.PrizeStaffs[i].round; //抽到獎品的輪次

      gameModel.prize_picture[i] = object.PrizeStaffs[i].picture; //獎品照片

      gameModel.exchangePrize[i] = object.PrizeStaffs[i].status; //是否兌換
    }

    gameModel.Guest1_Join_JS.ConnetSuccess();
  };
} //主持人從Websocket取得現在人數


function WebSocket_NumberOfPeople_Host() {
  //取得Websocket通訊網址
  var ws = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/people?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //連線開啟時觸發 

  ws.onopen = function (event) {}; //接收到訊息時觸發  


  ws.onmessage = function (event) {
    var gameModel = require("Model");

    var object = JSON.parse(event.data); //將後端資料放入object

    gameModel.people = object.Game.people;
    gameModel.round = object.Game.round;
  }; //連線錯誤時


  ws.onerror = function (event) {}; //連線關閉時觸發  


  ws.onclose = function (event) {
    gameModel.WebSocket_NumberOfPeople_Host();
  };
} //玩家從Websocket取得開始、再來一輪、關閉的訊息 (start、again、close)


function WebSocket_GameStatus_Guest() {
  //取得Websocket通訊網址
  var ws = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/status/guest?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //連線開啟時觸發 

  ws.onopen = function (event) {}; //接收到訊息時觸發  


  ws.onmessage = function (event) {
    var gameModel = require("Model");

    var object = JSON.parse(event.data);
    gameModel.GameStatusMessage = object.Game.status;
    gameModel.round = object.Game.round;
    gameModel.gametimeCountDown = object.Game.second;
  }; //連線錯誤時


  ws.onerror = function (event) {}; //連線關閉時觸發  


  ws.onclose = function (event) {
    gameModel.WebSocket_GameStatus_Guest();
  };
} //主持人將開始、再一輪、關閉的訊息傳到Websocket (start、again、close)


function WebSocket_GameStatus_Host(status, time) {
  //連線開啟時觸發 
  gameModel.GameStatusWS_Host.onopen = function (event) {}; //接收到訊息時觸發  


  gameModel.GameStatusWS_Host.onmessage = function (event) {
    var gameModel = require("Model");

    var object = JSON.parse(event.data);
    gameModel.GameStatusMessage = object.Game.status;
    gameModel.connet_ws = true;
  }; //連線錯誤時


  gameModel.GameStatusWS_Host.onerror = function (event) {}; //連線關閉時觸發  


  gameModel.GameStatusWS_Host.onclose = function (event) {
    gameModel.connet_ws = false;
    gameModel.GameStatusWS_Host = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/status/host?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //開啟遊戲狀態ws;

    gameModel.WebSocket_GameStatus_Host(status, 1000);
  }; //等待1秒，等通道打開再執行推送資料給Websocket


  setTimeout(function () {
    if (gameModel.GameStatusWS_Host.readyState === WebSocket.OPEN) {
      if (status == "gaming" && gameModel.XMLTimeLimit == true) {
        gameModel.GameStatusWS_Host.send(JSON.stringify({
          Game: {
            status: status,
            round: gameModel.round,
            second: gameModel.gametimeCountDown
          }
        }));
      } else {
        gameModel.GameStatusWS_Host.send(JSON.stringify({
          Game: {
            status: status,
            round: status == "end" ? gameModel.round - 1 : gameModel.round
          }
        }));
      }
    } else {
      gameModel.connet_ws = false;
    }
  }, time);
} //玩家端每秒傳送分數給後端


function WebSocket_UpDateScore_Guest() {
  var ws = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/score?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //連線開啟時觸發 

  ws.onopen = function (event) {}; //接收到訊息時觸發  


  ws.onmessage = function (event) {
    var gameModel = require("Model");

    var object = JSON.parse(event.data);
  }; //連線錯誤時


  ws.onerror = function (event) {}; //連線關閉時觸發  


  ws.onclose = function (event) {
    if (gameModel.GameStatusMessage == "gaming") gameModel.WebSocket_UpDateScore_Guest();else clearInterval(Interval);
  };

  var Interval = setInterval(function () {
    if (ws.readyState === WebSocket.OPEN) {
      ws.send(JSON.stringify({
        Game: {
          status: gameModel.GameStatusMessage,
          round: gameModel.round - 1,
          score: gameModel.Score
        },
        User: {
          user_id: gameModel.User_id
        }
      }));
    }
  }, 500);
} //主持人從Websocket取得玩家中獎資料


function WebSocket_NumberOfLottery_Host() {
  //連線開啟時觸發 zx
  gameModel.NumberOfLotteryWS_Host.onopen = function (event) {}; //接收到訊息時觸發  


  gameModel.NumberOfLotteryWS_Host.onmessage = function (event) {
    var gameModel = require("Model");

    var object = JSON.parse(event.data);
    gameModel.prize_total = object.Game.amount; //獎品總數量

    for (var i = 0; i < object.PrizeStaffs.length; i++) {
      if (gameModel.winner_id.includes(object.PrizeStaffs[i].id) == false) {
        gameModel.winner_id[i] = object.PrizeStaffs[i].id; //得獎者id

        gameModel.winner_name[i] = object.PrizeStaffs[i].name; //得獎人名稱

        gameModel.winner_picture[i] = object.PrizeStaffs[i].avatar; //得獎人照片

        gameModel.prize_name_host[i] = object.PrizeStaffs[i].prize_name; //獎品名稱

        gameModel.WinnerData.SpawnNewWinner();
      }
    }

    if (gameModel.GameStatusMessage != "end" && gameModel.winner_name.length > 0 && gameModel.SpawnNewestWinner == true) gameModel.WinnerData.NewestWinner();else if (gameModel.GameStatusMessage == "end") gameModel.NumberOfLotteryWS_Host.close();
  }; //連線錯誤時


  gameModel.NumberOfLotteryWS_Host.onerror = function (event) {}; //連線關閉時觸發  


  gameModel.NumberOfLotteryWS_Host.onclose = function (event) {
    if (gameModel.GameStatusMessage == "start") {
      gameModel.NumberOfLotteryWS_Host = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/winning/staff?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //開啟更新得獎人的ws

      gameModel.WebSocket_NumberOfLottery_Host();
    }
  };
} //主持人從Websocket取得玩家中獎資料


function WebSocket_NumberOfLottery_Score_Host() {
  //連線開啟時觸發 
  gameModel.NumberOfLotteryWS_Host.onopen = function (event) {}; //接收到訊息時觸發  


  gameModel.NumberOfLotteryWS_Host.onmessage = function (event) {
    var gameModel = require("Model");

    var object = JSON.parse(event.data);
    gameModel.prize_total = object.Game.amount; //獎品總數量

    gameModel.WinnerData.ClearRank();

    for (var i = 0; i < object.PrizeStaffs.length; i++) {
      gameModel.winner_id[i] = object.PrizeStaffs[i].id; //得獎者id

      gameModel.winner_name[i] = object.PrizeStaffs[i].name; //得獎人名稱

      gameModel.winner_picture[i] = object.PrizeStaffs[i].avatar; //得獎人照片

      gameModel.prize_name_host[i] = object.PrizeStaffs[i].prize_name; //獎品名稱

      gameModel.winner_score[i] = object.PrizeStaffs[i].score; //得獎人分數

      gameModel.WinnerData.SpawnNewWinner();
    }

    if (gameModel.GameStatusMessage == "calculate") {
      gameModel.WinnerData.NextSence();
      gameModel.NumberOfLotteryWS_Host.close();
    }
  }; //連線錯誤時


  gameModel.NumberOfLotteryWS_Host.onerror = function (event) {}; //連線關閉時觸發  


  gameModel.NumberOfLotteryWS_Host.onclose = function (event) {
    if (gameModel.GameStatusMessage == "gaming") {
      gameModel.NumberOfLotteryWS_Host = new WebSocket("wss://" + gameModel.local_ID + "/ws/v1/game/winning/staff?activity_id=" + gameModel.activity_id + '&game_id=' + gameModel.game_id + '&game=' + gameModel.GameName); //開啟更新得獎人的ws

      gameModel.WinnerData.WebSocket_NumberOfLottery_Host();
    }
  };
} //取得動態參數


function getQueryVariable(variable) {
  var query = window.location.search.substring(1);
  var vars = query.split("&");

  for (var i = 0; i < vars.length; i++) {
    var pair = vars[i].split("=");
    if (pair[0] == variable) return pair[1];
  }

  return "";
} //處理leLiffState取得activity_id和game_id


function HandleLiffState() {
  if (gameModel.activity_id == "" || gameModel.game_id == "") {
    if (gameModel.liffstate.length > 13) gameModel.liffstate = gameModel.liffstate.substr(17, gameModel.liffstate.length);
  }

  if (gameModel.liffstate.includes("%26game_id%3D")) //%3f是?  %26是&  %3d是=
    {
      var params = gameModel.liffstate.split("%26game_id%3D");
      gameModel.activity_id = params[0];

      if (params.length == 2) {
        params = params[1].split("#mst_challenge");
        gameModel.game_id = params[0];
      }
    }
} //取得Cookie資料


function readCookie(name) {
  var nameEQ = name + "=";
  var ca = document.cookie.split(';'); //取得cookie並用;區分開來儲存在ca

  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];

    while (c.charAt(0) == ' ') {
      c = c.substring(1, c.length);
    }

    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
  }

  return null;
}

var gameModel = require("Model");

gameModel.activity_id = getQueryVariable("activity_id");
gameModel.game_id = getQueryVariable("game_id");
gameModel.liffstate = getQueryVariable("liff.state");
gameModel.session_id = readCookie('chatroom_session');
HandleLiffState();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxNb2RlbC5qcyJdLCJuYW1lcyI6WyJUb3BUaXRsZSIsIlByaXplX0JhY2tHcm91bmQiLCJXaGl0Y2hQcml6ZV9pbmRleCIsIlhNTFRpbWVMaW1pdCIsImdhbWV0aW1lbGltaXQiLCJnYW1ldGltZUNvdW50RG93biIsInJvdW5kIiwiRG9tYWluIiwiR2FtZVN0YXR1c01lc3NhZ2UiLCJyZXN1bHQiLCJwcml6ZV90b3RhbCIsInJvbGUiLCJ3aW5uZXJfbmFtZSIsIndpbm5lcl9pZCIsIndpbm5lcl9waWN0dXJlIiwid2lubmVyX3Njb3JlIiwid2lubmVyX1Rha2VUaW1lIiwiV2lubmVyRGF0YSIsIkFscmVhZHlQbGF5ZWQiLCJwZW9wbGUiLCJhY3Rpdml0eV9pZCIsImdhbWVfaWQiLCJsaWZmc3RhdGUiLCJVc2VyX2lkIiwiVXNlcl9OYW1lIiwiVXNlcl9QaWN0dXJlIiwicHJpemVfSUQiLCJXaW5fVGltZSIsInByaXplX25hbWVfZ3Vlc3QiLCJwcml6ZV9uYW1lX2hvc3QiLCJwcml6ZV9tZXRob2QiLCJnZXRwcml6ZV9yb3VuZCIsInBhc3N3b3JkIiwicHJpemVfcGljdHVyZSIsInByaXplX3R5cGUiLCJleGNoYW5nZVByaXplIiwiR2FtZVN0YXR1c1dTX0hvc3QiLCJOdW1iZXJPZkxvdHRlcnlXU19Ib3N0IiwiTnVtYmVyT2ZQZW9wbGVfR3Vlc3QiLCJTZXNzaW9uIiwiQ2Fubm90Sm9pbkdhbWUiLCJBbGxvd1JlUHJpemUiLCJDaGVja1JvbGUiLCJjb25uZXRfd3MiLCJHdWVzdDFfSm9pbl9KUyIsIkdhbWVOYW1lIiwiU3Bhd25OZXdlc3RXaW5uZXIiLCJzZXNzaW9uX2lkIiwiQ3VycmVudFJvdW5kIiwiSG9zdFdpbmRvdyIsIlNjb3JlIiwiU2tpbiIsIkxvY2FsX0lEIiwiQmFja0dyb3VuZF9UaGVtZSIsIkFuc3dlclJlc3VsdCIsIlF1ZXN0aW9uIiwiUXVlc3Rpb25Db3VudCIsIk9wdGlvbnMiLCJRdWVzdGlvblBpY3R1cmUiLCJBbnN3ZXIiLCJSYW5rIiwibW9kZSIsImNoYW5jZSIsIlByaXplc3RhY2tfaWQiLCJQcml6ZXN0YWNrX25hbWUiLCJQcml6ZXN0YWNrX3BpY3R1cmUiLCJHYW1lX2pzIiwiZ2FtZV90eXBlIiwiUHJpemVTdGFmZnMiLCJtb2R1bGUiLCJleHBvcnRzIiwiR2FtZV9JbmZvcm1hdGlvbiIsIlJvbGVDb21maXJtIiwiTG90dGVyeV9HdWVzdCIsIldlYlNvY2tldF9OdW1iZXJPZlBlb3BsZV9HdWVzdCIsIldlYlNvY2tldF9OdW1iZXJPZlBlb3BsZV9Ib3N0IiwiV2ViU29ja2V0X0dhbWVTdGF0dXNfR3Vlc3QiLCJXZWJTb2NrZXRfR2FtZVN0YXR1c19Ib3N0IiwiV2ViU29ja2V0X1VwRGF0ZVNjb3JlX0d1ZXN0IiwiV2ViU29ja2V0X051bWJlck9mTG90dGVyeV9Ib3N0IiwiV2ViU29ja2V0X051bWJlck9mTG90dGVyeV9TY29yZV9Ib3N0IiwiUHJpemVfSW5mcm9tYXRpb24iLCJ1cmwiLCJnYW1lTW9kZWwiLCJsb2NhbF9JRCIsInJlZHBhY2siLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwidGV4dCIsInJlc3BvbnNlVGV4dCIsIlhNTG9iamVjdCIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJ0aXRsZSIsImFsbG93IiwibGltaXRfdGltZSIsInNlY29uZCIsInNlbmQiLCJSb2xlIiwiVXNlciIsInVzZXJfaWQiLCJuYW1lIiwiYXZhdGFyIiwiR2FtZSIsImFtb3VudCIsIlRpbWVzIiwiaSIsImxlbmd0aCIsImlkIiwicHJpemVfbmFtZSIsIm1ldGhvZCIsIndpbl90aW1lIiwicGljdHVyZSIsIm1lc3NhZ2UiLCJQcml6ZSIsInByaXplX2lkIiwiU3Bhd25Qcml6ZSIsIkxvdHRlcnkiLCJQcml6ZVN0YWZmIiwibGV0dG9yZXkiLCJ0aW1lIiwic2VuZG1lc3NhZ2UiLCJXZWJTb2NrZXQiLCJvbm9wZW4iLCJldmVudCIsIm9uZXJyb3IiLCJvbmNsb3NlIiwic2V0VGltZW91dCIsIk9QRU4iLCJzdHJpbmdpZnkiLCJDb25uZXRGYWlsIiwiQ29ubmV0U3VjY2VzcyIsIm9ubWVzc2FnZSIsInJlcXVpcmUiLCJvYmplY3QiLCJlcnJvciIsIndzIiwiY2xlYXJJbnRlcnZhbCIsIkludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJzY29yZSIsImluY2x1ZGVzIiwiU3Bhd25OZXdXaW5uZXIiLCJOZXdlc3RXaW5uZXIiLCJjbG9zZSIsIkNsZWFyUmFuayIsIk5leHRTZW5jZSIsImdldFF1ZXJ5VmFyaWFibGUiLCJ2YXJpYWJsZSIsInF1ZXJ5Iiwid2luZG93IiwibG9jYXRpb24iLCJzZWFyY2giLCJzdWJzdHJpbmciLCJ2YXJzIiwic3BsaXQiLCJwYWlyIiwiSGFuZGxlTGlmZlN0YXRlIiwic3Vic3RyIiwicGFyYW1zIiwicmVhZENvb2tpZSIsIm5hbWVFUSIsImNhIiwiZG9jdW1lbnQiLCJjb29raWUiLCJjIiwiY2hhckF0IiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBLElBQUlBLFFBQVEsR0FBRyxJQUFmO0FBQ0EsSUFBSUMsZ0JBQWdCLEdBQUcsSUFBdkI7QUFDQSxJQUFJQyxpQkFBaUIsR0FBRyxDQUF4QjtBQUNBLElBQUlDLFlBQVksR0FBRyxLQUFuQjtBQUNBLElBQUlDLGFBQWEsR0FBRyxDQUFwQjtBQUNBLElBQUlDLGlCQUFpQixHQUFHLENBQXhCO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLENBQVo7QUFDQSxJQUFJQyxNQUFNLEdBQUcsSUFBYjtBQUNBLElBQUlDLGlCQUFpQixHQUFHLE9BQXhCO0FBQ0EsSUFBSUMsTUFBTSxHQUFHLFFBQWI7QUFDQSxJQUFJQyxXQUFXLEdBQUcsQ0FBbEI7QUFDQSxJQUFJQyxJQUFJLEdBQUcsSUFBWDtBQUNBLElBQUlDLFdBQVcsR0FBRyxFQUFsQjtBQUNBLElBQUlDLFNBQVMsR0FBRyxFQUFoQjtBQUNBLElBQUlDLGNBQWMsR0FBRyxFQUFyQjtB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Q0FBQyxHQUFHd0QsRUFBRSxDQUFDdkQsTUFBckIsRUFBNEJELENBQUMsRUFBN0IsRUFBaUM7QUFDN0IsUUFBSTJELENBQUMsR0FBR0gsRUFBRSxDQUFDeEQsQ0FBRCxDQUFWOztBQUNBLFdBQU8yRCxDQUFDLENBQUNDLE1BQUYsQ0FBUyxDQUFULEtBQWMsR0FBckI7QUFBMEJELE1BQUFBLENBQUMsR0FBR0EsQ0FBQyxDQUFDWixTQUFGLENBQVksQ0FBWixFQUFjWSxDQUFDLENBQUMxRCxNQUFoQixDQUFKO0FBQTFCOztBQUNBLFFBQUkwRCxDQUFDLENBQUNFLE9BQUYsQ0FBVU4sTUFBVixLQUFxQixDQUF6QixFQUE0QixPQUFPSSxDQUFDLENBQUNaLFNBQUYsQ0FBWVEsTUFBTSxDQUFDdEQsTUFBbkIsRUFBMEIwRCxDQUFDLENBQUMxRCxNQUE1QixDQUFQO0FBQy9COztBQUNELFNBQU8sSUFBUDtBQUNIOztBQUVELElBQUk1QixTQUFTLEdBQUdzRCxPQUFPLENBQUMsT0FBRCxDQUF2Qjs7QUFDQXRELFNBQVMsQ0FBQy9ELFdBQVYsR0FBeUJtSSxnQkFBZ0IsQ0FBQyxhQUFELENBQXpDO0FBQ0FwRSxTQUFTLENBQUM5RCxPQUFWLEdBQXFCa0ksZ0JBQWdCLENBQUMsU0FBRCxDQUFyQztBQUNBcEUsU0FBUyxDQUFDN0QsU0FBVixHQUFzQmlJLGdCQUFnQixDQUFDLFlBQUQsQ0FBdEM7QUFDQXBFLFNBQVMsQ0FBQ3BDLFVBQVYsR0FBdUJxSCxVQUFVLENBQUMsa0JBQUQsQ0FBakM7QUFDQUgsZUFBZSIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8v5YWx55So5qih5aGKanNcclxudmFyIFRvcFRpdGxlID0gbnVsbFxyXG52YXIgUHJpemVfQmFja0dyb3VuZCA9IG51bGxcclxudmFyIFdoaXRjaFByaXplX2luZGV4ID0gMDtcclxudmFyIFhNTFRpbWVMaW1pdCA9IGZhbHNlO1xyXG52YXIgZ2FtZXRpbWVsaW1pdCA9IDU7XHJcbnZhciBnYW1ldGltZUNvdW50RG93biA9IDBcclxudmFyIHJvdW5kID0gMTtcclxudmFyIERvbWFpbiA9IG51bGw7XHJcbnZhciBHYW1lU3RhdHVzTWVzc2FnZSA9IFwiY2xvc2VcIjtcclxudmFyIHJlc3VsdCA9IFwidGhhbmtzXCI7IFxyXG52YXIgcHJpemVfdG90YWwgPSAwO1xyXG52YXIgcm9sZSA9IG51bGw7XHJcbnZhciB3aW5uZXJfbmFtZSA9IFtdO1xyXG52YXIgd2lubmVyX2lkID0gW107XHJcbnZhciB3aW5uZXJfcGljdHVyZSA9IFtdO1xyXG52YXIgd2lubmVyX3Njb3JlID1bXTtcclxudmFyIHdpbm5lcl9UYWtlVGltZSA9IDBcclxudmFyIFdpbm5lckRhdGEgPSBudWxsO1xyXG52YXIgQWxyZWFkeVBsYXllZCA9IDA7IFxyXG52YXIgcGVvcGxlID0gMDtcclxudmFyIGFjdGl2aXR5X2lkID0gbnVsbDtcclxudmFyIGdhbWVfaWQgPSBudWxsO1xyXG52YXIgbGlmZnN0YXRlID0gbnVsbDtcclxudmFyIFVzZXJfaWQgPSBudWxsO1xyXG52YXIgVXNlcl9OYW1lID0gbnVsbDtcclxudmFyIFVzZXJfUGljdHVyZSA9IG51bGw7XHJcbnZhciBwcml6ZV9JRCA9IFtdO1xyXG52YXIgV2luX1RpbWUgPSBbXTtcclxudmFyIHByaXplX25hbWVfZ3Vlc3QgPSBbXTsgXHJcbnZhciBwcml6ZV9uYW1lX2hvc3QgPSBbXTtcclxudmFyIHByaXplX21ldGhvZCA9IFtdO1xyXG52YXIgZ2V0cHJpemVfcm91bmQgPSBbXVxyXG52YXIgcGFzc3dvcmQgPSBbXTtcclxudmFyIHByaXplX3BpY3R1cmUgPSBbXTtcclxudmFyIHByaXplX3R5cGUgPSBcIlwiO1xyXG52YXIgZXhjaGFuZ2VQcml6ZSA9W107XHJcbnZhciBHYW1lU3RhdHVzV1NfSG9zdCA9IG51bGxcclxudmFyIE51bWJlck9mTG90dGVyeVdTX0hvc3QgPSBudWxsXHJcbnZhciBOdW1iZXJPZlBlb3BsZV9HdWVzdCA9IG51bGw7XHJcbnZhciBTZXNzaW9uID0gbnVsbDsgXHJcbnZhciBDYW5ub3RKb2luR2FtZSA9IFwiXCI7XHJcbnZhciBBbGxvd1JlUHJpemUgPVwiXCI7XHJcbnZhciBDaGVja1JvbGUgPSBmYWxzZTtcclxudmFyIGNvbm5ldF93cyA9IGZhbHNlO1xyXG52YXIgR3Vlc3QxX0pvaW5fSlMgPVwiXCI7XHJcbnZhciBHYW1lTmFtZSA9IFwiXCJcclxudmFyIFNwYXduTmV3ZXN0V2lubmVyID0gZmFsc2U7XHJcbnZhciBzZXNzaW9uX2lkID0gXCJcIlxyXG52YXIgQ3VycmVudFJvdW5kID0gMDtcclxudmFyIEhvc3RXaW5kb3cgPSBcIm9wZW5cIjtcclxudmFyIFNjb3JlID0gMDtcclxudmFyIFNraW4gPSBcIlwiO1xyXG52YXIgTG9jYWxfSUQgPSBcIlwiO1xyXG52YXIgQmFja0dyb3VuZF9UaGVtZSA9XCJcIjtcclxudmFyIEFuc3dlclJlc3VsdCA9IFtdO1xyXG52YXIgUXVlc3Rpb24gPSBbXTtcclxudmFyIFF1ZXN0aW9uQ291bnQgPSAwO1xyXG52YXIgT3B0aW9ucyA9IFtdO1xyXG52YXIgUXVlc3Rpb25QaWN0dXJlID0gW107XHJcbnZhciBBbnN3ZXIgPSAwXHJcbnZhciBSYW5rID0gMDtcclxudmFyIG1vZGUgPSBcIlwiO1xyXG52YXIgY2hhbmNlID0gMDtcclxudmFyIFByaXplc3RhY2tfaWQgPSBbXTtcclxudmFyIFByaXplc3RhY2tfbmFtZSA9IFtdO1xyXG52YXIgUHJpemVzdGFja19waWN0dXJlID0gW107IFxyXG52YXIgR2FtZV9qcyA9IFwiXCI7XHJcbnZhciBnYW1lX3R5cGUgPSBcIlwiO1xyXG52YXIgUHJpemVTdGFmZnMgPSBcIlwiO1xyXG5cclxuXHJcbi8v6KaB5Zyo6Ieq5bex55qE6IWz5pys5bCO5Ye66K6K6YeP5omN6IO96K6T5Yil5Lq657m85om/ICBcclxubW9kdWxlLmV4cG9ydHMgPSB7ICAgIFxyXG4gICAgVG9wVGl0bGUsIC8v6YGK5oiy55qE5LiK5pa55qGGXHJcbiAgICBQcml6ZV9CYWNrR3JvdW5kLCAvL+eOqeWutuafpeeci+eNjuWTgeWgtOaZr+eahOiDjOaZr1xyXG4gICAgV2hpdGNoUHJpemVfaW5kZXgsIC8v5YWM5o+b55Wr6Z2i55W25YmN6YG455qE542O5ZOB57eo6JmfXHJcbiAgICBYTUxUaW1lTGltaXQsIC8v6YGK5oiy5piv5ZCm6ZmQ5pmCXHJcbiAgICBnYW1ldGltZWxpbWl0LCAvL+mBiuaIsumZkOWItueahOaZgumWk1xyXG4gICAgZ2FtZXRpbWVDb3VudERvd24sIC8v6YGK5oiy5YCS5pW46KiI5pmCXHJcbiAgICByb3VuZCwgLy/ovKrmrKFcclxuICAgIERvbWFpbiwgLy/nlbbliY3ntrLln59cclxuICAgIEdhbWVTdGF0dXNNZXNzYWdlLCAvL+mBiuaIsueLgOaFiyA6IG9wZW7jgIFzdGFydOOAgWVuZFxyXG4gICAgcmVzdWx0LCAvL+S4reeNjue1kOaenCB0aGFua3Pku6PooajmspLkuK3njY7vvIzlhbbku5bku6PooajkuK3njY5cclxuICAgIHByaXplX3RvdGFsLCAvL+eNjuWTgeaVuOmHj1xyXG4gICAgcm9sZSwgLy/nlKjmiLbop5LoibIo5Li75oyB5Lq6T1LnjqnlrrYpXHJcbiAgICBHYW1lX0luZm9ybWF0aW9uLCAvL+WPluW+l+mBiuaIsuioree9ruizh+ioilhNTFxyXG4gICAgUm9sZUNvbWZpcm0sIC8v5o6l5pS26KeS6Imy5Yik5pa35ZKM6Lyq5qyhWE1MXHJcbiAgICBMb3R0ZXJ5X0d1ZXN0LCAvL+eOqeWutuS4reeNjuWIpOaWt1hNTFxyXG4gICAgd2lubmVyX25hbWUsIC8v5Li75oyB5Lq657SA6YyE5b6X542O546p5a625ZCN5a2QXHJcbiAgICB3aW5uZXJfcGljdHVyZSwgLy/kuLvmjIHkurrntIDpjITlvpfnjY7njqnlrrbpoK3lg49cclxuICAgIHdpbm5lcl9pZCwgLy/kuLvmjIHkurrntIDpjITlvpfnjY7njqnlrrbovqjorZjnorxcclxuICAgIHdpbm5lcl9zY29yZSwgLy/kuLvmjIHkurrntIDpjITlvpfnjY7njqnlrrbliIbmlbhcclxuICAgIFdpbm5lckRhdGEsIC8v5Li75oyB5Lq6IEhvc3QzX1Nob3dOZXdXaW5uZXIganPohbPmnKxcclxuICAgIFdlYlNvY2tldF9OdW1iZXJPZlBlb3BsZV9HdWVzdCwvL+aWsOWinuS6uuWToSjnjqnlrrbnlKgpXHJcbiAgICBXZWJTb2NrZXRfTnVtYmVyT2ZQZW9wbGVfSG9zdCwvL+aWsOWinuS6uuWToSjkuLvmjIHkurrnlKgpXHJcbiAgICBXZWJTb2NrZXRfR2FtZVN0YXR1c19HdWVzdCwvL+mBiuaIsueLgOaFi+eahOioiuaBr+WCs+mAgSjnjqnlrrbnlKgpXHJcbiAgICBXZWJTb2NrZXRfR2FtZVN0YXR1c19Ib3N0LC8v6YGK5oiy54uA5oWL55qE6KiK5oGv5YKz6YCBKOS4u+aMgeS6uueUqClcclxuICAgIFdlYlNvY2tldF9VcERhdGVTY29yZV9HdWVzdCwvL+eOqeWutuavj+enkuWwh+WIhuaVuOWCs+e1puW+jOerryjnjqnlrrbnlKgpXHJcbiAgICBXZWJTb2NrZXRfTnVtYmVyT2ZMb3R0ZXJ5X0hvc3QsLy/kuLvmjIHkurrmlLbliLDmkJbntIXljIXliLDkuIDlrprmrKHmlbjnmoTnjqnlrrboqIrmga8o5Li75oyB5Lq655SoKVxyXG4gICAgV2ViU29ja2V0X051bWJlck9mTG90dGVyeV9TY29yZV9Ib3N0LCAvL+S4u+aMgeS6uuaUtuWIsOeOqeWutuWIhuaVuCjkuLvmjIHkurrnlKgpXHJcbiAgICBBbHJlYWR5UGxheWVkLCAvL+ipsui8quaYr+WQpueOqemBjlxyXG4gICAgcGVvcGxlLCAvL+S6uuaVuFxyXG4gICAgYWN0aXZpdHlfaWQsIC8v5rS75YuV6L6o6K2Y56K8XHJcbiAgICBnYW1lX2lkLCAvL+mBiuaIsui+qOitmOeivFxyXG4gICAgbGlmZnN0YXRlLFxyXG4gICAgVXNlcl9pZCwgLy/nlKjmiLbovqjorZjnorwo5Zue5YKz5b6M56uv55SoKVxyXG4gICAgVXNlcl9OYW1lLCAvL+eUqOaItuWQjeeosSjlm57lgrPlvoznq6/nlKgpXHJcbiAgICBVc2VyX1BpY3R1cmUsIC8v55So5oi26aCt5YOPKOWbnuWCs+W+jOerr+eUqClcclxuICAgIHByaXplX0lELCAvL+eNjuWTgei+qOitmOeivFxyXG4gICAgV2luX1RpbWUsIC8v5b6X542O5pmC6ZaTXHJcbiAgICBwcml6ZV9uYW1lX2d1ZXN0LCAvL+eNjuWTgeWQjeeosSjnjqnlrrblhYznjY7nlavpnaLpoa/npLopXHJcbiAgICBwcml6ZV9uYW1lX2hvc3QsIC8v542O5ZOB5ZCN56ixKOS4u+aMgeS6uue1kOeul+WgtOaZr+mhr+ekuilcclxuICAgIHByaXplX21ldGhvZCwgLy/njY7lk4HlhYzmj5vmlrnlvI9cclxuICAgIHBhc3N3b3JkLCAvL+eNjuWTgeWvhueivFxyXG4gICAgcHJpemVfcGljdHVyZSwgLy/njY7lk4HlnJbniYdcclxuICAgIGdldHByaXplX3JvdW5kLCAvL+WPluW+l+W+l+eNjueahOi8quasoVxyXG4gICAgZXhjaGFuZ2VQcml6ZSwgLy/njY7lk4HmmK/lkKblhYzmj5vpgY5cclxuICAgIEdhbWVTdGF0dXNXU19Ib3N0LCAvL+mWi+WVn+S4u+aMgeS6uumBiuaIsueLgOaFi+eahHdzXHJcbiAgICBOdW1iZXJPZkxvdHRlcnlXU19Ib3N0LCAvL+mWi+WVn+S4u+aMgeS6uuaOpeaUtuS4reeNjuS6uueahHdzIFxyXG4gICAgTnVtYmVyT2ZQZW9wbGVfR3Vlc3QsIC8v6ZaL5ZWf546p5a625Yqg5YWl6YGK5oiy5Z+36KGM55qEd3NcclxuICAgIFNlc3Npb24sIC8v5aC05qyhXHJcbiAgICBDYW5ub3RKb2luR2FtZSwgLy/kuI3og73lj4PliqDpgYrmiLLnmoTpjK/oqqToqIrmga9cclxuICAgIEFsbG93UmVQcml6ZSwgLy/lj6/ku6Xph43opIfkuK3njY5cclxuICAgIENoZWNrUm9sZSwgLy/mmK/lkKbmqqLmn6Xlrozop5LoibJcclxuICAgIGNvbm5ldF93cywgLy/mmK/lkKbmnInpgKPmjqXliLB3ZWJzb2NrZXRcclxuICAgIEd1ZXN0MV9Kb2luX0pTLCAvL+eOqeWutiBHdWVzdDFfSm9pbiBqc+iFs+acrFxyXG4gICAgR2FtZU5hbWUsIC8v6YGK5oiy5ZCN56ixXHJcbiAgICBTcGF3bk5ld2VzdFdpbm5lciwgLy/mmK/lkKbmnInpoa/npLrmnIDmlrDlhankvY3lvpfnjY7kurpcclxuICAgIHNlc3Npb25faWQsIC8v55So5oi2Y29va2ll5YC8XHJcbiAgICBDdXJyZW50Um91bmQsIC8v55W25YmN6Lyq5qyhKOeUqOaWvOS4u+aMgeS6uue1kOeul+mggemdouS9v+eUqO+8jOWboOeCuumWi+Wni+mBiuaIsuacg+a4heepuuS6uuaVuO+8jOi8quasoSArIDEpXHJcbiAgICBIb3N0V2luZG93LCAvL+S4u+aMgeS6uuWcqOmBiuaIsuS4reaYr+WQpumXnOmWieimlueql1xyXG4gICAgU2NvcmUsIC8v546p5a625YiG5pW4XHJcbiAgICBTa2luLCAvL+eUqOaItumBuOaTh+eahOinkuiJsuearuiGmlxyXG4gICAgTG9jYWxfSUQsXHJcbiAgICBCYWNrR3JvdW5kX1RoZW1lLCAvL+eUqOaItumBuOaTh+eahOS4u+mhjOiDjOaZr1xyXG4gICAgLy8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3llY/nrZTpgYrmiLLlj4PmlbhcclxuICAgIC8vPT09PT3kuLvmjIHkuro9PT09PVxyXG4gICAgQW5zd2VyUmVzdWx0LCAvLyDllY/nrZTpgYrmiLIg5q+P5YCL6YG46aCF55qE5Lq65pW4XHJcbiAgICBRdWVzdGlvbiwgLy/llY/nrZTpgYrmiLIg5a2Y5pS+5ZWP6aGM6Zmj5YiXXHJcbiAgICBRdWVzdGlvbkNvdW50LCAvL+WVj+etlOmBiuaIsiDoqIjmlbjnm67liY3mmK/lk6rlgIvllY/poYxcclxuICAgIE9wdGlvbnMsIC8v5ZWP562U6YGK5oiyIOWVj+mhjOmBuOmgheaWh+Wtl+mZo+WIl1xyXG4gICAgUXVlc3Rpb25QaWN0dXJlLCAvL+WVj+etlOmBiuaIsiDkuLvmjIHkurrpgYrmiLLmmYLnlKjlvpfllY/poYzlnJbniYfpmaPliJdcclxuICAgIEFuc3dlciwgLy/llY/nrZTpgYrmiLIg5pys6Lyq5ZWP6aGM55qE562U5qGIXHJcbiAgICAvLz09PT09546p5a62PT09PT1cclxuICAgIFJhbmssIC8v5ZWP562U5ZWP6aGMIOeOqeWutuaOkuWQjVxyXG4gICAgd2lubmVyX1Rha2VUaW1lLCAvL+WVj+etlOmBiuaIsiDnjqnlrrbogJfmmYJcclxuICAgIC8vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t5bm46YGL6Lyq55uk5Y+D5pW4XHJcbiAgICBtb2RlLCAgLy/nm67liY3mqKHlvI9cclxuICAgIGNoYW5jZSwgLy/nm67liY3mir3njY7mrKHmlbhcclxuICAgIFByaXplX0luZnJvbWF0aW9uLFxyXG4gICAgcHJpemVfdHlwZSxcclxuICAgIFByaXplc3RhY2tfaWQsXHJcbiAgICBQcml6ZXN0YWNrX25hbWUsXHJcbiAgICBQcml6ZXN0YWNrX3BpY3R1cmUsXHJcbiAgICBHYW1lX2pzLFxyXG4gICAgZ2FtZV90eXBlLFxyXG4gICAgUHJpemVTdGFmZnMsXHJcbn07XHJcblxyXG4vL+WPluW+l+mBiuaIsuioree9ruizh+ioilxyXG5mdW5jdGlvbiBHYW1lX0luZm9ybWF0aW9uKCl7IFxyXG4gICAgdmFyIHVybCA9ICdodHRwczovLycrIGdhbWVNb2RlbC5sb2NhbF9JRCArJy92MS9pbnRlcmFjdC9nYW1lLycgKyBnYW1lTW9kZWwuR2FtZU5hbWUgKyAnP2dhbWVfaWQ9JyArIGdhbWVNb2RlbC5nYW1lX2lkO1xyXG4gICAgdmFyIHJlZHBhY2sgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsgXHJcbiAgICByZWRwYWNrLm9wZW4oXCJHRVRcIiwgdXJsLCB0cnVlKTtcclxuICAgIHJlZHBhY2sub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChyZWRwYWNrLnJlYWR5U3RhdGUgPT0gNCAmJiAocmVkcGFjay5zdGF0dXMgPj0gMjAwICYmIHJlZHBhY2suc3RhdHVzIDw9IDIwNykpIHsgLy/mmK/lkKbpgKPmjqXmiJDlip9cclxuICAgICAgICAgICAgdmFyIHRleHQgPSByZWRwYWNrLnJlc3BvbnNlVGV4dFxyXG4gICAgICAgICAgICB2YXIgWE1Mb2JqZWN0ID0gSlNPTi5wYXJzZShyZWRwYWNrLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5TZXNzaW9uID0gWE1Mb2JqZWN0LmRhdGEudGl0bGU7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5BbGxvd1JlUHJpemUgPSBYTUxvYmplY3QuZGF0YS5hbGxvdztcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLmdhbWVfdHlwZSA9IFhNTG9iamVjdC5kYXRhLmdhbWVfdHlwZVxyXG4gICAgICAgICAgICAvL+aYr+WQpuaciemZkOWItumBiuaIsuaZgumWk1xyXG4gICAgICAgICAgICBpZihYTUxvYmplY3QuZGF0YS5saW1pdF90aW1lID09IFwib3BlblwiKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwuWE1MVGltZUxpbWl0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5nYW1ldGltZWxpbWl0ID0gWE1Mb2JqZWN0LmRhdGEuc2Vjb25kO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgZ2FtZU1vZGVsLlhNTFRpbWVMaW1pdCA9IGZhbHNlO1xyXG4gICAgICAgIH0gXHJcbiAgICB9O1xyXG4gICAgcmVkcGFjay5zZW5kKCk7XHJcbn1cclxuXHJcbi8v5o6l5pS26KeS6Imy5Yik5pa35ZKM6Lyq5qyhWE1MXHJcbmZ1bmN0aW9uIFJvbGVDb21maXJtKCl7XHJcbiAgICB2YXIgdXJsID0gJ2h0dHBzOi8vJysgZ2FtZU1vZGVsLmxvY2FsX0lEICsnL3YxL3VzZXI/YWN0aXZpdHlfaWQ9JyArIGdhbWVNb2RlbC5hY3Rpdml0eV9pZCArICcmZ2FtZV9pZD0nKyBnYW1lTW9kZWwuZ2FtZV9pZCArICcmZ2FtZT0nKyBnYW1lTW9kZWwuR2FtZU5hbWUgKyAnJnNlc3Npb25faWQ9JysgZ2FtZU1vZGVsLnNlc3Npb25faWQ7ICAgICAgICAgICAgICAgIFxyXG4gICAgdmFyIFJvbGUgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgIFJvbGUub3BlbihcIkdFVFwiLCB1cmwsIHRydWUpOyAvL0dFVOWPluW+l+OAgVBPU1TlgrPpgIHjgIFQVVTmm7TmlLlcclxuICAgIFJvbGUub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChSb2xlLnJlYWR5U3RhdGUgPT0gNCAmJiAoUm9sZS5zdGF0dXMgPj0gMjAwICYmIFJvbGUuc3RhdHVzIDw9IDIwNykpIHsgLy/mmK/lkKbpgKPmjqXmiJDlip9cclxuICAgICAgICAgICAgdmFyIFhNTG9iamVjdCA9IEpTT04ucGFyc2UoUm9sZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAvL+mWi+Wni+aOpeaUtuioiuaBr1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwucm9sZSA9IFhNTG9iamVjdC5kYXRhLlVzZXIucm9sZVxyXG4gICAgICAgICAgICBnYW1lTW9kZWwuVXNlcl9pZCA9IFhNTG9iamVjdC5kYXRhLlVzZXIudXNlcl9pZDtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLlVzZXJfTmFtZSA9IFhNTG9iamVjdC5kYXRhLlVzZXIubmFtZTtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLlVzZXJfUGljdHVyZSA9IFhNTG9iamVjdC5kYXRhLlVzZXIuYXZhdGFyO1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwucm91bmQgPSBYTUxvYmplY3QuZGF0YS5HYW1lLnJvdW5kO1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwucHJpemVfdG90YWwgPSBYTUxvYmplY3QuZGF0YS5HYW1lLmFtb3VudDtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLmNoYW5jZSA9IFhNTG9iamVjdC5kYXRhLlRpbWVzO1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwuUHJpemVTdGFmZnMgPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmc1xyXG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwO2kgPCBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmcy5sZW5ndGg7IGkrKykvL+WPluW+l+eNjuWTgeizh+ioilxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgZ2FtZU1vZGVsLnByaXplX0lEW2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0uaWQ7IC8v542O5ZOB57eo6JmfXHJcbiAgICAgICAgICAgICAgZ2FtZU1vZGVsLnByaXplX25hbWVfZ3Vlc3RbaV0gPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmc1tpXS5wcml6ZV9uYW1lOyAvL+eNjuWTgeWQjeeosVxyXG4gICAgICAgICAgICAgIGdhbWVNb2RlbC5wcml6ZV9tZXRob2RbaV0gPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmc1tpXS5tZXRob2Q7IC8v542O5ZOB5YWM5o+b5pa55byPXHJcbiAgICAgICAgICAgICAgZ2FtZU1vZGVsLnBhc3N3b3JkW2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0ucGFzc3dvcmQ7IC8v5YWM542O5a+G56K8XHJcbiAgICAgICAgICAgICAgZ2FtZU1vZGVsLldpbl9UaW1lW2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0ud2luX3RpbWU7IC8v5oq95Yiw542O5ZOB55qE5pmC6ZaTXHJcbiAgICAgICAgICAgICAgZ2FtZU1vZGVsLmdldHByaXplX3JvdW5kW2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0ucm91bmQ7IC8v5oq95Yiw542O5ZOB55qE6Lyq5qyhXHJcbiAgICAgICAgICAgICAgZ2FtZU1vZGVsLnByaXplX3BpY3R1cmVbaV0gPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmc1tpXS5waWN0dXJlOyAvL+eNjuWTgeeFp+eJh1xyXG4gICAgICAgICAgICAgIGdhbWVNb2RlbC5leGNoYW5nZVByaXplW2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0uc3RhdHVzOyAvL+aYr+WQpuWFjOaPm1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5DaGVja1JvbGUgPSB0cnVlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKFJvbGUucmVhZHlTdGF0ZSA9PSA0ICYmIFJvbGUuc3RhdHVzID49IDQwMClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhciBYTUxvYmplY3QgPSBKU09OLnBhcnNlKFJvbGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLkNoZWNrUm9sZSA9IHRydWVcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLkNhbm5vdEpvaW5HYW1lID0gWE1Mb2JqZWN0Lm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUm9sZS5zZW5kKCk7XHJcbn1cclxuXHJcbi8v5p+l6Kmi5omA5pyJ542O5ZOBWE1MXHJcbmZ1bmN0aW9uIFByaXplX0luZnJvbWF0aW9uKCl7XHJcbiAgICB2YXIgdXJsID0gJ2h0dHBzOi8vJysgZ2FtZU1vZGVsLmxvY2FsX0lEICsnL3YxL2ludGVyYWN0L2dhbWUvJysgZ2FtZU1vZGVsLkdhbWVOYW1lICsnL3ByaXplP2dhbWVfaWQ9JyArIGdhbWVNb2RlbC5nYW1lX2lkOyAgICAgICAgICAgICAgICBcclxuICAgIHZhciBQcml6ZSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgUHJpemUub3BlbihcIkdFVFwiLCB1cmwsIHRydWUpOyAvL0dFVOWPluW+l+OAgVBPU1TlgrPpgIHjgIFQVVTmm7TmlLlcclxuICAgIFByaXplLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoUHJpemUucmVhZHlTdGF0ZSA9PSA0ICYmIChQcml6ZS5zdGF0dXMgPj0gMjAwICYmIFByaXplLnN0YXR1cyA8PSAyMDcpKSB7IC8v5piv5ZCm6YCj5o6l5oiQ5YqfXHJcbiAgICAgICAgICAgIHZhciBYTUxvYmplY3QgPSBKU09OLnBhcnNlKFByaXplLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgIC8v6ZaL5aeL5o6l5pS26KiK5oGvXHJcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7aSA8IFhNTG9iamVjdC5kYXRhLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgZ2FtZU1vZGVsLlByaXplc3RhY2tfaWRbaV0gPSBYTUxvYmplY3QuZGF0YVtpXS5wcml6ZV9pZDsgLy/njY7lk4Hnt6jomZ9cclxuICAgICAgICAgICAgICBnYW1lTW9kZWwuUHJpemVzdGFja19uYW1lW2ldID0gWE1Mb2JqZWN0LmRhdGFbaV0ubmFtZTsgLy/njY7lk4HlkI3nqLFcclxuICAgICAgICAgICAgICBnYW1lTW9kZWwuUHJpemVzdGFja19waWN0dXJlW2ldID0gWE1Mb2JqZWN0LmRhdGFbaV0ucGljdHVyZTsgLy/njY7lk4HnhafniYdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBnYW1lTW9kZWwuR2FtZV9qcy5TcGF3blByaXplKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKFByaXplLnJlYWR5U3RhdGUgPT0gNCAmJiBQcml6ZS5zdGF0dXMgPj0gNDAwKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIFhNTG9iamVjdCA9IEpTT04ucGFyc2UoUHJpemUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLkNhbm5vdEpvaW5HYW1lID0gWE1Mb2JqZWN0Lm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUHJpemUuc2VuZCgpO1xyXG59XHJcblxyXG4vL+eOqeWutuS4reeNjuWIpOaWt1hNTFxyXG5mdW5jdGlvbiBMb3R0ZXJ5X0d1ZXN0KCl7XHJcbiAgICB2YXIgdXJsID0gJ2h0dHBzOi8vJysgZ2FtZU1vZGVsLmxvY2FsX0lEICsnL3YxL2dhbWUvbHVja3k/YWN0aXZpdHlfaWQ9JysgZ2FtZU1vZGVsLmFjdGl2aXR5X2lkICsnJmdhbWVfaWQ9JyArIGdhbWVNb2RlbC5nYW1lX2lkICsgJyZnYW1lPScrIGdhbWVNb2RlbC5HYW1lTmFtZSArICcmc2Vzc2lvbl9pZD0nKyBnYW1lTW9kZWwuc2Vzc2lvbl9pZCArICcmbW9kZT0nICsgZ2FtZU1vZGVsLm1vZGU7ICAgICAgICAgICAgICAgIFxyXG4gICAgdmFyIExvdHRlcnkgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgIExvdHRlcnkub3BlbihcIkdFVFwiLCB1cmwsIHRydWUpOyAvL0dFVOWPluW+l+OAgVBPU1TlgrPpgIHjgIFQVVTmm7TmlLlcclxuICAgIExvdHRlcnkub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChMb3R0ZXJ5LnJlYWR5U3RhdGUgPT0gNCAmJiAoTG90dGVyeS5zdGF0dXMgPj0gMjAwICYmIExvdHRlcnkuc3RhdHVzIDw9IDIwNykpIHsgLy/mmK/lkKbpgKPmjqXmiJDlip9cclxuICAgICAgICAgICAgdmFyIFhNTG9iamVjdCA9IEpTT04ucGFyc2UoTG90dGVyeS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAvL+mWi+Wni+aOpeaUtuioiuaBr1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwucmVzdWx0ID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZi5tZXRob2Q7ICAvL+aKveeNjue1kOaenCDkuI3nrYnmlrx0aGFua3Pku6PooajkuK3njY7vvIx0aGFua3PluLbooajmnKrkuK3njY5cclxuICAgICAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVOYW1lID09IFwibG90dGVyeVwiKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwucHJpemVfSUQgPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmLnByaXplX2lkOyAvL+eNjuWTgee3qOiZn1xyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLnByaXplX25hbWVfZ3Vlc3QgPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmLnByaXplX25hbWU7IC8v542O5ZOB5ZCN56ixXHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwucHJpemVfcGljdHVyZSA9IFhNTG9iamVjdC5kYXRhLlByaXplU3RhZmYucGljdHVyZTsgLy/njY7lk4HnhafniYdcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5wcml6ZV90eXBlID0gIFhNTG9iamVjdC5kYXRhLlByaXplU3RhZmYucHJpemVfdHlwZVxyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLlByaXplU3RhZmZzID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5HYW1lX2pzLmxldHRvcmV5KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBmb3IodmFyIGkgPSAwO2kgPCBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmcy5sZW5ndGg7IGkrKylcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLnByaXplX0lEW2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0uaWQ7IC8v542O5ZOB57eo6JmfXHJcbiAgICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5wcml6ZV9uYW1lX2d1ZXN0W2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0ucHJpemVfbmFtZTsgLy/njY7lk4HlkI3nqLFcclxuICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLnByaXplX21ldGhvZFtpXSA9IFhNTG9iamVjdC5kYXRhLlByaXplU3RhZmZzW2ldLm1ldGhvZDsgLy/njY7lk4HlhYzmj5vmlrnlvI9cclxuICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLnBhc3N3b3JkW2ldID0gWE1Mb2JqZWN0LmRhdGEuUHJpemVTdGFmZnNbaV0ucGFzc3dvcmQ7IC8v5YWM542O5a+G56K8XHJcbiAgICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5XaW5fVGltZVtpXSA9IFhNTG9iamVjdC5kYXRhLlByaXplU3RhZmZzW2ldLndpbl90aW1lOyAvL+aKveWIsOeNjuWTgeeahOaZgumWk1xyXG4gICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuZ2V0cHJpemVfcm91bmRbaV0gPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmc1tpXS5yb3VuZDsgLy/mir3liLDnjY7lk4HnmoTovKrmrKFcclxuICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLnByaXplX3BpY3R1cmVbaV0gPSBYTUxvYmplY3QuZGF0YS5Qcml6ZVN0YWZmc1tpXS5waWN0dXJlOyAvL+eNjuWTgeeFp+eJh1xyXG4gICAgICAgICAgICAgICAgICBnYW1lTW9kZWwuZXhjaGFuZ2VQcml6ZVtpXSA9IFhNTG9iamVjdC5kYXRhLlByaXplU3RhZmZzW2ldLnN0YXR1czsgLy/mmK/lkKblhYzmj5tcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChMb3R0ZXJ5LnJlYWR5U3RhdGUgPT0gNCAmJiBMb3R0ZXJ5LnN0YXR1cyA+PSA0MDApXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YXIgWE1Mb2JqZWN0ID0gSlNPTi5wYXJzZShMb3R0ZXJ5LnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5DYW5ub3RKb2luR2FtZSA9IFhNTG9iamVjdC5tZXNzYWdlO1xyXG4gICAgICAgICAgICBpZihnYW1lTW9kZWwuR2FtZU5hbWUgPT0gXCJsb3R0ZXJ5XCIpIGdhbWVNb2RlbC5HYW1lX2pzLmxldHRvcmV5KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgTG90dGVyeS5zZW5kKCk7XHJcbn1cclxuXHJcbi8v5bCH546p5a625Lq65pW45paw5aKe5YiwV2Vic29ja2V044CB5o6l5pS2546p5a625Lit542O57SA6YyEXHJcbmZ1bmN0aW9uIFdlYlNvY2tldF9OdW1iZXJPZlBlb3BsZV9HdWVzdCh0aW1lLHNlbmRtZXNzYWdlKXtcclxuICAgIGlmKHNlbmRtZXNzYWdlID09IGZhbHNlKVxyXG4gICAge1xyXG4gICAgICAgIGdhbWVNb2RlbC5OdW1iZXJPZlBlb3BsZV9HdWVzdCA9IG5ldyBXZWJTb2NrZXQoXCJ3c3M6Ly9cIiArIGdhbWVNb2RlbC5sb2NhbF9JRCArIFwiL3dzL3YxL2dhbWUvc3RhZmY/YWN0aXZpdHlfaWQ9XCIrIGdhbWVNb2RlbC5hY3Rpdml0eV9pZCArIFwiJmdhbWVfaWQ9XCIrIGdhbWVNb2RlbC5nYW1lX2lkICsgXCImZ2FtZT1cIisgZ2FtZU1vZGVsLkdhbWVOYW1lKTtcclxuICAgICAgICAvL+mAo+e3mumWi+WVn+aZguinuOeZvCBcclxuICAgICAgICBnYW1lTW9kZWwuTnVtYmVyT2ZQZW9wbGVfR3Vlc3Qub25vcGVuID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBcclxuICAgICAgICAvL+mAo+e3mumMr+iqpOaZglxyXG4gICAgICAgIGdhbWVNb2RlbC5OdW1iZXJPZlBlb3BsZV9HdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgfTtcclxuICAgICAgICAvL+mAo+e3mumXnOmWieaZguinuOeZvCAgXHJcbiAgICAgICAgZ2FtZU1vZGVsLk51bWJlck9mUGVvcGxlX0d1ZXN0Lm9uY2xvc2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgaWYoZ2FtZU1vZGVsLkNhbm5vdEpvaW5HYW1lICE9IFwi6Yyv6KqkOiDoqbLloLTmrKHpgYrmiLLkuI3lhYHoqLHph43opIfkuK3njY7vvIzmgqjlt7LkuK3njY7vvIznhKHms5Xlj4PliqDkuIvkuIDovKrpgYrmiLJcIikgXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgIGdhbWVNb2RlbC5XZWJTb2NrZXRfTnVtYmVyT2ZQZW9wbGVfR3Vlc3QoMTAwMCxmYWxzZSlcclxuICAgICAgICAgICAgfSAgXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIGVsc2VcclxuICAgIHtcclxuICAgICAgLy/nrYnlvoUx56eS77yM562J6YCa6YGT5omT6ZaL5YaN5Z+36KGM5o6o6YCB6LOH5paZ57WmV2Vic29ja2V0XHJcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgIGlmKGdhbWVNb2RlbC5OdW1iZXJPZlBlb3BsZV9HdWVzdC5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuT1BFTil7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5OdW1iZXJPZlBlb3BsZV9HdWVzdC5zZW5kKEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIFVzZXI6e1xyXG4gICAgICAgICAgICAgICAgICAgIHVzZXJfaWQ6IGdhbWVNb2RlbC5Vc2VyX2lkLFxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGdhbWVNb2RlbC5Vc2VyX05hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgYXZhdGFyOiBnYW1lTW9kZWwuVXNlcl9QaWN0dXJlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgR2FtZTp7XHJcbiAgICAgICAgICAgICAgICAgICAgcm91bmQ6IChnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPT0gXCJzdGFydFwiIHx8IGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcImdhbWluZ1wiKSA/IGdhbWVNb2RlbC5yb3VuZCAtIDEgOiBnYW1lTW9kZWwucm91bmQgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlXHJcbiAgICAgIHtcclxuICAgICAgICBpZihnYW1lTW9kZWwuQ2Fubm90Sm9pbkdhbWUgIT0gXCLpjK/oqqQ6IOipsuWgtOasoemBiuaIsuS4jeWFgeiosemHjeikh+S4reeNju+8jOaCqOW3suS4reeNju+8jOeEoeazleWPg+WKoOS4i+S4gOi8qumBiuaIslwiKSBnYW1lTW9kZWwuR3Vlc3QxX0pvaW5fSlMuQ29ubmV0RmFpbCgpO1xyXG4gICAgICAgIGVsc2UgZ2FtZU1vZGVsLkd1ZXN0MV9Kb2luX0pTLkNvbm5ldFN1Y2Nlc3MoKTtcclxuICAgICAgfVxyXG4gICAgIH0sdGltZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/mjqXmlLbliLDoqIrmga/mmYLop7jnmbwgIFxyXG4gICAgZ2FtZU1vZGVsLk51bWJlck9mUGVvcGxlX0d1ZXN0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcbiAgICAgICAgdmFyIG9iamVjdCA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSkgLy/lsIflvoznq6/os4fmlpnmlL7lhaVvYmplY3RcclxuICAgICAgICBnYW1lTW9kZWwuQ2Fubm90Sm9pbkdhbWUgPSBvYmplY3QuZXJyb3I7XHJcbiAgICAgICAgZ2FtZU1vZGVsLkFscmVhZHlQbGF5ZWQgPSBvYmplY3QuUHJpemVTdGFmZi5pZDsgIC8v5piv5ZCm5pyJ5pCW6YGOIDDku6PooajpgoTmspLnjqnpgY4g5LiN562J5pa8MOS7o+ihqOeOqemBjuS6hlxyXG4gICAgICAgIGZvcih2YXIgaSA9IDA7aSA8IG9iamVjdC5Qcml6ZVN0YWZmcy5sZW5ndGg7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICBnYW1lTW9kZWwucHJpemVfSURbaV0gPSBvYmplY3QuUHJpemVTdGFmZnNbaV0uaWQ7IC8v542O5ZOB57eo6JmfXHJcbiAgICAgICAgICBnYW1lTW9kZWwucHJpemVfbmFtZV9ndWVzdFtpXSA9IG9iamVjdC5Qcml6ZVN0YWZmc1tpXS5wcml6ZV9uYW1lOyAvL+eNjuWTgeWQjeeosVxyXG4gICAgICAgICAgZ2FtZU1vZGVsLnByaXplX21ldGhvZFtpXSA9IG9iamVjdC5Qcml6ZVN0YWZmc1tpXS5tZXRob2Q7IC8v542O5ZOB5YWM5o+b5pa55byPXHJcbiAgICAgICAgICBnYW1lTW9kZWwucGFzc3dvcmRbaV0gPSBvYmplY3QuUHJpemVTdGFmZnNbaV0ucGFzc3dvcmQ7IC8v5YWM542O5a+G56K8XHJcbiAgICAgICAgICBnYW1lTW9kZWwuV2luX1RpbWVbaV0gPSBvYmplY3QuUHJpemVTdGFmZnNbaV0ud2luX3RpbWU7IC8v5oq95Yiw542O5ZOB55qE5pmC6ZaTXHJcbiAgICAgICAgICBnYW1lTW9kZWwuZ2V0cHJpemVfcm91bmRbaV0gPSBvYmplY3QuUHJpemVTdGFmZnNbaV0ucm91bmQ7IC8v5oq95Yiw542O5ZOB55qE6Lyq5qyhXHJcbiAgICAgICAgICBnYW1lTW9kZWwucHJpemVfcGljdHVyZVtpXSA9IG9iamVjdC5Qcml6ZVN0YWZmc1tpXS5waWN0dXJlOyAvL+eNjuWTgeeFp+eJh1xyXG4gICAgICAgICAgZ2FtZU1vZGVsLmV4Y2hhbmdlUHJpemVbaV0gPSBvYmplY3QuUHJpemVTdGFmZnNbaV0uc3RhdHVzOyAvL+aYr+WQpuWFjOaPm1xyXG4gICAgICAgIH1cclxuICAgICAgICBnYW1lTW9kZWwuR3Vlc3QxX0pvaW5fSlMuQ29ubmV0U3VjY2VzcygpO1xyXG4gICAgfTtcclxufSBcclxuXHJcbi8v5Li75oyB5Lq65b6eV2Vic29ja2V05Y+W5b6X54++5Zyo5Lq65pW4XHJcbmZ1bmN0aW9uIFdlYlNvY2tldF9OdW1iZXJPZlBlb3BsZV9Ib3N0KCl7XHJcbiAgICAvL+WPluW+l1dlYnNvY2tldOmAmuioiue2suWdgFxyXG4gICAgbGV0IHdzID0gbmV3IFdlYlNvY2tldChcIndzczovL1wiICsgZ2FtZU1vZGVsLmxvY2FsX0lEICsgXCIvd3MvdjEvZ2FtZS9wZW9wbGU/YWN0aXZpdHlfaWQ9XCIrIGdhbWVNb2RlbC5hY3Rpdml0eV9pZCArJyZnYW1lX2lkPScgKyBnYW1lTW9kZWwuZ2FtZV9pZCArICcmZ2FtZT0nKyBnYW1lTW9kZWwuR2FtZU5hbWUpICAgICAgICAgICAgIFxyXG4gICAgLy/pgKPnt5rplovllZ/mmYLop7jnmbwgXHJcbiAgICB3cy5vbm9wZW4gPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIH07XHJcbiAgICAvL+aOpeaUtuWIsOioiuaBr+aZguinuOeZvCAgXHJcbiAgICB3cy5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICB2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG4gICAgICAgIHZhciBvYmplY3QgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpIC8v5bCH5b6M56uv6LOH5paZ5pS+5YWlb2JqZWN0XHJcbiAgICAgICAgZ2FtZU1vZGVsLnBlb3BsZSA9IG9iamVjdC5HYW1lLnBlb3BsZTtcclxuICAgICAgICBnYW1lTW9kZWwucm91bmQgPSBvYmplY3QuR2FtZS5yb3VuZDtcclxuICAgIH07XHJcbiAgICAvL+mAo+e3mumMr+iqpOaZglxyXG4gICAgd3Mub25lcnJvciA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgfTtcclxuICAgIC8v6YCj57ea6Zec6ZaJ5pmC6Ke455m8ICBcclxuICAgIHdzLm9uY2xvc2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBnYW1lTW9kZWwuV2ViU29ja2V0X051bWJlck9mUGVvcGxlX0hvc3QoKTtcclxuICAgIH07XHJcbn0gXHJcblxyXG4vL+eOqeWutuW+nldlYnNvY2tldOWPluW+l+mWi+Wni+OAgeWGjeS+huS4gOi8quOAgemXnOmWieeahOioiuaBryAoc3RhcnTjgIFhZ2FpbuOAgWNsb3NlKVxyXG5mdW5jdGlvbiBXZWJTb2NrZXRfR2FtZVN0YXR1c19HdWVzdCgpe1xyXG4gICAgLy/lj5blvpdXZWJzb2NrZXTpgJroqIrntrLlnYBcclxuICAgIGxldCB3cyA9IG5ldyBXZWJTb2NrZXQoXCJ3c3M6Ly9cIiArIGdhbWVNb2RlbC5sb2NhbF9JRCArIFwiL3dzL3YxL2dhbWUvc3RhdHVzL2d1ZXN0P2FjdGl2aXR5X2lkPVwiKyBnYW1lTW9kZWwuYWN0aXZpdHlfaWQgKycmZ2FtZV9pZD0nICsgZ2FtZU1vZGVsLmdhbWVfaWQgKyAnJmdhbWU9JysgZ2FtZU1vZGVsLkdhbWVOYW1lKVxyXG4gICAgLy/pgKPnt5rplovllZ/mmYLop7jnmbwgXHJcbiAgICB3cy5vbm9wZW4gPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIH07XHJcbiAgICAvL+aOpeaUtuWIsOioiuaBr+aZguinuOeZvCAgXHJcbiAgICB3cy5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICB2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG4gICAgICAgIHZhciBvYmplY3QgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpXHJcbiAgICAgICAgZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID0gb2JqZWN0LkdhbWUuc3RhdHVzO1xyXG4gICAgICAgIGdhbWVNb2RlbC5yb3VuZCA9IG9iamVjdC5HYW1lLnJvdW5kO1xyXG4gICAgICAgIGdhbWVNb2RlbC5nYW1ldGltZUNvdW50RG93biA9IG9iamVjdC5HYW1lLnNlY29uZCA7XHJcbiAgICB9O1xyXG4gICAgLy/pgKPnt5rpjK/oqqTmmYJcclxuICAgIHdzLm9uZXJyb3IgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIH07XHJcbiAgICAvL+mAo+e3mumXnOmWieaZguinuOeZvCAgXHJcbiAgICB3cy5vbmNsb3NlID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0d1ZXN0KClcclxuICAgIH07XHJcbn0gXHJcblxyXG4vL+S4u+aMgeS6uuWwh+mWi+Wni+OAgeWGjeS4gOi8quOAgemXnOmWieeahOioiuaBr+WCs+WIsFdlYnNvY2tldCAoc3RhcnTjgIFhZ2FpbuOAgWNsb3NlKVxyXG5mdW5jdGlvbiBXZWJTb2NrZXRfR2FtZVN0YXR1c19Ib3N0KHN0YXR1cyx0aW1lKXtcclxuICAgIC8v6YCj57ea6ZaL5ZWf5pmC6Ke455m8IFxyXG4gICAgZ2FtZU1vZGVsLkdhbWVTdGF0dXNXU19Ib3N0Lm9ub3BlbiA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgfTtcclxuICAgIC8v5o6l5pS25Yiw6KiK5oGv5pmC6Ke455m8ICBcclxuICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzV1NfSG9zdC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICB2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG4gICAgICAgIHZhciBvYmplY3QgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpXHJcbiAgICAgICAgZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID0gb2JqZWN0LkdhbWUuc3RhdHVzO1xyXG4gICAgICAgIGdhbWVNb2RlbC5jb25uZXRfd3MgPSB0cnVlO1xyXG4gICAgfTtcclxuICAgIC8v6YCj57ea6Yyv6Kqk5pmCXHJcbiAgICBnYW1lTW9kZWwuR2FtZVN0YXR1c1dTX0hvc3Qub25lcnJvciA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgfTtcclxuICAgIC8v6YCj57ea6Zec6ZaJ5pmC6Ke455m8ICBcclxuICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzV1NfSG9zdC5vbmNsb3NlID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZ2FtZU1vZGVsLmNvbm5ldF93cyA9IGZhbHNlO1xyXG4gICAgICAgIGdhbWVNb2RlbC5HYW1lU3RhdHVzV1NfSG9zdCA9IG5ldyBXZWJTb2NrZXQoXCJ3c3M6Ly9cIiArIGdhbWVNb2RlbC5sb2NhbF9JRCArIFwiL3dzL3YxL2dhbWUvc3RhdHVzL2hvc3Q/YWN0aXZpdHlfaWQ9XCIrIGdhbWVNb2RlbC5hY3Rpdml0eV9pZCArJyZnYW1lX2lkPScgKyBnYW1lTW9kZWwuZ2FtZV9pZCArICcmZ2FtZT0nKyBnYW1lTW9kZWwuR2FtZU5hbWUpOyAvL+mWi+WVn+mBiuaIsueLgOaFi3dzO1xyXG4gICAgICAgIGdhbWVNb2RlbC5XZWJTb2NrZXRfR2FtZVN0YXR1c19Ib3N0KHN0YXR1cywxMDAwKVxyXG4gICAgfTtcclxuICAgIC8v562J5b6FMeenku+8jOetiemAmumBk+aJk+mWi+WGjeWft+ihjOaOqOmAgeizh+aWmee1pldlYnNvY2tldFxyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgIGlmKGdhbWVNb2RlbC5HYW1lU3RhdHVzV1NfSG9zdC5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuT1BFTil7XHJcbiAgICAgICAgICAgIGlmKHN0YXR1cyA9PSBcImdhbWluZ1wiICYmIGdhbWVNb2RlbC5YTUxUaW1lTGltaXQgPT0gdHJ1ZSlcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLkdhbWVTdGF0dXNXU19Ib3N0LnNlbmQoSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgICAgIEdhbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdW5kOiBnYW1lTW9kZWwucm91bmQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZDogZ2FtZU1vZGVsLmdhbWV0aW1lQ291bnREb3duLFxyXG4gICAgICAgICAgICAgICAgICAgIH19KSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwuR2FtZVN0YXR1c1dTX0hvc3Quc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1cyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm91bmQ6IHN0YXR1cyA9PSBcImVuZFwiPyBnYW1lTW9kZWwucm91bmQgLSAxIDogIGdhbWVNb2RlbC5yb3VuZCxcclxuICAgICAgICAgICAgICAgICAgICB9fSkpO1xyXG4gICAgICAgICAgICB9ICBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLmNvbm5ldF93cyA9IGZhbHNlO1xyXG4gICAgICAgIH0gXHJcbiAgICB9LHRpbWUpO1xyXG59IFxyXG5cclxuLy/njqnlrrbnq6/mr4/np5LlgrPpgIHliIbmlbjntablvoznq69cclxuZnVuY3Rpb24gV2ViU29ja2V0X1VwRGF0ZVNjb3JlX0d1ZXN0KCl7XHJcbiAgICBsZXQgd3MgPSBuZXcgV2ViU29ja2V0KFwid3NzOi8vXCIgKyBnYW1lTW9kZWwubG9jYWxfSUQgKyBcIi93cy92MS9nYW1lL3Njb3JlP2FjdGl2aXR5X2lkPVwiKyBnYW1lTW9kZWwuYWN0aXZpdHlfaWQgKycmZ2FtZV9pZD0nICsgZ2FtZU1vZGVsLmdhbWVfaWQgKyAnJmdhbWU9JysgZ2FtZU1vZGVsLkdhbWVOYW1lKTtcclxuXHJcbiAgICAvL+mAo+e3mumWi+WVn+aZguinuOeZvCBcclxuICAgIHdzLm9ub3BlbiA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgfTtcclxuICAgIC8v5o6l5pS25Yiw6KiK5oGv5pmC6Ke455m8ICBcclxuICAgIHdzLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcbiAgICAgICAgdmFyIG9iamVjdCA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSlcclxuICAgIH07XHJcbiAgICAvL+mAo+e3mumMr+iqpOaZglxyXG4gICAgd3Mub25lcnJvciA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgfTtcclxuICAgIC8v6YCj57ea6Zec6ZaJ5pmC6Ke455m8ICBcclxuICAgIHdzLm9uY2xvc2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBpZihnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPT0gXCJnYW1pbmdcIilnYW1lTW9kZWwuV2ViU29ja2V0X1VwRGF0ZVNjb3JlX0d1ZXN0KClcclxuICAgICAgICBlbHNlIGNsZWFySW50ZXJ2YWwoSW50ZXJ2YWwpO1xyXG4gICAgfTtcclxuICAgIHZhciBJbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCl7IFxyXG4gICAgICAgIGlmKHdzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5PUEVOKXtcclxuICAgICAgICAgICAgd3Muc2VuZChKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICBHYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UsXHJcbiAgICAgICAgICAgICAgICAgICAgcm91bmQ6IGdhbWVNb2RlbC5yb3VuZCAtIDEgLFxyXG4gICAgICAgICAgICAgICAgICAgIHNjb3JlOiBnYW1lTW9kZWwuU2NvcmVcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBVc2VyOntcclxuICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOiBnYW1lTW9kZWwuVXNlcl9pZCxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICB9XHJcbiAgICB9LCA1MDApO1xyXG59IFxyXG5cclxuLy/kuLvmjIHkurrlvp5XZWJzb2NrZXTlj5blvpfnjqnlrrbkuK3njY7os4fmlplcclxuZnVuY3Rpb24gV2ViU29ja2V0X051bWJlck9mTG90dGVyeV9Ib3N0KCl7XHJcbiAgICAvL+mAo+e3mumWi+WVn+aZguinuOeZvCB6eFxyXG4gICAgZ2FtZU1vZGVsLk51bWJlck9mTG90dGVyeVdTX0hvc3Qub25vcGVuID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICB9O1xyXG4gICAgLy/mjqXmlLbliLDoqIrmga/mmYLop7jnmbwgIFxyXG4gICAgZ2FtZU1vZGVsLk51bWJlck9mTG90dGVyeVdTX0hvc3Qub25tZXNzYWdlID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgdmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuICAgICAgICB2YXIgb2JqZWN0ID0gSlNPTi5wYXJzZShldmVudC5kYXRhKVxyXG4gICAgICAgIGdhbWVNb2RlbC5wcml6ZV90b3RhbCA9IG9iamVjdC5HYW1lLmFtb3VudCAvL+eNjuWTgee4veaVuOmHj1xyXG4gICAgICAgIGZvcih2YXIgaSA9IDA7aSA8IG9iamVjdC5Qcml6ZVN0YWZmcy5sZW5ndGg7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmKGdhbWVNb2RlbC53aW5uZXJfaWQuaW5jbHVkZXMob2JqZWN0LlByaXplU3RhZmZzW2ldLmlkKSA9PSBmYWxzZSlcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLndpbm5lcl9pZFtpXSA9IG9iamVjdC5Qcml6ZVN0YWZmc1tpXS5pZDsgLy/lvpfnjY7ogIVpZFxyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLndpbm5lcl9uYW1lW2ldID0gb2JqZWN0LlByaXplU3RhZmZzW2ldLm5hbWUgLy/lvpfnjY7kurrlkI3nqLFcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC53aW5uZXJfcGljdHVyZVtpXSA9IG9iamVjdC5Qcml6ZVN0YWZmc1tpXS5hdmF0YXIgLy/lvpfnjY7kurrnhafniYdcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5wcml6ZV9uYW1lX2hvc3RbaV0gPSBvYmplY3QuUHJpemVTdGFmZnNbaV0ucHJpemVfbmFtZS8v542O5ZOB5ZCN56ixXHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwuV2lubmVyRGF0YS5TcGF3bk5ld1dpbm5lcigpO1xyXG4gICAgICAgICAgICB9ICBcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlICE9IFwiZW5kXCIgJiYgZ2FtZU1vZGVsLndpbm5lcl9uYW1lLmxlbmd0aCA+IDAgJiYgZ2FtZU1vZGVsLlNwYXduTmV3ZXN0V2lubmVyID09IHRydWUpIGdhbWVNb2RlbC5XaW5uZXJEYXRhLk5ld2VzdFdpbm5lcigpO1xyXG4gICAgICAgIGVsc2UgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiZW5kXCIpIGdhbWVNb2RlbC5OdW1iZXJPZkxvdHRlcnlXU19Ib3N0LmNsb3NlKCk7XHJcbiAgICB9O1xyXG4gICAgLy/pgKPnt5rpjK/oqqTmmYJcclxuICAgIGdhbWVNb2RlbC5OdW1iZXJPZkxvdHRlcnlXU19Ib3N0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIH07XHJcbiAgICAvL+mAo+e3mumXnOmWieaZguinuOeZvCAgXHJcbiAgICBnYW1lTW9kZWwuTnVtYmVyT2ZMb3R0ZXJ5V1NfSG9zdC5vbmNsb3NlID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwic3RhcnRcIikge1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwuTnVtYmVyT2ZMb3R0ZXJ5V1NfSG9zdCA9IG5ldyBXZWJTb2NrZXQoXCJ3c3M6Ly9cIiArIGdhbWVNb2RlbC5sb2NhbF9JRCArIFwiL3dzL3YxL2dhbWUvd2lubmluZy9zdGFmZj9hY3Rpdml0eV9pZD1cIisgZ2FtZU1vZGVsLmFjdGl2aXR5X2lkICsnJmdhbWVfaWQ9JyArIGdhbWVNb2RlbC5nYW1lX2lkICsgJyZnYW1lPScrIGdhbWVNb2RlbC5HYW1lTmFtZSk7IC8v6ZaL5ZWf5pu05paw5b6X542O5Lq655qEd3NcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9OdW1iZXJPZkxvdHRlcnlfSG9zdCgpXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufSBcclxuXHJcbiAgLy/kuLvmjIHkurrlvp5XZWJzb2NrZXTlj5blvpfnjqnlrrbkuK3njY7os4fmlplcclxuICBmdW5jdGlvbiBXZWJTb2NrZXRfTnVtYmVyT2ZMb3R0ZXJ5X1Njb3JlX0hvc3QoKXtcclxuICAgIC8v6YCj57ea6ZaL5ZWf5pmC6Ke455m8IFxyXG4gICAgZ2FtZU1vZGVsLk51bWJlck9mTG90dGVyeVdTX0hvc3Qub25vcGVuID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICB9O1xyXG4gICAgLy/mjqXmlLbliLDoqIrmga/mmYLop7jnmbwgIFxyXG4gICAgZ2FtZU1vZGVsLk51bWJlck9mTG90dGVyeVdTX0hvc3Qub25tZXNzYWdlID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgdmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuICAgICAgICB2YXIgb2JqZWN0ID0gSlNPTi5wYXJzZShldmVudC5kYXRhKVxyXG4gICAgICAgIGdhbWVNb2RlbC5wcml6ZV90b3RhbCA9IG9iamVjdC5HYW1lLmFtb3VudCAvL+eNjuWTgee4veaVuOmHj1xyXG4gICAgICAgIGdhbWVNb2RlbC5XaW5uZXJEYXRhLkNsZWFyUmFuaygpO1xyXG4gICAgICAgIGZvcih2YXIgaSA9IDA7aSA8IG9iamVjdC5Qcml6ZVN0YWZmcy5sZW5ndGg7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC53aW5uZXJfaWRbaV0gPSBvYmplY3QuUHJpemVTdGFmZnNbaV0uaWQ7IC8v5b6X542O6ICFaWRcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLndpbm5lcl9uYW1lW2ldID0gb2JqZWN0LlByaXplU3RhZmZzW2ldLm5hbWUgLy/lvpfnjY7kurrlkI3nqLFcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLndpbm5lcl9waWN0dXJlW2ldID0gb2JqZWN0LlByaXplU3RhZmZzW2ldLmF2YXRhciAvL+W+l+eNjuS6uueFp+eJh1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwucHJpemVfbmFtZV9ob3N0W2ldID0gb2JqZWN0LlByaXplU3RhZmZzW2ldLnByaXplX25hbWUvL+eNjuWTgeWQjeeosVxyXG4gICAgICAgICAgICBnYW1lTW9kZWwud2lubmVyX3Njb3JlW2ldID0gb2JqZWN0LlByaXplU3RhZmZzW2ldLnNjb3JlLy/lvpfnjY7kurrliIbmlbhcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLldpbm5lckRhdGEuU3Bhd25OZXdXaW5uZXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiY2FsY3VsYXRlXCIpIFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZ2FtZU1vZGVsLldpbm5lckRhdGEuTmV4dFNlbmNlKCk7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5OdW1iZXJPZkxvdHRlcnlXU19Ib3N0LmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8v6YCj57ea6Yyv6Kqk5pmCXHJcbiAgICBnYW1lTW9kZWwuTnVtYmVyT2ZMb3R0ZXJ5V1NfSG9zdC5vbmVycm9yID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICB9O1xyXG4gICAgLy/pgKPnt5rpl5zplonmmYLop7jnmbwgIFxyXG4gICAgZ2FtZU1vZGVsLk51bWJlck9mTG90dGVyeVdTX0hvc3Qub25jbG9zZSA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGlmKGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcImdhbWluZ1wiKSB7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5OdW1iZXJPZkxvdHRlcnlXU19Ib3N0ID0gbmV3IFdlYlNvY2tldChcIndzczovL1wiICsgZ2FtZU1vZGVsLmxvY2FsX0lEICsgXCIvd3MvdjEvZ2FtZS93aW5uaW5nL3N0YWZmP2FjdGl2aXR5X2lkPVwiKyBnYW1lTW9kZWwuYWN0aXZpdHlfaWQgKycmZ2FtZV9pZD0nICsgZ2FtZU1vZGVsLmdhbWVfaWQgKyAnJmdhbWU9JysgZ2FtZU1vZGVsLkdhbWVOYW1lKTsgLy/plovllZ/mm7TmlrDlvpfnjY7kurrnmoR3c1xyXG4gICAgICAgICAgICBnYW1lTW9kZWwuV2lubmVyRGF0YS5XZWJTb2NrZXRfTnVtYmVyT2ZMb3R0ZXJ5X0hvc3QoKVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuXHJcblxyXG4vL+WPluW+l+WLleaFi+WPg+aVuFxyXG5mdW5jdGlvbiBnZXRRdWVyeVZhcmlhYmxlKHZhcmlhYmxlKXtcclxuICAgIHZhciBxdWVyeSA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpO1xyXG4gICAgdmFyIHZhcnMgPSBxdWVyeS5zcGxpdChcIiZcIik7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhcnMubGVuZ3RoOyBpKyspIFxyXG4gICAge1xyXG4gICAgICAgIHZhciBwYWlyID0gdmFyc1tpXS5zcGxpdChcIj1cIik7XHJcbiAgICAgICAgaWYocGFpclswXSA9PSB2YXJpYWJsZSkgcmV0dXJuIHBhaXJbMV07XHJcbiAgICB9XHJcbiAgICByZXR1cm4oXCJcIik7XHJcbn1cclxuXHJcbi8v6JmV55CGbGVMaWZmU3RhdGXlj5blvpdhY3Rpdml0eV9pZOWSjGdhbWVfaWRcclxuZnVuY3Rpb24gSGFuZGxlTGlmZlN0YXRlKCl7XHJcbiAgICBpZiAoZ2FtZU1vZGVsLmFjdGl2aXR5X2lkID09IFwiXCIgfHwgZ2FtZU1vZGVsLmdhbWVfaWQgPT0gXCJcIilcclxuICAgIHtcclxuICAgICAgICBpZiAoZ2FtZU1vZGVsLmxpZmZzdGF0ZS5sZW5ndGggPiAxMykgZ2FtZU1vZGVsLmxpZmZzdGF0ZSA9IGdhbWVNb2RlbC5saWZmc3RhdGUuc3Vic3RyKDE3ICwgZ2FtZU1vZGVsLmxpZmZzdGF0ZS5sZW5ndGgpXHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmIChnYW1lTW9kZWwubGlmZnN0YXRlLmluY2x1ZGVzKFwiJTI2Z2FtZV9pZCUzRFwiKSkgLy8lM2bmmK8/ICAlMjbmmK8mICAlM2TmmK89XHJcbiAgICB7XHJcbiAgICAgICAgdmFyIHBhcmFtcyA9IGdhbWVNb2RlbC5saWZmc3RhdGUuc3BsaXQoXCIlMjZnYW1lX2lkJTNEXCIpXHJcbiAgICAgICAgZ2FtZU1vZGVsLmFjdGl2aXR5X2lkID0gcGFyYW1zWzBdXHJcbiAgICAgICAgaWYocGFyYW1zLmxlbmd0aCA9PSAyKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICBwYXJhbXMgPSBwYXJhbXNbMV0uc3BsaXQoXCIjbXN0X2NoYWxsZW5nZVwiKVxyXG4gICAgICAgICAgIGdhbWVNb2RlbC5nYW1lX2lkID0gcGFyYW1zWzBdXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vL+WPluW+l0Nvb2tpZeizh+aWmVxyXG5mdW5jdGlvbiByZWFkQ29va2llKG5hbWUpIHtcclxuICAgIHZhciBuYW1lRVEgPSBuYW1lICsgXCI9XCI7XHJcbiAgICB2YXIgY2EgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKTsgLy/lj5blvpdjb29raWXkuKbnlKg75Y2A5YiG6ZaL5L6G5YSy5a2Y5ZyoY2FcclxuICAgIGZvcih2YXIgaSA9IDA7aSA8IGNhLmxlbmd0aDtpKyspIHtcclxuICAgICAgICB2YXIgYyA9IGNhW2ldO1xyXG4gICAgICAgIHdoaWxlIChjLmNoYXJBdCgwKSA9PScgJykgYyA9IGMuc3Vic3RyaW5nKDEsYy5sZW5ndGgpO1xyXG4gICAgICAgIGlmIChjLmluZGV4T2YobmFtZUVRKSA9PSAwKSByZXR1cm4gYy5zdWJzdHJpbmcobmFtZUVRLmxlbmd0aCxjLmxlbmd0aCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxufSAgXHJcblxyXG52YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5nYW1lTW9kZWwuYWN0aXZpdHlfaWQgPSAgZ2V0UXVlcnlWYXJpYWJsZShcImFjdGl2aXR5X2lkXCIpXHJcbmdhbWVNb2RlbC5nYW1lX2lkID0gIGdldFF1ZXJ5VmFyaWFibGUoXCJnYW1lX2lkXCIpXHJcbmdhbWVNb2RlbC5saWZmc3RhdGUgPSBnZXRRdWVyeVZhcmlhYmxlKFwibGlmZi5zdGF0ZVwiKVxyXG5nYW1lTW9kZWwuc2Vzc2lvbl9pZCA9IHJlYWRDb29raWUoJ2NoYXRyb29tX3Nlc3Npb24nKVxyXG5IYW5kbGVMaWZmU3RhdGUoKTtcclxuXHJcbiAgXHJcbiAgICBcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Host4_ShowWinner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '950f2YBL+VE0pB4ISoh9tdi', 'Host4_ShowWinner');
// 共用模塊/Host4_ShowWinner.js

"use strict";

var WinnerItem = require('Host4_WinnerRedpaket');

var gameModel = require("Model"); ///主持人結算場景顯示中獎玩家列表js


cc.Class({
  "extends": cc.Component,
  properties: {
    items: {
      "default": null,
      type: cc.Prefab
    },
    round: {
      "default": null,
      type: cc.Label
    },
    WrongAlert: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    this.itemlist = [];
    this.winlist = [];
    this.index = [];
    this.indexcount = 0;
    this.items_parent = cc.find("畫布/中獎列表/view/內容");
    this.AlertText = cc.find("畫布/警告/警告文字");
  },
  start: function start() {
    this.SpawnWinner();
    this.round.string = gameModel.CurrentRound;
  },
  //按下再來一輪鍵
  NextRound: function NextRound() {
    if (gameModel.prize_total == 0) {
      this.AlertText.getComponent(cc.Label).string = "沒有獎品了，無法開啟下一輪";
      this.WrongAlert.active = true;
    } else {
      gameModel.WebSocket_GameStatus_Host("open", 0.1);
      this.scheduleOnce(function () {
        if (gameModel.connet_ws == true) {
          gameModel.GameStatusMessage = "open";
          gameModel.winner_name = [];
          gameModel.prize_name_host = [];
          gameModel.winner_picture = [];
          gameModel.prize_name_host = [];
          gameModel.winner_score = [];
          cc.director.loadScene("Host1_Start" + gameModel.BackGround_Theme);
          gameModel.connet_ws = false;
        } else {
          this.AlertText.getComponent(cc.Label).string = "尚未與伺服器連接";
          this.WrongAlert.active = true;
        }
      }, 0.6);
    }
  },
  CloseAlert: function CloseAlert() {
    this.WrongAlert.active = false;
  },
  //列出得獎人和得到的獎品清單
  SpawnWinner: function SpawnWinner() {
    for (var i = 0; i < gameModel.winner_name.length; i++) {
      var node = cc.instantiate(this.items);
      node.parent = this.items_parent;
      var obj = node.getComponent(WinnerItem); //抓取WinnerItem

      this.itemlist.push(obj);
      this.itemlist[i].updateInfo(i);
    }
  },
  update: function update(dt) {}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxIb3N0NF9TaG93V2lubmVyLmpzIl0sIm5hbWVzIjpbIldpbm5lckl0ZW0iLCJyZXF1aXJlIiwiZ2FtZU1vZGVsIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJpdGVtcyIsInR5cGUiLCJQcmVmYWIiLCJyb3VuZCIsIkxhYmVsIiwiV3JvbmdBbGVydCIsIk5vZGUiLCJvbkxvYWQiLCJpdGVtbGlzdCIsIndpbmxpc3QiLCJpbmRleCIsImluZGV4Y291bnQiLCJpdGVtc19wYXJlbnQiLCJmaW5kIiwiQWxlcnRUZXh0Iiwic3RhcnQiLCJTcGF3bldpbm5lciIsInN0cmluZyIsIkN1cnJlbnRSb3VuZCIsIk5leHRSb3VuZCIsInByaXplX3RvdGFsIiwiZ2V0Q29tcG9uZW50IiwiYWN0aXZlIiwiV2ViU29ja2V0X0dhbWVTdGF0dXNfSG9zdCIsInNjaGVkdWxlT25jZSIsImNvbm5ldF93cyIsIkdhbWVTdGF0dXNNZXNzYWdlIiwid2lubmVyX25hbWUiLCJwcml6ZV9uYW1lX2hvc3QiLCJ3aW5uZXJfcGljdHVyZSIsIndpbm5lcl9zY29yZSIsImRpcmVjdG9yIiwibG9hZFNjZW5lIiwiQmFja0dyb3VuZF9UaGVtZSIsIkNsb3NlQWxlcnQiLCJpIiwibGVuZ3RoIiwibm9kZSIsImluc3RhbnRpYXRlIiwicGFyZW50Iiwib2JqIiwicHVzaCIsInVwZGF0ZUluZm8iLCJ1cGRhdGUiLCJkdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxzQkFBRCxDQUF4Qjs7QUFDQSxJQUFJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXZCLEVBRUE7OztBQUNBRSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsS0FBSyxFQUFFO0FBQ0gsaUJB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QSxVQUFJNEIsR0FBRyxHQUFHSCxJQUFJLENBQUNoQixZQUFMLENBQWtCNUIsVUFBbEIsQ0FBVixDQUhKLENBRzRDOztBQUN4QyxXQUFLZSxRQUFMLENBQWNpQyxJQUFkLENBQW1CRCxHQUFuQjtBQUNBLFdBQUtoQyxRQUFMLENBQWMyQixDQUFkLEVBQWlCTyxVQUFqQixDQUE0QlAsQ0FBNUI7QUFDSDtBQUNKLEdBNUVJO0FBOEVMUSxFQUFBQSxNQTlFSyxrQkE4RUdDLEVBOUVILEVBOEVPLENBQUU7QUE5RVQsQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFdpbm5lckl0ZW0gPSByZXF1aXJlKCdIb3N0NF9XaW5uZXJSZWRwYWtldCcpXHJcbnZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcblxyXG4vLy/kuLvmjIHkurrntZDnrpfloLTmma/poa/npLrkuK3njY7njqnlrrbliJfooahqc1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIGl0ZW1zOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLlByZWZhYlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcm91bmQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgICAgIFdyb25nQWxlcnQ6e1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTm9kZVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5pdGVtbGlzdD1bXTtcclxuICAgICAgICB0aGlzLndpbmxpc3Q9W107XHJcbiAgICAgICAgdGhpcy5pbmRleCA9IFtdO1xyXG4gICAgICAgIHRoaXMuaW5kZXhjb3VudCA9IDA7XHJcbiAgICAgICAgdGhpcy5pdGVtc19wYXJlbnQgPSBjYy5maW5kKFwi55Wr5biDL+S4reeNjuWIl+ihqC92aWV3L+WFp+WuuVwiKTtcclxuICAgICAgICB0aGlzLkFsZXJ0VGV4dCA9IGNjLmZpbmQoXCLnlavluIMv6K2m5ZGKL+itpuWRiuaWh+Wtl1wiKSBcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIHRoaXMuU3Bhd25XaW5uZXIoKTtcclxuICAgICAgICB0aGlzLnJvdW5kLnN0cmluZyA9IGdhbWVNb2RlbC5DdXJyZW50Um91bmQ7IFxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgLy/mjInkuIvlho3kvobkuIDovKrpjbVcclxuICAgIE5leHRSb3VuZCgpe1xyXG4gICAgICBpZihnYW1lTW9kZWwucHJpemVfdG90YWwgPT0gMCkgXHJcbiAgICAgIHtcclxuICAgICAgICB0aGlzLkFsZXJ0VGV4dC5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IFwi5rKS5pyJ542O5ZOB5LqG77yM54Sh5rOV6ZaL5ZWf5LiL5LiA6LyqXCI7XHJcbiAgICAgICAgdGhpcy5Xcm9uZ0FsZXJ0LmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9HYW1lU3RhdHVzX0hvc3QoXCJvcGVuXCIsMC4xKVxyXG4gICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uKCkgeyBcclxuICAgICAgICAgICAgaWYoZ2FtZU1vZGVsLmNvbm5ldF93cyA9PSB0cnVlKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwuR2FtZVN0YXR1c01lc3NhZ2UgPSBcIm9wZW5cIlxyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLndpbm5lcl9uYW1lID0gW107XHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwucHJpemVfbmFtZV9ob3N0ID0gW107XHJcbiAgICAgICAgICAgICAgICBnYW1lTW9kZWwud2lubmVyX3BpY3R1cmUgPSBbXTtcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5wcml6ZV9uYW1lX2hvc3QgPSBbXTtcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC53aW5uZXJfc2NvcmUgPSBbXTtcclxuICAgICAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIkhvc3QxX1N0YXJ0XCIrIGdhbWVNb2RlbC5CYWNrR3JvdW5kX1RoZW1lKTtcclxuICAgICAgICAgICAgICAgIGdhbWVNb2RlbC5jb25uZXRfd3MgPSBmYWxzZVxyXG4gICAgICAgICAgICB9ICAgICBcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkFsZXJ0VGV4dC5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IFwi5bCa5pyq6IiH5Ly65pyN5Zmo6YCj5o6lXCI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLldyb25nQWxlcnQuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDAuNik7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgQ2xvc2VBbGVydCgpe1xyXG4gICAgICAgIHRoaXMuV3JvbmdBbGVydC5hY3RpdmUgPSBmYWxzZTtcclxuICAgIH0sXHJcblxyXG4gICAgLy/liJflh7rlvpfnjY7kurrlkozlvpfliLDnmoTnjY7lk4HmuIXllq5cclxuICAgIFNwYXduV2lubmVyKCl7XHJcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGdhbWVNb2RlbC53aW5uZXJfbmFtZS5sZW5ndGg7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhciBub2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy5pdGVtcyk7XHJcbiAgICAgICAgICAgIG5vZGUucGFyZW50ID0gdGhpcy5pdGVtc19wYXJlbnQ7XHJcbiAgICAgICAgICAgIHZhciBvYmogPSBub2RlLmdldENvbXBvbmVudChXaW5uZXJJdGVtKTsvL+aKk+WPlldpbm5lckl0ZW1cclxuICAgICAgICAgICAgdGhpcy5pdGVtbGlzdC5wdXNoKG9iaik7XHJcbiAgICAgICAgICAgIHRoaXMuaXRlbWxpc3RbaV0udXBkYXRlSW5mbyhpKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTsiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Skin.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cd804C+XgNEHYsQUS337SkZ', 'Skin');
// 共用模塊/Skin.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {
    SkinType: {
      "default": null,
      type: cc.Sprite
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {},
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxTa2luLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIlNraW5UeXBlIiwidHlwZSIsIlNwcml0ZSIsIm9uTG9hZCIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBRUFDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxRQUFRLEVBQUM7QUFDTCxpQkFBUSxJQURIO0FBRUxDLE1BQUFBLElBQUksRUFBQ0wsRUFBRSxDQUFDTTtBQUZIO0FBREQsR0FIUDtBQVVMO0FBRUFDLEVBQUFBLE1BWkssb0JBWUssQ0FDVCxDQWJJO0FBZUxDLEVBQUFBLEtBZkssbUJBZUksQ0FFUixDQWpCSSxDQW1CTDs7QUFuQkssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgU2tpblR5cGU6e1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuU3ByaXRlXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/3_whack_a_mole/遊戲模塊/Guest_MouseManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '25315n6hs9I2Zo5QX1kiHB3', 'Guest_MouseManager');
// 3_whack_a_mole/遊戲模塊/Guest_MouseManager.js

"use strict";

var gameModel = require("Model"); //全域變數gameModel 不須加this就能提取


cc.Class({
  "extends": cc.Component,
  properties: {
    isLive: false,
    //代表老鼠是否被擊暈
    tag: null,
    dead: {
      "default": null,
      type: cc.SpriteFrame
    },
    bomb: {
      "default": null,
      type: cc.SpriteFrame
    },
    AddPoint: {
      "default": null,
      type: cc.Node
    },
    MinusPoint: {
      "default": null,
      type: cc.Node
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.HolesParent = cc.find("畫布/場景/地鼠洞");
    this.GameManager = cc.find("畫布").getComponent("Guest4_Whack_a_mole");
    this.GameScore = cc.find("畫布/場景/得分框/分數");
  },
  start: function start() {
    this.node.on("touchstart", this.Hit, this);
    this.StartPosition = this.node.position;
    this.HitAniTarget = null;
    this.delytime = 0;
    this.AddPoint_OriPos = this.AddPoint.position;
    this.MinusPoint_OriPos = this.MinusPoint.position;
  },
  Hit: function Hit() {
    if (this.isLive == true) {
      this.mouseani.stop();
      this.isLive = false;
      this.node.setPosition(-462.525, 414.31, 0);
      this.node.getComponent(cc.Sprite).spriteFrame = this.tag == 2 ? this.bomb : this.dead;

      if (this.tag < 2) //執行老鼠的算分函數刷新當前遊戲分數及打到動畫
        {
          if (this.tag == 0) {
            this.AddPoint.getComponent(cc.Label).string = 1;
            gameModel.Score += 1;
          } else {
            this.AddPoint.getComponent(cc.Label).string = 3;
            gameModel.Score += 3;
          }

          this.AddPoint.active = true;
          this.HitAniTarget = this.AddPoint;
        } else if (this.tag == 2) {
        gameModel.Score -= 1;
        gameModel.Score = gameModel.Score < 0 ? 0 : gameModel.Score; //判斷當前分數是否低於0，如果低於零則重置爲0

        this.MinusPoint.active = true;
        this.HitAniTarget = this.MinusPoint;
      }

      this.HitAnimation();
      this.GameScore.getComponent(cc.Label).string = gameModel.Score;
      this.scheduleOnce(function () {
        this.HitAniTarget.opacity = 255;
        this.AddPoint.active = false;
        this.AddPoint.position = this.AddPoint_OriPos;
        this.MinusPoint.active = false;
        this.MinusPoint.position = this.MinusPoint_OriPos;
        this.ResetHole();
      }, 0.5);
    }
  },
  GetData: function GetData(randomNodeIndex, randomSpriteFrameIndex) {
    this.randomNodeIndex = randomNodeIndex;
    if (randomSpriteFrameIndex == 2) this.delytime = 1;else this.delytime = 0.5;
  },
  //老鼠出現到消失動畫
  MouseAnimation: function MouseAnimation() {
    var _this = this;

    this.mouseani = cc.tween(this.node).by(0.5, {
      position: cc.v2(0, 520)
    }).delay(this.delytime).by(0.5, {
      position: cc.v2(0, -510)
    }).call(function () {
      _this.ResetHole();
    }).start();
  },
  //分數往上飄動畫
  HitAnimation: function HitAnimation() {
    this.hitani = cc.tween(this.HitAniTarget).to(0.5, {
      opacity: 0,
      position: cc.v2(this.HitAniTarget.position.x, 40)
    }).start();
  },
  ResetHole: function ResetHole() {
    this.node.position = this.StartPosition;
    this.GameManager.mouseIndexArr.splice(this.GameManager.mouseIndexArr.indexOf(this.randomNodeIndex, 0), 1); //已產生老鼠的陣列中，刪除目前資料的陣列位置
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/備份/HelloWorld.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1eb9e6WzEpPLpaae3N7ZWEa', 'HelloWorld');
// 共用模塊/備份/HelloWorld.js

"use strict";

var GoEasy = require('./goeasy-2.0.12.min.js');

window.Global = {
  goEasy: null
}, cc.Class({
  "extends": cc.Component,
  properties: {
    editbox: cc.EditBox,
    goEasy: null,
    content: ""
  },
  onLoad: function onLoad() {
    // 初始化GoEasy并完成订阅channel
    this.initGoEasy();
    this.connectGoEasy();
    this.subscribe();
  },
  start: function start() {},
  initGoEasy: function initGoEasy() {
    // 初始化GoEasy
    var self = this;
    Global.goEasy = GoEasy.getInstance({
      host: 'singapore.goeasy.io',
      //应用所在的区域地址: 【hangzhou.goeasy.io |singapore.goeasy.io】
      appkey: "BC-64f4ade695d54cdcbcd9c4413fd94e1f",
      //替换为您的common appkey
      modules: ["pubsub"] //PUBSUB:对应常规的websocket功能,IM:对应IM聊天功能

    });
  },
  connectGoEasy: function connectGoEasy() {
    var self = this;
    Global.goEasy.connect({
      onSuccess: function onSuccess() {
        //连接成功
        var message = {
          content: "连接成功"
        };
        console.log("连接成功");
        self.updateContent(message);
      },
      onFailed: function onFailed(error) {
        //连接失败
        var message = {
          content: "Failed to connect GoEasy, code:" + error.code + ",error:" + error.content
        }; // console.log("连接失敗");

        self.updateContent(message);
      },
      onProgress: function onProgress(attempts) {
        //连接或自动重连中
        var message = {
          content: "连接中" + attempts
        };
        console.log("连接中");
        self.updateContent(message);
      }
    });
  },
  updateContent: function updateContent(message) {
    // 更新内容到页面
    var time = this.getCurrentTime();
    var messageContent = time + " " + message.content;
    console.log(messageContent); // 动态设置item
    // var scrollViewNode = this.node.getChildByName("scrollContent");
    // var contentNode = scrollViewNode.getComponent(cc.ScrollView);
    // var newNode = new cc.Node();
    // newNode.name = "item";
    // // 添加Label节点
    // let labelNode = newNode.addComponent(cc.Label);
    // // 设置颜色
    // labelNode.node.color = new cc.color(51, 51, 51);
    // labelNode.node.width = 210;
    // labelNode.name = "label";
    // labelNode.string = messageContent;
    // labelNode.fontSize = 16;
    // labelNode.lineHeight = 16;
    // // 宽度不够自动换行显示
    // labelNode.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
    // let item = cc.instantiate(newNode);
    // item.parent = contentNode.content;
  },
  subscribe: function subscribe() {
    // 订阅channel
    var self = this;
    Global.goEasy.pubsub.subscribe({
      channel: "my_channel",
      //替换为您自己的channel
      onMessage: function onMessage(message) {
        self.updateContent(message);
        cc.log("收到消息");
      },
      onSuccess: function onSuccess() {
        var message = {
          content: "Channel订阅成功。"
        };
        self.updateContent(message);
      },
      onFailed: function onFailed(error) {
        var message = {
          content: "errorCode:" + error.code + ",错误信息:" + error.content
        };
        self.updateContent(message);
      }
    });
  },
  publish: function publish() {
    if (this.content != "") {
      // 发送消息到channel中
      Global.goEasy.pubsub.publish({
        channel: "my_channel",
        //替换为您自己的channel
        message: this.content,
        //替换为您想要发送的消息内容
        onSuccess: function onSuccess() {
          console.log("消息发布成功。");
        },
        onFailed: function onFailed(error) {
          console.log("消息发送失败，错误编码：" + error.code + " 错误信息：" + error.content);
        }
      });
    }

    this.editbox.string = "";
  },
  onChanged: function onChanged(event, editbox, customEventData) {
    // 监听输入框变化
    this.content = event;
    this.editbox = editbox;
  },
  getCurrentTime: function getCurrentTime() {
    var date = new Date();
    var hours = date.getHours();
    var min = date.getMinutes();
    var time = hours + ":" + min;
    return time;
  },
  update: function update(dt) {// called every frame
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/3_whack_a_mole/遊戲模塊/Host_MouseManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e23b3EXmPNLnrwxcZ/ZKoiT', 'Host_MouseManager');
// 3_whack_a_mole/遊戲模塊/Host_MouseManager.js

"use strict";

var MouseManager = require("Guest_MouseManager");

cc.Class({
  "extends": MouseManager,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.HolesParent = cc.find("畫布/場景/地鼠洞");
    this.GameManager = cc.find("畫布").getComponent("Host_RandomSpawn");
  },
  start: function start() {
    this.StartPosition = this.node.position;
    this.HitAniTarget = null;
    this.delytime = 0;
    this.AddPoint_OriPos = this.AddPoint.position;
    this.MinusPoint_OriPos = this.MinusPoint.position;
  },
  Hit: function Hit(hammer) {
    if (this.isLive == true) {
      this.mouseani.stop();
      this.isLive = false;
      this.node.setPosition(0, -185.826, 0);
      this.node.getComponent(cc.Sprite).spriteFrame = this.tag == 2 ? this.bomb : this.dead;
      hammer.active = true;
      this.scheduleOnce(function () {
        hammer.active = false;
      }, 0.3); //執行老鼠的算分函數及打到動畫

      if (this.tag < 2) {
        this.AddPoint.getComponent(cc.Label).string = this.tag == 0 ? 1 : 3;
        this.AddPoint.active = true;
        this.HitAniTarget = this.AddPoint;
      } else if (this.tag == 2) {
        this.MinusPoint.active = true;
        this.HitAniTarget = this.MinusPoint;
      }

      this.HitAnimation();
      this.scheduleOnce(function () {
        this.HitAniTarget.opacity = 255;
        this.AddPoint.active = false;
        this.AddPoint.position = this.AddPoint_OriPos;
        this.MinusPoint.active = false;
        this.MinusPoint.position = this.MinusPoint_OriPos;
        this.ResetHole();
      }, 0.5);
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcM193aGFja19hX21vbGVcXOmBiuaIsuaooeWhilxcSG9zdF9Nb3VzZU1hbmFnZXIuanMiXSwibmFtZXMiOlsiTW91c2VNYW5hZ2VyIiwicmVxdWlyZSIsImNjIiwiQ2xhc3MiLCJwcm9wZXJ0aWVzIiwib25Mb2FkIiwiSG9sZXNQYXJlbnQiLCJmaW5kIiwiR2FtZU1hbmFnZXIiLCJnZXRDb21wb25lbnQiLCJzdGFydCIsIlN0YXJ0UG9zaXRpb24iLCJub2RlIiwicG9zaXRpb24iLCJIaXRBbmlUYXJnZXQiLCJkZWx5dGltZSIsIkFkZFBvaW50X09yaVBvcyIsIkFkZFBvaW50IiwiTWludXNQb2ludF9PcmlQb3MiLCJNaW51c1BvaW50IiwiSGl0IiwiaGFtbWVyIiwiaXNMaXZlIiwibW91c2VhbmkiLCJzdG9wIiwic2V0UG9zaXRpb24iLCJTcHJpdGUiLCJzcHJpdGVGcmFtZSIsInRhZyIsImJvbWIiLCJkZWFkIiwiYWN0aXZlIiwic2NoZWR1bGVPbmNlIiwiTGFiZWwiLCJzdHJpbmciLCJIaXRBbmltYXRpb24iLCJvcGFjaXR5IiwiUmVzZXRIb2xlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFlBQVksR0FBR0MsT0FBTyxDQUFDLG9CQUFELENBQTFCOztBQUVBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNILFlBREo7QUFHTEksRUFBQUEsVUFBVSxFQUFFLEVBSFA7QUFPTDtBQUVBQyxFQUFBQSxNQVRLLG9CQVNLO0FBQ04sU0FBS0MsV0FBTCxHQUFtQkosRUFBRSxDQUFDSyxJQUFILENBQVEsV0FBUixDQUFuQjtBQUNBLFNBQUtDLFdBQUwsR0FBbUJOLEVBQUUsQ0FBQ0ssSUFBSCxDQUFRLElBQVIsRUFBY0UsWUFBZCxDQUEyQixrQkFBM0IsQ0FBbkI7QUFDSCxHQVpJO0FBY0xDLEVBQUFBLEtBZEssbUJBY0k7QUFDTCxTQUFLQyxhQUFMLEdBQXFCLEtBQUtDLElBQUwsQ0FBVUMsUUFBL0I7QUFDQSxTQUFLQyxZQUFMLEdBQW9CLElBQXBCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixDQUFoQjtBQUNBLFNBQUtDLGVBQUwsR0FBdUIsS0FBS0MsUUFBTCxDQUFjSixRQUFyQztBQUNBLFNBQUtLLGlCQUFMLEdBQXlCLEtBQUtDLFVBQUwsQ0FBZ0JOLFFBQXpDO0FBQ0gsR0FwQkk7QUFzQkxPLEVBQUFBLEdBdEJLLGVBc0JEQyxNQXRCQyxFQXNCTztBQUNSLFFBQUcsS0FBS0MsTUFBTCxJQUFlLElBQWxCLEVBQ0E7QUFDRyxXQUFLQyxRQUFMLENBQWNDLElBQWQ7QUFDQSxXQUFLRixNQUFMLEdBQWMsS0FBZDtBQUNBLFdBQUtWLElBQUwsQ0FBVWEsV0FBVixDQUFzQixDQUF0QixFQUF5QixDQUFDLE9BQTFCLEVBQW1DLENBQW5DO0FBQ0EsV0FBS2IsSUFBTCxDQUFVSCxZQUFWLENBQXVCUCxFQUFFLENBQUN3QixNQUExQixFQUFrQ0MsV0FBbEMsR0FBZ0QsS0FBS0MsR0FBTCxJQUFZLENBQVosR0FBZ0IsS0FBS0MsSUFBckIsR0FBNEIsS0FBS0MsSUFBakY7QUFDQVQsTUFBQUEsTUFBTSxDQUFDVSxNQUFQLEdBQWdCLElBQWhCO0FBQ0EsV0FBS0MsWUFBTCxDQUFrQixZQUFXO0FBQUNYLFFBQUFBLE1BQU0sQ0FBQ1UsTUFBUCxHQUFnQixLQUFoQjtBQUFzQixPQUFwRCxFQUFzRCxHQUF0RCxFQU5ILENBT0c7O0FBQ0EsVUFBRyxLQUFLSCxHQUFMLEdBQVcsQ0FBZCxFQUNBO0FBQ0csYUFBS1gsUUFBTCxDQUFjUixZQUFkLENBQTJCUCxFQUFFLENBQUMrQixLQUE5QixFQUFxQ0MsTUFBckMsR0FBOEMsS0FBS04sR0FBTCxJQUFZLENBQVosR0FBZ0IsQ0FBaEIsR0FBb0IsQ0FBbEU7QUFDQSxhQUFLWCxRQUFMLENBQWNjLE1BQWQsR0FBdUIsSUFBdkI7QUFDQSxhQUFLakIsWUFBTCxHQUFvQixLQUFLRyxRQUF6QjtBQUNGLE9BTEQsTUFNSyxJQUFJLEtBQUtXLEdBQUwsSUFBWSxDQUFoQixFQUNMO0FBQ0UsYUFBS1QsVUFBTCxDQUFnQlksTUFBaEIsR0FBeUIsSUFBekI7QUFDQSxhQUFLakIsWUFBTCxHQUFvQixLQUFLSyxVQUF6QjtBQUNEOztBQUNELFdBQUtnQixZQUFMO0FBQ0EsV0FBS0gsWUFBTCxDQUFrQixZQUFXO0FBQzNCLGFBQUtsQixZQUFMLENBQWtCc0IsT0FBbEIsR0FBNEIsR0FBNUI7QUFDQSxhQUFLbkIsUUFBTCxDQUFjYyxNQUFkLEdBQXVCLEtBQXZCO0FBQ0EsYUFBS2QsUUFBTCxDQUFjSixRQUFkLEdBQXlCLEtBQUtHLGVBQTlCO0FBQ0EsYUFBS0csVUFBTCxDQUFnQlksTUFBaEIsR0FBeUIsS0FBekI7QUFDQSxhQUFLWixVQUFMLENBQWdCTixRQUFoQixHQUEyQixLQUFLSyxpQkFBaEM7QUFDQSxhQUFLbUIsU0FBTDtBQUNELE9BUEQsRUFPRyxHQVBIO0FBUUY7QUFDSixHQXJESSxDQXNETDs7QUF0REssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIE1vdXNlTWFuYWdlciA9IHJlcXVpcmUoXCJHdWVzdF9Nb3VzZU1hbmFnZXJcIik7XHJcblxyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBNb3VzZU1hbmFnZXIsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIHRoaXMuSG9sZXNQYXJlbnQgPSBjYy5maW5kKFwi55Wr5biDL+WgtOaZry/lnLDpvKDmtJ5cIilcclxuICAgICAgICB0aGlzLkdhbWVNYW5hZ2VyID0gY2MuZmluZChcIueVq+W4g1wiKS5nZXRDb21wb25lbnQoXCJIb3N0X1JhbmRvbVNwYXduXCIpXHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICB0aGlzLlN0YXJ0UG9zaXRpb24gPSB0aGlzLm5vZGUucG9zaXRpb247XHJcbiAgICAgICAgdGhpcy5IaXRBbmlUYXJnZXQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZGVseXRpbWUgPSAwXHJcbiAgICAgICAgdGhpcy5BZGRQb2ludF9PcmlQb3MgPSB0aGlzLkFkZFBvaW50LnBvc2l0aW9uO1xyXG4gICAgICAgIHRoaXMuTWludXNQb2ludF9PcmlQb3MgPSB0aGlzLk1pbnVzUG9pbnQucG9zaXRpb247XHJcbiAgICB9LFxyXG5cclxuICAgIEhpdChoYW1tZXIpIHtcclxuICAgICAgICBpZih0aGlzLmlzTGl2ZSA9PSB0cnVlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICB0aGlzLm1vdXNlYW5pLnN0b3AoKTtcclxuICAgICAgICAgICB0aGlzLmlzTGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgIHRoaXMubm9kZS5zZXRQb3NpdGlvbigwLCAtMTg1LjgyNiwgMClcclxuICAgICAgICAgICB0aGlzLm5vZGUuZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWUgPSB0aGlzLnRhZyA9PSAyID8gdGhpcy5ib21iIDogdGhpcy5kZWFkICBcclxuICAgICAgICAgICBoYW1tZXIuYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uKCkge2hhbW1lci5hY3RpdmUgPSBmYWxzZX0sIDAuMyk7XHJcbiAgICAgICAgICAgLy/ln7fooYzogIHpvKDnmoTnrpfliIblh73mlbjlj4rmiZPliLDli5XnlatcclxuICAgICAgICAgICBpZih0aGlzLnRhZyA8IDIpIFxyXG4gICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB0aGlzLkFkZFBvaW50LmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gdGhpcy50YWcgPT0gMCA/IDEgOiAzXHJcbiAgICAgICAgICAgICAgdGhpcy5BZGRQb2ludC5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIHRoaXMuSGl0QW5pVGFyZ2V0ID0gdGhpcy5BZGRQb2ludDtcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgICAgZWxzZSBpZiAodGhpcy50YWcgPT0gMikgXHJcbiAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgdGhpcy5NaW51c1BvaW50LmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICB0aGlzLkhpdEFuaVRhcmdldCA9IHRoaXMuTWludXNQb2ludDtcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgICAgdGhpcy5IaXRBbmltYXRpb24oKVxyXG4gICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKGZ1bmN0aW9uKCkgeyBcclxuICAgICAgICAgICAgIHRoaXMuSGl0QW5pVGFyZ2V0Lm9wYWNpdHkgPSAyNTVcclxuICAgICAgICAgICAgIHRoaXMuQWRkUG9pbnQuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICB0aGlzLkFkZFBvaW50LnBvc2l0aW9uID0gdGhpcy5BZGRQb2ludF9PcmlQb3NcclxuICAgICAgICAgICAgIHRoaXMuTWludXNQb2ludC5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgIHRoaXMuTWludXNQb2ludC5wb3NpdGlvbiA9IHRoaXMuTWludXNQb2ludF9PcmlQb3NcclxuICAgICAgICAgICAgIHRoaXMuUmVzZXRIb2xlKCk7XHJcbiAgICAgICAgICAgfSwgMC41KTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/備份/qrcode.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '070a67bS7tJQIi6TBXapnIu', 'qrcode');
// 共用模塊/備份/qrcode.js

"use strict";

///QRC插件
//---------------------------------------------------------------------
// QRCode for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//   http://www.opensource.org/licenses/mit-license.php
//
// The word "QR Code" is registered trademark of 
// DENSO WAVE INCORPORATED
//   http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------
//---------------------------------------------------------------------
// QR8bitByte
//---------------------------------------------------------------------
function QR8bitByte(data) {
  this.mode = QRMode.MODE_8BIT_BYTE;
  this.data = data;
}

QR8bitByte.prototype = {
  getLength: function getLength(buffer) {
    return this.data.length;
  },
  write: function write(buffer) {
    for (var i = 0; i < this.data.length; i++) {
      // not JIS ...
      buffer.put(this.data.charCodeAt(i), 8);
    }
  }
}; //---------------------------------------------------------------------
// QRCode
//---------------------------------------------------------------------

function QRCode(typeNumber, errorCorrectLevel) {
  this.typeNumber = typeNumber;
  this.errorCorrectLevel = errorCorrectLevel;
  this.modules = null;
  this.moduleCount = 0;
  this.dataCache = null;
  this.dataList = new Array();
}

QRCode.prototype = {
  addData: function addData(data) {
    var newData = new QR8bitByte(data);
    this.dataList.push(newData);
    this.dataCache = null;
  },
  isDark: function isDark(row, col) {
    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {
      throw new Error(row + "," + col);
    }

    return this.modules[row][col];
  },
  getModuleCount: function getModuleCount() {
    return this.moduleCount;
  },
  make: function make() {
    // Calculate automatically typeNumber if provided is < 1
    if (this.typeNumber < 1) {
      var typeNumber = 1;

      for (typeNumber = 1; typeNumber < 40; typeNumber++) {
        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);
        var buffer = new QRBitBuffer();
        var totalDataCount = 0;

        for (var i = 0; i < rsBlocks.length; i++) {
          totalDataCount += rsBlocks[i].dataCount;
        }

        for (var i = 0; i < this.dataList.length; i++) {
          var data = this.dataList[i];
          buffer.put(data.mode, 4);
          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));
          data.write(buffer);
        }

        if (buffer.getLengthInBits() <= totalDataCount * 8) break;
      }

      this.typeNumber = typeNumber;
    }

    this.makeImpl(false, this.getBestMaskPattern());
  },
  makeImpl: function makeImpl(test, maskPattern) {
    this.moduleCount = this.typeNumber * 4 + 17;
    this.modules = new Array(this.moduleCount);

    for (var row = 0; row < this.moduleCount; row++) {
      this.modules[row] = new Array(this.moduleCount);

      for (var col = 0; col < this.moduleCount; col++) {
        this.modules[row][col] = null; //(col + row) % 3;
      }
    }

    this.setupPositionProbePattern(0, 0);
    this.setupPositionProbePattern(this.moduleCount - 7, 0);
    this.setupPositionProbePattern(0, this.moduleCount - 7);
    this.setupPositionAdjustPattern();
    this.setupTimingPattern();
    this.setupTypeInfo(test, maskPattern);

    if (this.typeNumber >= 7) {
      this.setupTypeNumber(test);
    }

    if (this.dataCache == null) {
      this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);
    }

    this.mapData(this.dataCache, maskPattern);
  },
  setupPositionProbePattern: function setupPositionProbePattern(row, col) {
    for (var r = -1; r <= 7; r++) {
      if (row + r <= -1 || this.moduleCount <= row + r) continue;

      for (var c = -1; c <= 7; c++) {
        if (col + c <= -1 || this.moduleCount <= col + c) continue;

        if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
          this.modules[row + r][col + c] = true;
        } else {
          this.modules[row + r][col + c] = false;
        }
      }
    }
  },
  getBestMaskPattern: function getBestMaskPattern() {
    var minLostPoint = 0;
    var pattern = 0;

    for (var i = 0; i < 8; i++) {
      this.makeImpl(true, i);
      var lostPoint = QRUtil.getLostPoint(this);

      if (i == 0 || minLostPoint > lostPoint) {
        minLostPoint = lostPoint;
        pattern = i;
      }
    }

    return pattern;
  },
  createMovieClip: function createMovieClip(target_mc, instance_name, depth) {
    var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);
    var cs = 1;
    this.make();

    for (var row = 0; row < this.modules.length; row++) {
      var y = row * cs;

      for (var col = 0; col < this.modules[row].length; col++) {
        var x = col * cs;
        var dark = this.modules[row][col];

        if (dark) {
          qr_mc.beginFill(0, 100);
          qr_mc.moveTo(x, y);
          qr_mc.lineTo(x + cs, y);
          qr_mc.lineTo(x + cs, y + cs);
          qr_mc.lineTo(x, y + cs);
          qr_mc.endFill();
        }
      }
    }

    return qr_mc;
  },
  setupTimingPattern: function setupTimingPattern() {
    for (var r = 8; r < this.moduleCount - 8; r++) {
      if (this.modules[r][6] != null) {
        continue;
      }

      this.modules[r][6] = r % 2 == 0;
    }

    for (var c = 8; c < this.moduleCount - 8; c++) {
      if (this.modules[6][c] != null) {
        continue;
      }

      this.modules[6][c] = c % 2 == 0;
    }
  },
  setupPositionAdjustPattern: function setupPositionAdjustPattern() {
    var pos = QRUtil.getPatternPosition(this.typeNumber);

    for (var i = 0; i < pos.length; i++) {
      for (var j = 0; j < pos.length; j++) {
        var row = pos[i];
        var col = pos[j];

        if (this.modules[row][col] != null) {
          continue;
        }

        for (var r = -2; r <= 2; r++) {
          for (var c = -2; c <= 2; c++) {
            if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
              this.modules[row + r][col + c] = true;
            } else {
              this.modules[row + r][col + c] = false;
            }
          }
        }
      }
    }
  },
  setupTypeNumber: function setupTypeNumber(test) {
    var bits = QRUtil.getBCHTypeNumber(this.typeNumber);

    for (var i = 0; i < 18; i++) {
      var mod = !test && (bits >> i & 1) == 1;
      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
    }

    for (var i = 0; i < 18; i++) {
      var mod = !test && (bits >> i & 1) == 1;
      this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
    }
  },
  setupTypeInfo: function setupTypeInfo(test, maskPattern) {
    var data = this.errorCorrectLevel << 3 | maskPattern;
    var bits = QRUtil.getBCHTypeInfo(data); // vertical		

    for (var i = 0; i < 15; i++) {
      var mod = !test && (bits >> i & 1) == 1;

      if (i < 6) {
        this.modules[i][8] = mod;
      } else if (i < 8) {
        this.modules[i + 1][8] = mod;
      } else {
        this.modules[this.moduleCount - 15 + i][8] = mod;
      }
    } // horizontal


    for (var i = 0; i < 15; i++) {
      var mod = !test && (bits >> i & 1) == 1;

      if (i < 8) {
        this.modules[8][this.moduleCount - i - 1] = mod;
      } else if (i < 9) {
        this.modules[8][15 - i - 1 + 1] = mod;
      } else {
        this.modules[8][15 - i - 1] = mod;
      }
    } // fixed module


    this.modules[this.moduleCount - 8][8] = !test;
  },
  mapData: function mapData(data, maskPattern) {
    var inc = -1;
    var row = this.moduleCount - 1;
    var bitIndex = 7;
    var byteIndex = 0;

    for (var col = this.moduleCount - 1; col > 0; col -= 2) {
      if (col == 6) col--;

      while (true) {
        for (var c = 0; c < 2; c++) {
          if (this.modules[row][col - c] == null) {
            var dark = false;

            if (byteIndex < data.length) {
              dark = (data[byteIndex] >>> bitIndex & 1) == 1;
            }

            var mask = QRUtil.getMask(maskPattern, row, col - c);

            if (mask) {
              dark = !dark;
            }

            this.modules[row][col - c] = dark;
            bitIndex--;

            if (bitIndex == -1) {
              byteIndex++;
              bitIndex = 7;
            }
          }
        }

        row += inc;

        if (row < 0 || this.moduleCount <= row) {
          row -= inc;
          inc = -inc;
          break;
        }
      }
    }
  }
};
QRCode.PAD0 = 0xEC;
QRCode.PAD1 = 0x11;

QRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {
  var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
  var buffer = new QRBitBuffer();

  for (var i = 0; i < dataList.length; i++) {
    var data = dataList[i];
    buffer.put(data.mode, 4);
    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));
    data.write(buffer);
  } // calc num max data.


  var totalDataCount = 0;

  for (var i = 0; i < rsBlocks.length; i++) {
    totalDataCount += rsBlocks[i].dataCount;
  }

  if (buffer.getLengthInBits() > totalDataCount * 8) {
    throw new Error("code length overflow. (" + buffer.getLengthInBits() + ">" + totalDataCount * 8 + ")");
  } // end code


  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
    buffer.put(0, 4);
  } // padding


  while (buffer.getLengthInBits() % 8 != 0) {
    buffer.putBit(false);
  } // padding


  while (true) {
    if (buffer.getLengthInBits() >= totalDataCount * 8) {
      break;
    }

    buffer.put(QRCode.PAD0, 8);

    if (buffer.getLengthInBits() >= totalDataCount * 8) {
      break;
    }

    buffer.put(QRCode.PAD1, 8);
  }

  return QRCode.createBytes(buffer, rsBlocks);
};

QRCode.createBytes = function (buffer, rsBlocks) {
  var offset = 0;
  var maxDcCount = 0;
  var maxEcCount = 0;
  var dcdata = new Array(rsBlocks.length);
  var ecdata = new Array(rsBlocks.length);

  for (var r = 0; r < rsBlocks.length; r++) {
    var dcCount = rsBlocks[r].dataCount;
    var ecCount = rsBlocks[r].totalCount - dcCount;
    maxDcCount = Math.max(maxDcCount, dcCount);
    maxEcCount = Math.max(maxEcCount, ecCount);
    dcdata[r] = new Array(dcCount);

    for (var i = 0; i < dcdata[r].length; i++) {
      dcdata[r][i] = 0xff & buffer.buffer[i + offset];
    }

    offset += dcCount;
    var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
    var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);
    var modPoly = rawPoly.mod(rsPoly);
    ecdata[r] = new Array(rsPoly.getLength() - 1);

    for (var i = 0; i < ecdata[r].length; i++) {
      var modIndex = i + modPoly.getLength() - ecdata[r].length;
      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
    }
  }

  var totalCodeCount = 0;

  for (var i = 0; i < rsBlocks.length; i++) {
    totalCodeCount += rsBlocks[i].totalCount;
  }

  var data = new Array(totalCodeCount);
  var index = 0;

  for (var i = 0; i < maxDcCount; i++) {
    for (var r = 0; r < rsBlocks.length; r++) {
      if (i < dcdata[r].length) {
        data[index++] = dcdata[r][i];
      }
    }
  }

  for (var i = 0; i < maxEcCount; i++) {
    for (var r = 0; r < rsBlocks.length; r++) {
      if (i < ecdata[r].length) {
        data[index++] = ecdata[r][i];
      }
    }
  }

  return data;
}; //---------------------------------------------------------------------
// QRMode
//---------------------------------------------------------------------


var QRMode = {
  MODE_NUMBER: 1 << 0,
  MODE_ALPHA_NUM: 1 << 1,
  MODE_8BIT_BYTE: 1 << 2,
  MODE_KANJI: 1 << 3
}; //---------------------------------------------------------------------
// QRErrorCorrectLevel
//---------------------------------------------------------------------

var QRErrorCorrectLevel = {
  L: 1,
  M: 0,
  Q: 3,
  H: 2
}; //---------------------------------------------------------------------
// QRMaskPattern
//---------------------------------------------------------------------

var QRMaskPattern = {
  PATTERN000: 0,
  PATTERN001: 1,
  PATTERN010: 2,
  PATTERN011: 3,
  PATTERN100: 4,
  PATTERN101: 5,
  PATTERN110: 6,
  PATTERN111: 7
}; //---------------------------------------------------------------------
// QRUtil
//---------------------------------------------------------------------

var QRUtil = {
  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],
  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,
  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,
  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,
  getBCHTypeInfo: function getBCHTypeInfo(data) {
    var d = data << 10;

    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);
    }

    return (data << 10 | d) ^ QRUtil.G15_MASK;
  },
  getBCHTypeNumber: function getBCHTypeNumber(data) {
    var d = data << 12;

    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);
    }

    return data << 12 | d;
  },
  getBCHDigit: function getBCHDigit(data) {
    var digit = 0;

    while (data != 0) {
      digit++;
      data >>>= 1;
    }

    return digit;
  },
  getPatternPosition: function getPatternPosition(typeNumber) {
    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
  },
  getMask: function getMask(maskPattern, i, j) {
    switch (maskPattern) {
      case QRMaskPattern.PATTERN000:
        return (i + j) % 2 == 0;

      case QRMaskPattern.PATTERN001:
        return i % 2 == 0;

      case QRMaskPattern.PATTERN010:
        return j % 3 == 0;

      case QRMaskPattern.PATTERN011:
        return (i + j) % 3 == 0;

      case QRMaskPattern.PATTERN100:
        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;

      case QRMaskPattern.PATTERN101:
        return i * j % 2 + i * j % 3 == 0;

      case QRMaskPattern.PATTERN110:
        return (i * j % 2 + i * j % 3) % 2 == 0;

      case QRMaskPattern.PATTERN111:
        return (i * j % 3 + (i + j) % 2) % 2 == 0;

      default:
        throw new Error("bad maskPattern:" + maskPattern);
    }
  },
  getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {
    var a = new QRPolynomial([1], 0);

    for (var i = 0; i < errorCorrectLength; i++) {
      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
    }

    return a;
  },
  getLengthInBits: function getLengthInBits(mode, type) {
    if (1 <= type && type < 10) {
      // 1 - 9
      switch (mode) {
        case QRMode.MODE_NUMBER:
          return 10;

        case QRMode.MODE_ALPHA_NUM:
          return 9;

        case QRMode.MODE_8BIT_BYTE:
          return 8;

        case QRMode.MODE_KANJI:
          return 8;

        default:
          throw new Error("mode:" + mode);
      }
    } else if (type < 27) {
      // 10 - 26
      switch (mode) {
        case QRMode.MODE_NUMBER:
          return 12;

        case QRMode.MODE_ALPHA_NUM:
          return 11;

        case QRMode.MODE_8BIT_BYTE:
          return 16;

        case QRMode.MODE_KANJI:
          return 10;

        default:
          throw new Error("mode:" + mode);
      }
    } else if (type < 41) {
      // 27 - 40
      switch (mode) {
        case QRMode.MODE_NUMBER:
          return 14;

        case QRMode.MODE_ALPHA_NUM:
          return 13;

        case QRMode.MODE_8BIT_BYTE:
          return 16;

        case QRMode.MODE_KANJI:
          return 12;

        default:
          throw new Error("mode:" + mode);
      }
    } else {
      throw new Error("type:" + type);
    }
  },
  getLostPoint: function getLostPoint(qrCode) {
    var moduleCount = qrCode.getModuleCount();
    var lostPoint = 0; // LEVEL1

    for (var row = 0; row < moduleCount; row++) {
      for (var col = 0; col < moduleCount; col++) {
        var sameCount = 0;
        var dark = qrCode.isDark(row, col);

        for (var r = -1; r <= 1; r++) {
          if (row + r < 0 || moduleCount <= row + r) {
            continue;
          }

          for (var c = -1; c <= 1; c++) {
            if (col + c < 0 || moduleCount <= col + c) {
              continue;
            }

            if (r == 0 && c == 0) {
              continue;
            }

            if (dark == qrCode.isDark(row + r, col + c)) {
              sameCount++;
            }
          }
        }

        if (sameCount > 5) {
          lostPoint += 3 + sameCount - 5;
        }
      }
    } // LEVEL2


    for (var row = 0; row < moduleCount - 1; row++) {
      for (var col = 0; col < moduleCount - 1; col++) {
        var count = 0;
        if (qrCode.isDark(row, col)) count++;
        if (qrCode.isDark(row + 1, col)) count++;
        if (qrCode.isDark(row, col + 1)) count++;
        if (qrCode.isDark(row + 1, col + 1)) count++;

        if (count == 0 || count == 4) {
          lostPoint += 3;
        }
      }
    } // LEVEL3


    for (var row = 0; row < moduleCount; row++) {
      for (var col = 0; col < moduleCount - 6; col++) {
        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {
          lostPoint += 40;
        }
      }
    }

    for (var col = 0; col < moduleCount; col++) {
      for (var row = 0; row < moduleCount - 6; row++) {
        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {
          lostPoint += 40;
        }
      }
    } // LEVEL4


    var darkCount = 0;

    for (var col = 0; col < moduleCount; col++) {
      for (var row = 0; row < moduleCount; row++) {
        if (qrCode.isDark(row, col)) {
          darkCount++;
        }
      }
    }

    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
    lostPoint += ratio * 10;
    return lostPoint;
  }
}; //---------------------------------------------------------------------
// QRMath
//---------------------------------------------------------------------

var QRMath = {
  glog: function glog(n) {
    if (n < 1) {
      throw new Error("glog(" + n + ")");
    }

    return QRMath.LOG_TABLE[n];
  },
  gexp: function gexp(n) {
    while (n < 0) {
      n += 255;
    }

    while (n >= 256) {
      n -= 255;
    }

    return QRMath.EXP_TABLE[n];
  },
  EXP_TABLE: new Array(256),
  LOG_TABLE: new Array(256)
};

for (var i = 0; i < 8; i++) {
  QRMath.EXP_TABLE[i] = 1 << i;
}

for (var i = 8; i < 256; i++) {
  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
}

for (var i = 0; i < 255; i++) {
  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
} //---------------------------------------------------------------------
// QRPolynomial
//---------------------------------------------------------------------


function QRPolynomial(num, shift) {
  if (num.length == undefined) {
    throw new Error(num.length + "/" + shift);
  }

  var offset = 0;

  while (offset < num.length && num[offset] == 0) {
    offset++;
  }

  this.num = new Array(num.length - offset + shift);

  for (var i = 0; i < num.length - offset; i++) {
    this.num[i] = num[i + offset];
  }
}

QRPolynomial.prototype = {
  get: function get(index) {
    return this.num[index];
  },
  getLength: function getLength() {
    return this.num.length;
  },
  multiply: function multiply(e) {
    var num = new Array(this.getLength() + e.getLength() - 1);

    for (var i = 0; i < this.getLength(); i++) {
      for (var j = 0; j < e.getLength(); j++) {
        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));
      }
    }

    return new QRPolynomial(num, 0);
  },
  mod: function mod(e) {
    if (this.getLength() - e.getLength() < 0) {
      return this;
    }

    var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));
    var num = new Array(this.getLength());

    for (var i = 0; i < this.getLength(); i++) {
      num[i] = this.get(i);
    }

    for (var i = 0; i < e.getLength(); i++) {
      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
    } // recursive call


    return new QRPolynomial(num, 0).mod(e);
  }
}; //---------------------------------------------------------------------
// QRRSBlock
//---------------------------------------------------------------------

function QRRSBlock(totalCount, dataCount) {
  this.totalCount = totalCount;
  this.dataCount = dataCount;
}

QRRSBlock.RS_BLOCK_TABLE = [// L
// M
// Q
// H
// 1
[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], // 2
[1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], // 3
[1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], // 4		
[1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], // 5
[1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], // 6
[2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], // 7		
[2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], // 8
[2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], // 9
[2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], // 10		
[2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], // 11
[4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], // 12
[2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], // 13
[4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], // 14
[3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], // 15
[5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], // 16
[5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], // 17
[1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], // 18
[5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], // 19
[3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], // 20
[3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], // 21
[4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], // 22
[2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], // 23
[4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], // 24
[6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], // 25
[8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], // 26
[10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], // 27
[8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], // 28
[3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], // 29
[7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], // 30
[5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], // 31
[13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], // 32
[17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], // 33
[17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], // 34
[13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], // 35
[12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], // 36
[6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], // 37
[17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], // 38
[4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], // 39
[20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], // 40
[19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];

QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {
  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);

  if (rsBlock == undefined) {
    throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + errorCorrectLevel);
  }

  var length = rsBlock.length / 3;
  var list = new Array();

  for (var i = 0; i < length; i++) {
    var count = rsBlock[i * 3 + 0];
    var totalCount = rsBlock[i * 3 + 1];
    var dataCount = rsBlock[i * 3 + 2];

    for (var j = 0; j < count; j++) {
      list.push(new QRRSBlock(totalCount, dataCount));
    }
  }

  return list;
};

QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {
  switch (errorCorrectLevel) {
    case QRErrorCorrectLevel.L:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];

    case QRErrorCorrectLevel.M:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];

    case QRErrorCorrectLevel.Q:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];

    case QRErrorCorrectLevel.H:
      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];

    default:
      return undefined;
  }
}; //---------------------------------------------------------------------
// QRBitBuffer
//---------------------------------------------------------------------


function QRBitBuffer() {
  this.buffer = new Array();
  this.length = 0;
}

QRBitBuffer.prototype = {
  get: function get(index) {
    var bufIndex = Math.floor(index / 8);
    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;
  },
  put: function put(num, length) {
    for (var i = 0; i < length; i++) {
      this.putBit((num >>> length - i - 1 & 1) == 1);
    }
  },
  getLengthInBits: function getLengthInBits() {
    return this.length;
  },
  putBit: function putBit(bit) {
    var bufIndex = Math.floor(this.length / 8);

    if (this.buffer.length <= bufIndex) {
      this.buffer.push(0);
    }

    if (bit) {
      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
    }

    this.length++;
  }
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFzlgpnku71cXHFyY29kZS5qcyJdLCJuYW1lcyI6WyJRUjhiaXRCeXRlIiwiZGF0YSIsIm1vZGUiLCJRUk1vZGUiLCJNT0RFXzhCSVRfQllURSIsInByb3RvdHlwZSIsImdldExlbmd0aCIsImJ1ZmZlciIsImxlbmd0aCIsIndyaXRlIiwiaSIsInB1dCIsImNoYXJDb2RlQXQiLCJRUkNvZGUiLCJ0eXBlTnVtYmVyIiwiZXJyb3JDb3JyZWN0TGV2ZWwiLCJtb2R1bGVzIiwibW9kdWxlQ291bnQiLCJkYXRhQ2FjaGUiLCJkYXRhTGlzdCIsIkFycmF5IiwiYWRkRGF0YSIsIm5ld0RhdGEiLCJwdXNoIiwiaXNEYXJrIiwicm93IiwiY29sIiwiRXJyb3IiLCJnZXRNb2R1bGVDb3VudCIsIm1ha2UiLCJyc0Jsb2NrcyIsIlFSUlNCbG9jayIsImdldFJTQmxvY2tzIiwiUVJCaXRCdWZmZXIiLCJ0b3RhbERhdGFDb3VudCIsImRhdGFDb3VudCIsIlFSVXRpbCIsImdldExlbmd0aEluQml0cyIsIm1ha2VJbXBsIiwiZ2V0QmVzdE1hc2tQYXR0ZXJuIiwidGVzdCIsIm1hc2tQYXR0ZXJuIiwic2V0dXBQb3NpdGlvblByb2JlUGF0dGVybiIsInNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuIiwic2V0dXBUaW1pbmdQYXR0ZXJuIiwic2V0dXBUeXBlSW5mbyIsInNldHVwVHlwZU51bWJlciIsImNyZWF0ZURhdGEiLCJtYXBEYXRhIiwiciIsImMiLCJtaW5Mb3N0UG9pbnQiLCJwYXR0ZXJuIiwibG9zdFBvaW50IiwiZ2V0TG9zdFBvaW50IiwiY3JlYXRlTW92aWVDbGlwIiwidGFyZ2V0X21jIiwiaW5zdGFuY2VfbmFtZSIsImRlcHRoIiwicXJfbWMiLCJjcmVhdGVFbXB0eU1vdmllQ2xpcCIsImNzIiwieSIsIngiLCJkYXJrIiwiYmVnaW5GaWxsIiwibW92ZVRvIiwibGluZVRvIiwiZW5kRmlsbCIsInBvcyIsImdldFBhdHRlcm5Qb3NpdGlvbiIsImoiLCJiaXRzIiwiZ2V0QkNIVHlwZU51bWJlciIsIm1vZCIsIk1hdGgiLCJmbG9vciIsImdldEJDSFR5cGVJbmZvIiwiaW5jIiwiYml0SW5kZXgiLCJieXRlSW5kZXgiLCJtYXNrIiwiZ2V0TWFzayIsIlBBRDAiLCJQQUQxIiwicHV0Qml0IiwiY3JlYXRlQnl0ZXMiLCJvZmZzZXQiLCJtYXhEY0NvdW50IiwibWF4RWNDb3VudCIsImRjZGF0YSIsImVjZGF0YSIsImRjQ291bnQiLCJlY0NvdW50IiwidG90YWxDb3VudCIsIm1heCIsInJzUG9seSIsImdldEVycm9yQ29ycmVjdFBvbHlub21pYWwiLCJyYXdQb2x5IiwiUVJQb2x5bm9taWFsIiwibW9kUG9seSIsIm1vZEluZGV4IiwiZ2V0IiwidG90YWxDb2RlQ291bnQiLCJpbmRleCIsIk1PREVfTlVNQkVSIiwiTU9ERV9BTFBIQV9OVU0iLCJNT0RFX0tBTkpJIiwiUVJFcnJvckNvcnJlY3RMZXZlbCIsIkwiLCJNIiwiUSIsIkgiLCJRUk1hc2tQYXR0ZXJuIiwiUEFUVEVSTjAwMCIsIlBBVFRFUk4wMDEiLCJQQVRURVJOMDEwIiwiUEFUVEVSTjAxMSIsIlBBVFRFUk4xMDAiLCJQQVRURVJOMTAxIiwiUEFUVEVSTjExMCIsIlBBVFRFUk4xMTEiLCJQQVRURVJOX1BPU0lUSU9OX1RBQkxFIiwiRzE1IiwiRzE4IiwiRzE1X01BU0siLCJkIiwiZ2V0QkNIRGlnaXQiLCJkaWdpdCIsImVycm9yQ29ycmVjdExlbmd0aCIsImEiLCJtdWx0aXBseSIsIlFSTWF0aCIsImdleHAiLCJ0eXBlIiwicXJDb2RlIiwic2FtZUNvdW50IiwiY291bnQiLCJkYXJrQ291bnQiLCJyYXRpbyIsImFicyIsImdsb2ciLCJuIiwiTE9HX1RBQkxFIiwiRVhQX1RBQkxFIiwibnVtIiwic2hpZnQiLCJ1bmRlZmluZWQiLCJlIiwiUlNfQkxPQ0tfVEFCTEUiLCJyc0Jsb2NrIiwiZ2V0UnNCbG9ja1RhYmxlIiwibGlzdCIsImJ1ZkluZGV4IiwiYml0Il0sIm1hcHBpbmdzIjoi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QUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEVBQWhCLENBckJ3QixFQXNCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEVBQWhCLENBdEJ3QixFQXVCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLENBdkJ3QixFQXdCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLENBeEJ3QixFQXlCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLENBekJ3QixFQTBCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLENBMUJ3QixFQTJCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLENBM0J3QixFQTRCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEVBQWhCLEVBQW9CLEdBQXBCLENBNUJ3QixFQTZCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLENBN0J3QixFQThCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLENBOUJ3QixFQStCeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLENBL0J3QixFQWdDeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLENBaEN3QixFQWlDeEIsQ0FBQyxDQUFELEVBQUksRUFBSixFQUFRLEVBQVIsRUFBWSxFQUFaLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLENBakN3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QUFDLEVBQTdCLEVBQWlDO0FBQ2hDLFdBQUsyRSxNQUFMLENBQWEsQ0FBRzRELEdBQUcsS0FBTXpJLE1BQU0sR0FBR0UsQ0FBVCxHQUFhLENBQXZCLEdBQThCLENBQWhDLEtBQXNDLENBQW5EO0FBQ0E7QUFDRCxHQVhzQjtBQWF2QjJCLEVBQUFBLGVBQWUsRUFBRywyQkFBVztBQUM1QixXQUFPLEtBQUs3QixNQUFaO0FBQ0EsR0Fmc0I7QUFpQnZCNkUsRUFBQUEsTUFBTSxFQUFHLGdCQUFTcUUsR0FBVCxFQUFjO0FBRXRCLFFBQUlELFFBQVEsR0FBRzlFLElBQUksQ0FBQ0MsS0FBTCxDQUFXLEtBQUtwRSxNQUFMLEdBQWMsQ0FBekIsQ0FBZjs7QUFDQSxRQUFJLEtBQUtELE1BQUwsQ0FBWUMsTUFBWixJQUFzQmlKLFFBQTFCLEVBQW9DO0FBQ25DLFdBQUtsSixNQUFMLENBQVlnQixJQUFaLENBQWlCLENBQWpCO0FBQ0E7O0FBRUQsUUFBSW1JLEdBQUosRUFBUztBQUNSLFdBQUtuSixNQUFMLENBQVlrSixRQUFaLEtBQTBCLFNBQVUsS0FBS2pKLE1BQUwsR0FBYyxDQUFsRDtBQUNBOztBQUVELFNBQUtBLE1BQUw7QUFDQTtBQTdCc0IsQ0FBeEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vL1FSQ+aPkuS7tlxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBRUkNvZGUgZm9yIEphdmFTY3JpcHRcclxuLy9cclxuLy8gQ29weXJpZ2h0IChjKSAyMDA5IEthenVoaWtvIEFyYXNlXHJcbi8vXHJcbi8vIFVSTDogaHR0cDovL3d3dy5kLXByb2plY3QuY29tL1xyXG4vL1xyXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2U6XHJcbi8vICAgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuLy9cclxuLy8gVGhlIHdvcmQgXCJRUiBDb2RlXCIgaXMgcmVnaXN0ZXJlZCB0cmFkZW1hcmsgb2YgXHJcbi8vIERFTlNPIFdBVkUgSU5DT1JQT1JBVEVEXHJcbi8vICAgaHR0cDovL3d3dy5kZW5zby13YXZlLmNvbS9xcmNvZGUvZmFxcGF0ZW50LWUuaHRtbFxyXG4vL1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gUVI4Yml0Qnl0ZVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5mdW5jdGlvbiBRUjhiaXRCeXRlKGRhdGEpIHtcclxuXHR0aGlzLm1vZGUgPSBRUk1vZGUuTU9ERV84QklUX0JZVEU7XHJcblx0dGhpcy5kYXRhID0gZGF0YTtcclxufVxyXG5cclxuUVI4Yml0Qnl0ZS5wcm90b3R5cGUgPSB7XHJcblxyXG5cdGdldExlbmd0aCA6IGZ1bmN0aW9uKGJ1ZmZlcikge1xyXG5cdFx0cmV0dXJuIHRoaXMuZGF0YS5sZW5ndGg7XHJcblx0fSxcclxuXHRcclxuXHR3cml0ZSA6IGZ1bmN0aW9uKGJ1ZmZlcikge1xyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmRhdGEubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0Ly8gbm90IEpJUyAuLi5cclxuXHRcdFx0YnVmZmVyLnB1dCh0aGlzLmRhdGEuY2hhckNvZGVBdChpKSwgOCk7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gUVJDb2RlXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5mdW5jdGlvbiBRUkNvZGUodHlwZU51bWJlciwgZXJyb3JDb3JyZWN0TGV2ZWwpIHtcclxuXHR0aGlzLnR5cGVOdW1iZXIgPSB0eXBlTnVtYmVyO1xyXG5cdHRoaXMuZXJyb3JDb3JyZWN0TGV2ZWwgPSBlcnJvckNvcnJlY3RMZXZlbDtcclxuXHR0aGlzLm1vZHVsZXMgPSBudWxsO1xyXG5cdHRoaXMubW9kdWxlQ291bnQgPSAwO1xyXG5cdHRoaXMuZGF0YUNhY2hlID0gbnVsbDtcclxuXHR0aGlzLmRhdGFMaXN0ID0gbmV3IEFycmF5KCk7XHJcbn1cclxuXHJcblFSQ29kZS5wcm90b3R5cGUgPSB7XHJcblx0XHJcblx0YWRkRGF0YSA6IGZ1bmN0aW9uKGRhdGEpIHtcclxuXHRcdHZhciBuZXdEYXRhID0gbmV3IFFSOGJpdEJ5dGUoZGF0YSk7XHJcblx0XHR0aGlzLmRhdGFMaXN0LnB1c2gobmV3RGF0YSk7XHJcblx0XHR0aGlzLmRhdGFDYWNoZSA9IG51bGw7XHJcblx0fSxcclxuXHRcclxuXHRpc0RhcmsgOiBmdW5jdGlvbihyb3csIGNvbCkge1xyXG5cdFx0aWYgKHJvdyA8IDAgfHwgdGhpcy5tb2R1bGVDb3VudCA8PSByb3cgfHwgY29sIDwgMCB8fCB0aGlzLm1vZHVsZUNvdW50IDw9IGNvbCkge1xyXG5cdFx0XHR0aHJvdyBuZXcgRXJyb3Iocm93ICsgXCIsXCIgKyBjb2wpO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXMubW9kdWxlc1tyb3ddW2NvbF07XHJcblx0fSxcclxuXHJcblx0Z2V0TW9kdWxlQ291bnQgOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB0aGlzLm1vZHVsZUNvdW50O1xyXG5cdH0sXHJcblx0XHJcblx0bWFrZSA6IGZ1bmN0aW9uKCkge1xyXG5cdFx0Ly8gQ2FsY3VsYXRlIGF1dG9tYXRpY2FsbHkgdHlwZU51bWJlciBpZiBwcm92aWRlZCBpcyA8IDFcclxuXHRcdGlmICh0aGlzLnR5cGVOdW1iZXIgPCAxICl7XHJcblx0XHRcdHZhciB0eXBlTnVtYmVyID0gMTtcclxuXHRcdFx0Zm9yICh0eXBlTnVtYmVyID0gMTsgdHlwZU51bWJlciA8IDQwOyB0eXBlTnVtYmVyKyspIHtcclxuXHRcdFx0XHR2YXIgcnNCbG9ja3MgPSBRUlJTQmxvY2suZ2V0UlNCbG9ja3ModHlwZU51bWJlciwgdGhpcy5lcnJvckNvcnJlY3RMZXZlbCk7XHJcblxyXG5cdFx0XHRcdHZhciBidWZmZXIgPSBuZXcgUVJCaXRCdWZmZXIoKTtcclxuXHRcdFx0XHR2YXIgdG90YWxEYXRhQ291bnQgPSAwO1xyXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgcnNCbG9ja3MubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHRcdHRvdGFsRGF0YUNvdW50ICs9IHJzQmxvY2tzW2ldLmRhdGFDb3VudDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5kYXRhTGlzdC5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdFx0dmFyIGRhdGEgPSB0aGlzLmRhdGFMaXN0W2ldO1xyXG5cdFx0XHRcdFx0YnVmZmVyLnB1dChkYXRhLm1vZGUsIDQpO1xyXG5cdFx0XHRcdFx0YnVmZmVyLnB1dChkYXRhLmdldExlbmd0aCgpLCBRUlV0aWwuZ2V0TGVuZ3RoSW5CaXRzKGRhdGEubW9kZSwgdHlwZU51bWJlcikgKTtcclxuXHRcdFx0XHRcdGRhdGEud3JpdGUoYnVmZmVyKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA8PSB0b3RhbERhdGFDb3VudCAqIDgpXHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLnR5cGVOdW1iZXIgPSB0eXBlTnVtYmVyO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5tYWtlSW1wbChmYWxzZSwgdGhpcy5nZXRCZXN0TWFza1BhdHRlcm4oKSApO1xyXG5cdH0sXHJcblx0XHJcblx0bWFrZUltcGwgOiBmdW5jdGlvbih0ZXN0LCBtYXNrUGF0dGVybikge1xyXG5cdFx0XHJcblx0XHR0aGlzLm1vZHVsZUNvdW50ID0gdGhpcy50eXBlTnVtYmVyICogNCArIDE3O1xyXG5cdFx0dGhpcy5tb2R1bGVzID0gbmV3IEFycmF5KHRoaXMubW9kdWxlQ291bnQpO1xyXG5cdFx0XHJcblx0XHRmb3IgKHZhciByb3cgPSAwOyByb3cgPCB0aGlzLm1vZHVsZUNvdW50OyByb3crKykge1xyXG5cdFx0XHRcclxuXHRcdFx0dGhpcy5tb2R1bGVzW3Jvd10gPSBuZXcgQXJyYXkodGhpcy5tb2R1bGVDb3VudCk7XHJcblx0XHRcdFxyXG5cdFx0XHRmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCB0aGlzLm1vZHVsZUNvdW50OyBjb2wrKykge1xyXG5cdFx0XHRcdHRoaXMubW9kdWxlc1tyb3ddW2NvbF0gPSBudWxsOy8vKGNvbCArIHJvdykgJSAzO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHJcblx0XHR0aGlzLnNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4oMCwgMCk7XHJcblx0XHR0aGlzLnNldHVwUG9zaXRpb25Qcm9iZVBhdHRlcm4odGhpcy5tb2R1bGVDb3VudCAtIDcsIDApO1xyXG5cdFx0dGhpcy5zZXR1cFBvc2l0aW9uUHJvYmVQYXR0ZXJuKDAsIHRoaXMubW9kdWxlQ291bnQgLSA3KTtcclxuXHRcdHRoaXMuc2V0dXBQb3NpdGlvbkFkanVzdFBhdHRlcm4oKTtcclxuXHRcdHRoaXMuc2V0dXBUaW1pbmdQYXR0ZXJuKCk7XHJcblx0XHR0aGlzLnNldHVwVHlwZUluZm8odGVzdCwgbWFza1BhdHRlcm4pO1xyXG5cdFx0XHJcblx0XHRpZiAodGhpcy50eXBlTnVtYmVyID49IDcpIHtcclxuXHRcdFx0dGhpcy5zZXR1cFR5cGVOdW1iZXIodGVzdCk7XHJcblx0XHR9XHJcblx0XHJcblx0XHRpZiAodGhpcy5kYXRhQ2FjaGUgPT0gbnVsbCkge1xyXG5cdFx0XHR0aGlzLmRhdGFDYWNoZSA9IFFSQ29kZS5jcmVhdGVEYXRhKHRoaXMudHlwZU51bWJlciwgdGhpcy5lcnJvckNvcnJlY3RMZXZlbCwgdGhpcy5kYXRhTGlzdCk7XHJcblx0XHR9XHJcblx0XHJcblx0XHR0aGlzLm1hcERhdGEodGhpcy5kYXRhQ2FjaGUsIG1hc2tQYXR0ZXJuKTtcclxuXHR9LFxyXG5cclxuXHRzZXR1cFBvc2l0aW9uUHJvYmVQYXR0ZXJuIDogZnVuY3Rpb24ocm93LCBjb2wpICB7XHJcblx0XHRcclxuXHRcdGZvciAodmFyIHIgPSAtMTsgciA8PSA3OyByKyspIHtcclxuXHRcdFx0XHJcblx0XHRcdGlmIChyb3cgKyByIDw9IC0xIHx8IHRoaXMubW9kdWxlQ291bnQgPD0gcm93ICsgcikgY29udGludWU7XHJcblx0XHRcdFxyXG5cdFx0XHRmb3IgKHZhciBjID0gLTE7IGMgPD0gNzsgYysrKSB7XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0aWYgKGNvbCArIGMgPD0gLTEgfHwgdGhpcy5tb2R1bGVDb3VudCA8PSBjb2wgKyBjKSBjb250aW51ZTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRpZiAoICgwIDw9IHIgJiYgciA8PSA2ICYmIChjID09IDAgfHwgYyA9PSA2KSApXHJcblx0XHRcdFx0XHRcdHx8ICgwIDw9IGMgJiYgYyA8PSA2ICYmIChyID09IDAgfHwgciA9PSA2KSApXHJcblx0XHRcdFx0XHRcdHx8ICgyIDw9IHIgJiYgciA8PSA0ICYmIDIgPD0gYyAmJiBjIDw9IDQpICkge1xyXG5cdFx0XHRcdFx0dGhpcy5tb2R1bGVzW3JvdyArIHJdW2NvbCArIGNdID0gdHJ1ZTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dGhpcy5tb2R1bGVzW3JvdyArIHJdW2NvbCArIGNdID0gZmFsc2U7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHRcdFxyXG5cdFx0fVx0XHRcclxuXHR9LFxyXG5cdFxyXG5cdGdldEJlc3RNYXNrUGF0dGVybiA6IGZ1bmN0aW9uKCkge1xyXG5cdFxyXG5cdFx0dmFyIG1pbkxvc3RQb2ludCA9IDA7XHJcblx0XHR2YXIgcGF0dGVybiA9IDA7XHJcblx0XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDg7IGkrKykge1xyXG5cdFx0XHRcclxuXHRcdFx0dGhpcy5tYWtlSW1wbCh0cnVlLCBpKTtcclxuXHRcclxuXHRcdFx0dmFyIGxvc3RQb2ludCA9IFFSVXRpbC5nZXRMb3N0UG9pbnQodGhpcyk7XHJcblx0XHJcblx0XHRcdGlmIChpID09IDAgfHwgbWluTG9zdFBvaW50ID4gIGxvc3RQb2ludCkge1xyXG5cdFx0XHRcdG1pbkxvc3RQb2ludCA9IGxvc3RQb2ludDtcclxuXHRcdFx0XHRwYXR0ZXJuID0gaTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFxyXG5cdFx0cmV0dXJuIHBhdHRlcm47XHJcblx0fSxcclxuXHRcclxuXHRjcmVhdGVNb3ZpZUNsaXAgOiBmdW5jdGlvbih0YXJnZXRfbWMsIGluc3RhbmNlX25hbWUsIGRlcHRoKSB7XHJcblx0XHJcblx0XHR2YXIgcXJfbWMgPSB0YXJnZXRfbWMuY3JlYXRlRW1wdHlNb3ZpZUNsaXAoaW5zdGFuY2VfbmFtZSwgZGVwdGgpO1xyXG5cdFx0dmFyIGNzID0gMTtcclxuXHRcclxuXHRcdHRoaXMubWFrZSgpO1xyXG5cclxuXHRcdGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IHRoaXMubW9kdWxlcy5sZW5ndGg7IHJvdysrKSB7XHJcblx0XHRcdFxyXG5cdFx0XHR2YXIgeSA9IHJvdyAqIGNzO1xyXG5cdFx0XHRcclxuXHRcdFx0Zm9yICh2YXIgY29sID0gMDsgY29sIDwgdGhpcy5tb2R1bGVzW3Jvd10ubGVuZ3RoOyBjb2wrKykge1xyXG5cdFxyXG5cdFx0XHRcdHZhciB4ID0gY29sICogY3M7XHJcblx0XHRcdFx0dmFyIGRhcmsgPSB0aGlzLm1vZHVsZXNbcm93XVtjb2xdO1xyXG5cdFx0XHRcclxuXHRcdFx0XHRpZiAoZGFyaykge1xyXG5cdFx0XHRcdFx0cXJfbWMuYmVnaW5GaWxsKDAsIDEwMCk7XHJcblx0XHRcdFx0XHRxcl9tYy5tb3ZlVG8oeCwgeSk7XHJcblx0XHRcdFx0XHRxcl9tYy5saW5lVG8oeCArIGNzLCB5KTtcclxuXHRcdFx0XHRcdHFyX21jLmxpbmVUbyh4ICsgY3MsIHkgKyBjcyk7XHJcblx0XHRcdFx0XHRxcl9tYy5saW5lVG8oeCwgeSArIGNzKTtcclxuXHRcdFx0XHRcdHFyX21jLmVuZEZpbGwoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0cmV0dXJuIHFyX21jO1xyXG5cdH0sXHJcblxyXG5cdHNldHVwVGltaW5nUGF0dGVybiA6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHJcblx0XHRmb3IgKHZhciByID0gODsgciA8IHRoaXMubW9kdWxlQ291bnQgLSA4OyByKyspIHtcclxuXHRcdFx0aWYgKHRoaXMubW9kdWxlc1tyXVs2XSAhPSBudWxsKSB7XHJcblx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdH1cclxuXHRcdFx0dGhpcy5tb2R1bGVzW3JdWzZdID0gKHIgJSAyID09IDApO1xyXG5cdFx0fVxyXG5cdFxyXG5cdFx0Zm9yICh2YXIgYyA9IDg7IGMgPCB0aGlzLm1vZHVsZUNvdW50IC0gODsgYysrKSB7XHJcblx0XHRcdGlmICh0aGlzLm1vZHVsZXNbNl1bY10gIT0gbnVsbCkge1xyXG5cdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMubW9kdWxlc1s2XVtjXSA9IChjICUgMiA9PSAwKTtcclxuXHRcdH1cclxuXHR9LFxyXG5cdFxyXG5cdHNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuIDogZnVuY3Rpb24oKSB7XHJcblx0XHJcblx0XHR2YXIgcG9zID0gUVJVdGlsLmdldFBhdHRlcm5Qb3NpdGlvbih0aGlzLnR5cGVOdW1iZXIpO1xyXG5cdFx0XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHBvcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHJcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgcG9zLmxlbmd0aDsgaisrKSB7XHJcblx0XHRcdFxyXG5cdFx0XHRcdHZhciByb3cgPSBwb3NbaV07XHJcblx0XHRcdFx0dmFyIGNvbCA9IHBvc1tqXTtcclxuXHRcdFx0XHRcclxuXHRcdFx0XHRpZiAodGhpcy5tb2R1bGVzW3Jvd11bY29sXSAhPSBudWxsKSB7XHJcblx0XHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0XHJcblx0XHRcdFx0Zm9yICh2YXIgciA9IC0yOyByIDw9IDI7IHIrKykge1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdFx0Zm9yICh2YXIgYyA9IC0yOyBjIDw9IDI7IGMrKykge1xyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdGlmIChyID09IC0yIHx8IHIgPT0gMiB8fCBjID09IC0yIHx8IGMgPT0gMiBcclxuXHRcdFx0XHRcdFx0XHRcdHx8IChyID09IDAgJiYgYyA9PSAwKSApIHtcclxuXHRcdFx0XHRcdFx0XHR0aGlzLm1vZHVsZXNbcm93ICsgcl1bY29sICsgY10gPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdHRoaXMubW9kdWxlc1tyb3cgKyByXVtjb2wgKyBjXSA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSxcclxuXHRcclxuXHRzZXR1cFR5cGVOdW1iZXIgOiBmdW5jdGlvbih0ZXN0KSB7XHJcblx0XHJcblx0XHR2YXIgYml0cyA9IFFSVXRpbC5nZXRCQ0hUeXBlTnVtYmVyKHRoaXMudHlwZU51bWJlcik7XHJcblx0XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDE4OyBpKyspIHtcclxuXHRcdFx0dmFyIG1vZCA9ICghdGVzdCAmJiAoIChiaXRzID4+IGkpICYgMSkgPT0gMSk7XHJcblx0XHRcdHRoaXMubW9kdWxlc1tNYXRoLmZsb29yKGkgLyAzKV1baSAlIDMgKyB0aGlzLm1vZHVsZUNvdW50IC0gOCAtIDNdID0gbW9kO1xyXG5cdFx0fVxyXG5cdFxyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxODsgaSsrKSB7XHJcblx0XHRcdHZhciBtb2QgPSAoIXRlc3QgJiYgKCAoYml0cyA+PiBpKSAmIDEpID09IDEpO1xyXG5cdFx0XHR0aGlzLm1vZHVsZXNbaSAlIDMgKyB0aGlzLm1vZHVsZUNvdW50IC0gOCAtIDNdW01hdGguZmxvb3IoaSAvIDMpXSA9IG1vZDtcclxuXHRcdH1cclxuXHR9LFxyXG5cdFxyXG5cdHNldHVwVHlwZUluZm8gOiBmdW5jdGlvbih0ZXN0LCBtYXNrUGF0dGVybikge1xyXG5cdFxyXG5cdFx0dmFyIGRhdGEgPSAodGhpcy5lcnJvckNvcnJlY3RMZXZlbCA8PCAzKSB8IG1hc2tQYXR0ZXJuO1xyXG5cdFx0dmFyIGJpdHMgPSBRUlV0aWwuZ2V0QkNIVHlwZUluZm8oZGF0YSk7XHJcblx0XHJcblx0XHQvLyB2ZXJ0aWNhbFx0XHRcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTU7IGkrKykge1xyXG5cdFxyXG5cdFx0XHR2YXIgbW9kID0gKCF0ZXN0ICYmICggKGJpdHMgPj4gaSkgJiAxKSA9PSAxKTtcclxuXHRcclxuXHRcdFx0aWYgKGkgPCA2KSB7XHJcblx0XHRcdFx0dGhpcy5tb2R1bGVzW2ldWzhdID0gbW9kO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGkgPCA4KSB7XHJcblx0XHRcdFx0dGhpcy5tb2R1bGVzW2kgKyAxXVs4XSA9IG1vZDtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0aGlzLm1vZHVsZXNbdGhpcy5tb2R1bGVDb3VudCAtIDE1ICsgaV1bOF0gPSBtb2Q7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcclxuXHRcdC8vIGhvcml6b250YWxcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTU7IGkrKykge1xyXG5cdFxyXG5cdFx0XHR2YXIgbW9kID0gKCF0ZXN0ICYmICggKGJpdHMgPj4gaSkgJiAxKSA9PSAxKTtcclxuXHRcdFx0XHJcblx0XHRcdGlmIChpIDwgOCkge1xyXG5cdFx0XHRcdHRoaXMubW9kdWxlc1s4XVt0aGlzLm1vZHVsZUNvdW50IC0gaSAtIDFdID0gbW9kO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGkgPCA5KSB7XHJcblx0XHRcdFx0dGhpcy5tb2R1bGVzWzhdWzE1IC0gaSAtIDEgKyAxXSA9IG1vZDtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0aGlzLm1vZHVsZXNbOF1bMTUgLSBpIC0gMV0gPSBtb2Q7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcclxuXHRcdC8vIGZpeGVkIG1vZHVsZVxyXG5cdFx0dGhpcy5tb2R1bGVzW3RoaXMubW9kdWxlQ291bnQgLSA4XVs4XSA9ICghdGVzdCk7XHJcblx0XHJcblx0fSxcclxuXHRcclxuXHRtYXBEYXRhIDogZnVuY3Rpb24oZGF0YSwgbWFza1BhdHRlcm4pIHtcclxuXHRcdFxyXG5cdFx0dmFyIGluYyA9IC0xO1xyXG5cdFx0dmFyIHJvdyA9IHRoaXMubW9kdWxlQ291bnQgLSAxO1xyXG5cdFx0dmFyIGJpdEluZGV4ID0gNztcclxuXHRcdHZhciBieXRlSW5kZXggPSAwO1xyXG5cdFx0XHJcblx0XHRmb3IgKHZhciBjb2wgPSB0aGlzLm1vZHVsZUNvdW50IC0gMTsgY29sID4gMDsgY29sIC09IDIpIHtcclxuXHRcclxuXHRcdFx0aWYgKGNvbCA9PSA2KSBjb2wtLTtcclxuXHRcclxuXHRcdFx0d2hpbGUgKHRydWUpIHtcclxuXHRcclxuXHRcdFx0XHRmb3IgKHZhciBjID0gMDsgYyA8IDI7IGMrKykge1xyXG5cdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRpZiAodGhpcy5tb2R1bGVzW3Jvd11bY29sIC0gY10gPT0gbnVsbCkge1xyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0dmFyIGRhcmsgPSBmYWxzZTtcclxuXHRcclxuXHRcdFx0XHRcdFx0aWYgKGJ5dGVJbmRleCA8IGRhdGEubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRcdFx0ZGFyayA9ICggKCAoZGF0YVtieXRlSW5kZXhdID4+PiBiaXRJbmRleCkgJiAxKSA9PSAxKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFxyXG5cdFx0XHRcdFx0XHR2YXIgbWFzayA9IFFSVXRpbC5nZXRNYXNrKG1hc2tQYXR0ZXJuLCByb3csIGNvbCAtIGMpO1xyXG5cdFxyXG5cdFx0XHRcdFx0XHRpZiAobWFzaykge1xyXG5cdFx0XHRcdFx0XHRcdGRhcmsgPSAhZGFyaztcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRcdFx0dGhpcy5tb2R1bGVzW3Jvd11bY29sIC0gY10gPSBkYXJrO1xyXG5cdFx0XHRcdFx0XHRiaXRJbmRleC0tO1xyXG5cdFxyXG5cdFx0XHRcdFx0XHRpZiAoYml0SW5kZXggPT0gLTEpIHtcclxuXHRcdFx0XHRcdFx0XHRieXRlSW5kZXgrKztcclxuXHRcdFx0XHRcdFx0XHRiaXRJbmRleCA9IDc7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHRcclxuXHRcdFx0XHRyb3cgKz0gaW5jO1xyXG5cdFxyXG5cdFx0XHRcdGlmIChyb3cgPCAwIHx8IHRoaXMubW9kdWxlQ291bnQgPD0gcm93KSB7XHJcblx0XHRcdFx0XHRyb3cgLT0gaW5jO1xyXG5cdFx0XHRcdFx0aW5jID0gLWluYztcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0XHJcblx0fVxyXG5cclxufTtcclxuXHJcblFSQ29kZS5QQUQwID0gMHhFQztcclxuUVJDb2RlLlBBRDEgPSAweDExO1xyXG5cclxuUVJDb2RlLmNyZWF0ZURhdGEgPSBmdW5jdGlvbih0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3RMZXZlbCwgZGF0YUxpc3QpIHtcclxuXHRcclxuXHR2YXIgcnNCbG9ja3MgPSBRUlJTQmxvY2suZ2V0UlNCbG9ja3ModHlwZU51bWJlciwgZXJyb3JDb3JyZWN0TGV2ZWwpO1xyXG5cdFxyXG5cdHZhciBidWZmZXIgPSBuZXcgUVJCaXRCdWZmZXIoKTtcclxuXHRcclxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGRhdGFMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcblx0XHR2YXIgZGF0YSA9IGRhdGFMaXN0W2ldO1xyXG5cdFx0YnVmZmVyLnB1dChkYXRhLm1vZGUsIDQpO1xyXG5cdFx0YnVmZmVyLnB1dChkYXRhLmdldExlbmd0aCgpLCBRUlV0aWwuZ2V0TGVuZ3RoSW5CaXRzKGRhdGEubW9kZSwgdHlwZU51bWJlcikgKTtcclxuXHRcdGRhdGEud3JpdGUoYnVmZmVyKTtcclxuXHR9XHJcblxyXG5cdC8vIGNhbGMgbnVtIG1heCBkYXRhLlxyXG5cdHZhciB0b3RhbERhdGFDb3VudCA9IDA7XHJcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCByc0Jsb2Nrcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0dG90YWxEYXRhQ291bnQgKz0gcnNCbG9ja3NbaV0uZGF0YUNvdW50O1xyXG5cdH1cclxuXHJcblx0aWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA+IHRvdGFsRGF0YUNvdW50ICogOCkge1xyXG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiY29kZSBsZW5ndGggb3ZlcmZsb3cuIChcIlxyXG5cdFx0XHQrIGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKVxyXG5cdFx0XHQrIFwiPlwiXHJcblx0XHRcdCsgIHRvdGFsRGF0YUNvdW50ICogOFxyXG5cdFx0XHQrIFwiKVwiKTtcclxuXHR9XHJcblxyXG5cdC8vIGVuZCBjb2RlXHJcblx0aWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSArIDQgPD0gdG90YWxEYXRhQ291bnQgKiA4KSB7XHJcblx0XHRidWZmZXIucHV0KDAsIDQpO1xyXG5cdH1cclxuXHJcblx0Ly8gcGFkZGluZ1xyXG5cdHdoaWxlIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgJSA4ICE9IDApIHtcclxuXHRcdGJ1ZmZlci5wdXRCaXQoZmFsc2UpO1xyXG5cdH1cclxuXHJcblx0Ly8gcGFkZGluZ1xyXG5cdHdoaWxlICh0cnVlKSB7XHJcblx0XHRcclxuXHRcdGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPj0gdG90YWxEYXRhQ291bnQgKiA4KSB7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0fVxyXG5cdFx0YnVmZmVyLnB1dChRUkNvZGUuUEFEMCwgOCk7XHJcblx0XHRcclxuXHRcdGlmIChidWZmZXIuZ2V0TGVuZ3RoSW5CaXRzKCkgPj0gdG90YWxEYXRhQ291bnQgKiA4KSB7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0fVxyXG5cdFx0YnVmZmVyLnB1dChRUkNvZGUuUEFEMSwgOCk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gUVJDb2RlLmNyZWF0ZUJ5dGVzKGJ1ZmZlciwgcnNCbG9ja3MpO1xyXG59XHJcblxyXG5RUkNvZGUuY3JlYXRlQnl0ZXMgPSBmdW5jdGlvbihidWZmZXIsIHJzQmxvY2tzKSB7XHJcblxyXG5cdHZhciBvZmZzZXQgPSAwO1xyXG5cdFxyXG5cdHZhciBtYXhEY0NvdW50ID0gMDtcclxuXHR2YXIgbWF4RWNDb3VudCA9IDA7XHJcblx0XHJcblx0dmFyIGRjZGF0YSA9IG5ldyBBcnJheShyc0Jsb2Nrcy5sZW5ndGgpO1xyXG5cdHZhciBlY2RhdGEgPSBuZXcgQXJyYXkocnNCbG9ja3MubGVuZ3RoKTtcclxuXHRcclxuXHRmb3IgKHZhciByID0gMDsgciA8IHJzQmxvY2tzLmxlbmd0aDsgcisrKSB7XHJcblxyXG5cdFx0dmFyIGRjQ291bnQgPSByc0Jsb2Nrc1tyXS5kYXRhQ291bnQ7XHJcblx0XHR2YXIgZWNDb3VudCA9IHJzQmxvY2tzW3JdLnRvdGFsQ291bnQgLSBkY0NvdW50O1xyXG5cclxuXHRcdG1heERjQ291bnQgPSBNYXRoLm1heChtYXhEY0NvdW50LCBkY0NvdW50KTtcclxuXHRcdG1heEVjQ291bnQgPSBNYXRoLm1heChtYXhFY0NvdW50LCBlY0NvdW50KTtcclxuXHRcdFxyXG5cdFx0ZGNkYXRhW3JdID0gbmV3IEFycmF5KGRjQ291bnQpO1xyXG5cdFx0XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRjZGF0YVtyXS5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRkY2RhdGFbcl1baV0gPSAweGZmICYgYnVmZmVyLmJ1ZmZlcltpICsgb2Zmc2V0XTtcclxuXHRcdH1cclxuXHRcdG9mZnNldCArPSBkY0NvdW50O1xyXG5cdFx0XHJcblx0XHR2YXIgcnNQb2x5ID0gUVJVdGlsLmdldEVycm9yQ29ycmVjdFBvbHlub21pYWwoZWNDb3VudCk7XHJcblx0XHR2YXIgcmF3UG9seSA9IG5ldyBRUlBvbHlub21pYWwoZGNkYXRhW3JdLCByc1BvbHkuZ2V0TGVuZ3RoKCkgLSAxKTtcclxuXHJcblx0XHR2YXIgbW9kUG9seSA9IHJhd1BvbHkubW9kKHJzUG9seSk7XHJcblx0XHRlY2RhdGFbcl0gPSBuZXcgQXJyYXkocnNQb2x5LmdldExlbmd0aCgpIC0gMSk7XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGVjZGF0YVtyXS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgbW9kSW5kZXggPSBpICsgbW9kUG9seS5nZXRMZW5ndGgoKSAtIGVjZGF0YVtyXS5sZW5ndGg7XHJcblx0XHRcdGVjZGF0YVtyXVtpXSA9IChtb2RJbmRleCA+PSAwKT8gbW9kUG9seS5nZXQobW9kSW5kZXgpIDogMDtcclxuXHRcdH1cclxuXHJcblx0fVxyXG5cdFxyXG5cdHZhciB0b3RhbENvZGVDb3VudCA9IDA7XHJcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCByc0Jsb2Nrcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0dG90YWxDb2RlQ291bnQgKz0gcnNCbG9ja3NbaV0udG90YWxDb3VudDtcclxuXHR9XHJcblxyXG5cdHZhciBkYXRhID0gbmV3IEFycmF5KHRvdGFsQ29kZUNvdW50KTtcclxuXHR2YXIgaW5kZXggPSAwO1xyXG5cclxuXHRmb3IgKHZhciBpID0gMDsgaSA8IG1heERjQ291bnQ7IGkrKykge1xyXG5cdFx0Zm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIrKykge1xyXG5cdFx0XHRpZiAoaSA8IGRjZGF0YVtyXS5sZW5ndGgpIHtcclxuXHRcdFx0XHRkYXRhW2luZGV4KytdID0gZGNkYXRhW3JdW2ldO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmb3IgKHZhciBpID0gMDsgaSA8IG1heEVjQ291bnQ7IGkrKykge1xyXG5cdFx0Zm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIrKykge1xyXG5cdFx0XHRpZiAoaSA8IGVjZGF0YVtyXS5sZW5ndGgpIHtcclxuXHRcdFx0XHRkYXRhW2luZGV4KytdID0gZWNkYXRhW3JdW2ldO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZGF0YTtcclxuXHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFFSTW9kZVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxudmFyIFFSTW9kZSA9IHtcclxuXHRNT0RFX05VTUJFUiA6XHRcdDEgPDwgMCxcclxuXHRNT0RFX0FMUEhBX05VTSA6IFx0MSA8PCAxLFxyXG5cdE1PREVfOEJJVF9CWVRFIDogXHQxIDw8IDIsXHJcblx0TU9ERV9LQU5KSSA6XHRcdDEgPDwgM1xyXG59O1xyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gUVJFcnJvckNvcnJlY3RMZXZlbFxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gXHJcbnZhciBRUkVycm9yQ29ycmVjdExldmVsID0ge1xyXG5cdEwgOiAxLFxyXG5cdE0gOiAwLFxyXG5cdFEgOiAzLFxyXG5cdEggOiAyXHJcbn07XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBRUk1hc2tQYXR0ZXJuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG52YXIgUVJNYXNrUGF0dGVybiA9IHtcclxuXHRQQVRURVJOMDAwIDogMCxcclxuXHRQQVRURVJOMDAxIDogMSxcclxuXHRQQVRURVJOMDEwIDogMixcclxuXHRQQVRURVJOMDExIDogMyxcclxuXHRQQVRURVJOMTAwIDogNCxcclxuXHRQQVRURVJOMTAxIDogNSxcclxuXHRQQVRURVJOMTEwIDogNixcclxuXHRQQVRURVJOMTExIDogN1xyXG59O1xyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gUVJVdGlsXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiBcclxudmFyIFFSVXRpbCA9IHtcclxuXHJcbiAgICBQQVRURVJOX1BPU0lUSU9OX1RBQkxFIDogW1xyXG5cdCAgICBbXSxcclxuXHQgICAgWzYsIDE4XSxcclxuXHQgICAgWzYsIDIyXSxcclxuXHQgICAgWzYsIDI2XSxcclxuXHQgICAgWzYsIDMwXSxcclxuXHQgICAgWzYsIDM0XSxcclxuXHQgICAgWzYsIDIyLCAzOF0sXHJcblx0ICAgIFs2LCAyNCwgNDJdLFxyXG5cdCAgICBbNiwgMjYsIDQ2XSxcclxuXHQgICAgWzYsIDI4LCA1MF0sXHJcblx0ICAgIFs2LCAzMCwgNTRdLFx0XHRcclxuXHQgICAgWzYsIDMyLCA1OF0sXHJcblx0ICAgIFs2LCAzNCwgNjJdLFxyXG5cdCAgICBbNiwgMjYsIDQ2LCA2Nl0sXHJcblx0ICAgIFs2LCAyNiwgNDgsIDcwXSxcclxuXHQgICAgWzYsIDI2LCA1MCwgNzRdLFxyXG5cdCAgICBbNiwgMzAsIDU0LCA3OF0sXHJcblx0ICAgIFs2LCAzMCwgNTYsIDgyXSxcclxuXHQgICAgWzYsIDMwLCA1OCwgODZdLFxyXG5cdCAgICBbNiwgMzQsIDYyLCA5MF0sXHJcblx0ICAgIFs2LCAyOCwgNTAsIDcyLCA5NF0sXHJcblx0ICAgIFs2LCAyNiwgNTAsIDc0LCA5OF0sXHJcblx0ICAgIFs2LCAzMCwgNTQsIDc4LCAxMDJdLFxyXG5cdCAgICBbNiwgMjgsIDU0LCA4MCwgMTA2XSxcclxuXHQgICAgWzYsIDMyLCA1OCwgODQsIDExMF0sXHJcblx0ICAgIFs2LCAzMCwgNTgsIDg2LCAxMTRdLFxyXG5cdCAgICBbNiwgMzQsIDYyLCA5MCwgMTE4XSxcclxuXHQgICAgWzYsIDI2LCA1MCwgNzQsIDk4LCAxMjJdLFxyXG5cdCAgICBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjZdLFxyXG5cdCAgICBbNiwgMjYsIDUyLCA3OCwgMTA0LCAxMzBdLFxyXG5cdCAgICBbNiwgMzAsIDU2LCA4MiwgMTA4LCAxMzRdLFxyXG5cdCAgICBbNiwgMzQsIDYwLCA4NiwgMTEyLCAxMzhdLFxyXG5cdCAgICBbNiwgMzAsIDU4LCA4NiwgMTE0LCAxNDJdLFxyXG5cdCAgICBbNiwgMzQsIDYyLCA5MCwgMTE4LCAxNDZdLFxyXG5cdCAgICBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjYsIDE1MF0sXHJcblx0ICAgIFs2LCAyNCwgNTAsIDc2LCAxMDIsIDEyOCwgMTU0XSxcclxuXHQgICAgWzYsIDI4LCA1NCwgODAsIDEwNiwgMTMyLCAxNThdLFxyXG5cdCAgICBbNiwgMzIsIDU4LCA4NCwgMTEwLCAxMzYsIDE2Ml0sXHJcblx0ICAgIFs2LCAyNiwgNTQsIDgyLCAxMTAsIDEzOCwgMTY2XSxcclxuXHQgICAgWzYsIDMwLCA1OCwgODYsIDExNCwgMTQyLCAxNzBdXHJcbiAgICBdLFxyXG5cclxuICAgIEcxNSA6ICgxIDw8IDEwKSB8ICgxIDw8IDgpIHwgKDEgPDwgNSkgfCAoMSA8PCA0KSB8ICgxIDw8IDIpIHwgKDEgPDwgMSkgfCAoMSA8PCAwKSxcclxuICAgIEcxOCA6ICgxIDw8IDEyKSB8ICgxIDw8IDExKSB8ICgxIDw8IDEwKSB8ICgxIDw8IDkpIHwgKDEgPDwgOCkgfCAoMSA8PCA1KSB8ICgxIDw8IDIpIHwgKDEgPDwgMCksXHJcbiAgICBHMTVfTUFTSyA6ICgxIDw8IDE0KSB8ICgxIDw8IDEyKSB8ICgxIDw8IDEwKVx0fCAoMSA8PCA0KSB8ICgxIDw8IDEpLFxyXG5cclxuICAgIGdldEJDSFR5cGVJbmZvIDogZnVuY3Rpb24oZGF0YSkge1xyXG5cdCAgICB2YXIgZCA9IGRhdGEgPDwgMTA7XHJcblx0ICAgIHdoaWxlIChRUlV0aWwuZ2V0QkNIRGlnaXQoZCkgLSBRUlV0aWwuZ2V0QkNIRGlnaXQoUVJVdGlsLkcxNSkgPj0gMCkge1xyXG5cdFx0ICAgIGQgXj0gKFFSVXRpbC5HMTUgPDwgKFFSVXRpbC5nZXRCQ0hEaWdpdChkKSAtIFFSVXRpbC5nZXRCQ0hEaWdpdChRUlV0aWwuRzE1KSApICk7IFx0XHJcblx0ICAgIH1cclxuXHQgICAgcmV0dXJuICggKGRhdGEgPDwgMTApIHwgZCkgXiBRUlV0aWwuRzE1X01BU0s7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldEJDSFR5cGVOdW1iZXIgOiBmdW5jdGlvbihkYXRhKSB7XHJcblx0ICAgIHZhciBkID0gZGF0YSA8PCAxMjtcclxuXHQgICAgd2hpbGUgKFFSVXRpbC5nZXRCQ0hEaWdpdChkKSAtIFFSVXRpbC5nZXRCQ0hEaWdpdChRUlV0aWwuRzE4KSA+PSAwKSB7XHJcblx0XHQgICAgZCBePSAoUVJVdGlsLkcxOCA8PCAoUVJVdGlsLmdldEJDSERpZ2l0KGQpIC0gUVJVdGlsLmdldEJDSERpZ2l0KFFSVXRpbC5HMTgpICkgKTsgXHRcclxuXHQgICAgfVxyXG5cdCAgICByZXR1cm4gKGRhdGEgPDwgMTIpIHwgZDtcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0QkNIRGlnaXQgOiBmdW5jdGlvbihkYXRhKSB7XHJcblxyXG5cdCAgICB2YXIgZGlnaXQgPSAwO1xyXG5cclxuXHQgICAgd2hpbGUgKGRhdGEgIT0gMCkge1xyXG5cdFx0ICAgIGRpZ2l0Kys7XHJcblx0XHQgICAgZGF0YSA+Pj49IDE7XHJcblx0ICAgIH1cclxuXHJcblx0ICAgIHJldHVybiBkaWdpdDtcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0UGF0dGVyblBvc2l0aW9uIDogZnVuY3Rpb24odHlwZU51bWJlcikge1xyXG5cdCAgICByZXR1cm4gUVJVdGlsLlBBVFRFUk5fUE9TSVRJT05fVEFCTEVbdHlwZU51bWJlciAtIDFdO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXRNYXNrIDogZnVuY3Rpb24obWFza1BhdHRlcm4sIGksIGopIHtcclxuXHQgICAgXHJcblx0ICAgIHN3aXRjaCAobWFza1BhdHRlcm4pIHtcclxuXHRcdCAgICBcclxuXHQgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMDAgOiByZXR1cm4gKGkgKyBqKSAlIDIgPT0gMDtcclxuXHQgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMDEgOiByZXR1cm4gaSAlIDIgPT0gMDtcclxuXHQgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMTAgOiByZXR1cm4gaiAlIDMgPT0gMDtcclxuXHQgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMTEgOiByZXR1cm4gKGkgKyBqKSAlIDMgPT0gMDtcclxuXHQgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMDAgOiByZXR1cm4gKE1hdGguZmxvb3IoaSAvIDIpICsgTWF0aC5mbG9vcihqIC8gMykgKSAlIDIgPT0gMDtcclxuXHQgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMDEgOiByZXR1cm4gKGkgKiBqKSAlIDIgKyAoaSAqIGopICUgMyA9PSAwO1xyXG5cdCAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMCA6IHJldHVybiAoIChpICogaikgJSAyICsgKGkgKiBqKSAlIDMpICUgMiA9PSAwO1xyXG5cdCAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMSA6IHJldHVybiAoIChpICogaikgJSAzICsgKGkgKyBqKSAlIDIpICUgMiA9PSAwO1xyXG5cclxuXHQgICAgZGVmYXVsdCA6XHJcblx0XHQgICAgdGhyb3cgbmV3IEVycm9yKFwiYmFkIG1hc2tQYXR0ZXJuOlwiICsgbWFza1BhdHRlcm4pO1xyXG5cdCAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGdldEVycm9yQ29ycmVjdFBvbHlub21pYWwgOiBmdW5jdGlvbihlcnJvckNvcnJlY3RMZW5ndGgpIHtcclxuXHJcblx0ICAgIHZhciBhID0gbmV3IFFSUG9seW5vbWlhbChbMV0sIDApO1xyXG5cclxuXHQgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlcnJvckNvcnJlY3RMZW5ndGg7IGkrKykge1xyXG5cdFx0ICAgIGEgPSBhLm11bHRpcGx5KG5ldyBRUlBvbHlub21pYWwoWzEsIFFSTWF0aC5nZXhwKGkpXSwgMCkgKTtcclxuXHQgICAgfVxyXG5cclxuXHQgICAgcmV0dXJuIGE7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldExlbmd0aEluQml0cyA6IGZ1bmN0aW9uKG1vZGUsIHR5cGUpIHtcclxuXHJcblx0ICAgIGlmICgxIDw9IHR5cGUgJiYgdHlwZSA8IDEwKSB7XHJcblxyXG5cdFx0ICAgIC8vIDEgLSA5XHJcblxyXG5cdFx0ICAgIHN3aXRjaChtb2RlKSB7XHJcblx0XHQgICAgY2FzZSBRUk1vZGUuTU9ERV9OVU1CRVIgXHQ6IHJldHVybiAxMDtcclxuXHRcdCAgICBjYXNlIFFSTW9kZS5NT0RFX0FMUEhBX05VTSBcdDogcmV0dXJuIDk7XHJcblx0XHQgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEVcdDogcmV0dXJuIDg7XHJcblx0XHQgICAgY2FzZSBRUk1vZGUuTU9ERV9LQU5KSSAgXHQ6IHJldHVybiA4O1xyXG5cdFx0ICAgIGRlZmF1bHQgOlxyXG5cdFx0XHQgICAgdGhyb3cgbmV3IEVycm9yKFwibW9kZTpcIiArIG1vZGUpO1xyXG5cdFx0ICAgIH1cclxuXHJcblx0ICAgIH0gZWxzZSBpZiAodHlwZSA8IDI3KSB7XHJcblxyXG5cdFx0ICAgIC8vIDEwIC0gMjZcclxuXHJcblx0XHQgICAgc3dpdGNoKG1vZGUpIHtcclxuXHRcdCAgICBjYXNlIFFSTW9kZS5NT0RFX05VTUJFUiBcdDogcmV0dXJuIDEyO1xyXG5cdFx0ICAgIGNhc2UgUVJNb2RlLk1PREVfQUxQSEFfTlVNIFx0OiByZXR1cm4gMTE7XHJcblx0XHQgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEVcdDogcmV0dXJuIDE2O1xyXG5cdFx0ICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkkgIFx0OiByZXR1cm4gMTA7XHJcblx0XHQgICAgZGVmYXVsdCA6XHJcblx0XHRcdCAgICB0aHJvdyBuZXcgRXJyb3IoXCJtb2RlOlwiICsgbW9kZSk7XHJcblx0XHQgICAgfVxyXG5cclxuXHQgICAgfSBlbHNlIGlmICh0eXBlIDwgNDEpIHtcclxuXHJcblx0XHQgICAgLy8gMjcgLSA0MFxyXG5cclxuXHRcdCAgICBzd2l0Y2gobW9kZSkge1xyXG5cdFx0ICAgIGNhc2UgUVJNb2RlLk1PREVfTlVNQkVSIFx0OiByZXR1cm4gMTQ7XHJcblx0XHQgICAgY2FzZSBRUk1vZGUuTU9ERV9BTFBIQV9OVU1cdDogcmV0dXJuIDEzO1xyXG5cdFx0ICAgIGNhc2UgUVJNb2RlLk1PREVfOEJJVF9CWVRFXHQ6IHJldHVybiAxNjtcclxuXHRcdCAgICBjYXNlIFFSTW9kZS5NT0RFX0tBTkpJICBcdDogcmV0dXJuIDEyO1xyXG5cdFx0ICAgIGRlZmF1bHQgOlxyXG5cdFx0XHQgICAgdGhyb3cgbmV3IEVycm9yKFwibW9kZTpcIiArIG1vZGUpO1xyXG5cdFx0ICAgIH1cclxuXHJcblx0ICAgIH0gZWxzZSB7XHJcblx0XHQgICAgdGhyb3cgbmV3IEVycm9yKFwidHlwZTpcIiArIHR5cGUpO1xyXG5cdCAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGdldExvc3RQb2ludCA6IGZ1bmN0aW9uKHFyQ29kZSkge1xyXG5cdCAgICBcclxuXHQgICAgdmFyIG1vZHVsZUNvdW50ID0gcXJDb2RlLmdldE1vZHVsZUNvdW50KCk7XHJcblx0ICAgIFxyXG5cdCAgICB2YXIgbG9zdFBvaW50ID0gMDtcclxuXHQgICAgXHJcblx0ICAgIC8vIExFVkVMMVxyXG5cdCAgICBcclxuXHQgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdysrKSB7XHJcblxyXG5cdFx0ICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50OyBjb2wrKykge1xyXG5cclxuXHRcdFx0ICAgIHZhciBzYW1lQ291bnQgPSAwO1xyXG5cdFx0XHQgICAgdmFyIGRhcmsgPSBxckNvZGUuaXNEYXJrKHJvdywgY29sKTtcclxuXHJcblx0XHRcdFx0Zm9yICh2YXIgciA9IC0xOyByIDw9IDE7IHIrKykge1xyXG5cclxuXHRcdFx0XHQgICAgaWYgKHJvdyArIHIgPCAwIHx8IG1vZHVsZUNvdW50IDw9IHJvdyArIHIpIHtcclxuXHRcdFx0XHRcdCAgICBjb250aW51ZTtcclxuXHRcdFx0XHQgICAgfVxyXG5cclxuXHRcdFx0XHQgICAgZm9yICh2YXIgYyA9IC0xOyBjIDw9IDE7IGMrKykge1xyXG5cclxuXHRcdFx0XHRcdCAgICBpZiAoY29sICsgYyA8IDAgfHwgbW9kdWxlQ291bnQgPD0gY29sICsgYykge1xyXG5cdFx0XHRcdFx0XHQgICAgY29udGludWU7XHJcblx0XHRcdFx0XHQgICAgfVxyXG5cclxuXHRcdFx0XHRcdCAgICBpZiAociA9PSAwICYmIGMgPT0gMCkge1xyXG5cdFx0XHRcdFx0XHQgICAgY29udGludWU7XHJcblx0XHRcdFx0XHQgICAgfVxyXG5cclxuXHRcdFx0XHRcdCAgICBpZiAoZGFyayA9PSBxckNvZGUuaXNEYXJrKHJvdyArIHIsIGNvbCArIGMpICkge1xyXG5cdFx0XHRcdFx0XHQgICAgc2FtZUNvdW50Kys7XHJcblx0XHRcdFx0XHQgICAgfVxyXG5cdFx0XHRcdCAgICB9XHJcblx0XHRcdCAgICB9XHJcblxyXG5cdFx0XHQgICAgaWYgKHNhbWVDb3VudCA+IDUpIHtcclxuXHRcdFx0XHQgICAgbG9zdFBvaW50ICs9ICgzICsgc2FtZUNvdW50IC0gNSk7XHJcblx0XHRcdCAgICB9XHJcblx0XHQgICAgfVxyXG5cdCAgICB9XHJcblxyXG5cdCAgICAvLyBMRVZFTDJcclxuXHJcblx0ICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50IC0gMTsgcm93KyspIHtcclxuXHRcdCAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudCAtIDE7IGNvbCsrKSB7XHJcblx0XHRcdCAgICB2YXIgY291bnQgPSAwO1xyXG5cdFx0XHQgICAgaWYgKHFyQ29kZS5pc0Rhcmsocm93LCAgICAgY29sICAgICkgKSBjb3VudCsrO1xyXG5cdFx0XHQgICAgaWYgKHFyQ29kZS5pc0Rhcmsocm93ICsgMSwgY29sICAgICkgKSBjb3VudCsrO1xyXG5cdFx0XHQgICAgaWYgKHFyQ29kZS5pc0Rhcmsocm93LCAgICAgY29sICsgMSkgKSBjb3VudCsrO1xyXG5cdFx0XHQgICAgaWYgKHFyQ29kZS5pc0Rhcmsocm93ICsgMSwgY29sICsgMSkgKSBjb3VudCsrO1xyXG5cdFx0XHQgICAgaWYgKGNvdW50ID09IDAgfHwgY291bnQgPT0gNCkge1xyXG5cdFx0XHRcdCAgICBsb3N0UG9pbnQgKz0gMztcclxuXHRcdFx0ICAgIH1cclxuXHRcdCAgICB9XHJcblx0ICAgIH1cclxuXHJcblx0ICAgIC8vIExFVkVMM1xyXG5cclxuXHQgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdysrKSB7XHJcblx0XHQgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQgLSA2OyBjb2wrKykge1xyXG5cdFx0XHQgICAgaWYgKHFyQ29kZS5pc0Rhcmsocm93LCBjb2wpXHJcblx0XHRcdFx0XHQgICAgJiYgIXFyQ29kZS5pc0Rhcmsocm93LCBjb2wgKyAxKVxyXG5cdFx0XHRcdFx0ICAgICYmICBxckNvZGUuaXNEYXJrKHJvdywgY29sICsgMilcclxuXHRcdFx0XHRcdCAgICAmJiAgcXJDb2RlLmlzRGFyayhyb3csIGNvbCArIDMpXHJcblx0XHRcdFx0XHQgICAgJiYgIHFyQ29kZS5pc0Rhcmsocm93LCBjb2wgKyA0KVxyXG5cdFx0XHRcdFx0ICAgICYmICFxckNvZGUuaXNEYXJrKHJvdywgY29sICsgNSlcclxuXHRcdFx0XHRcdCAgICAmJiAgcXJDb2RlLmlzRGFyayhyb3csIGNvbCArIDYpICkge1xyXG5cdFx0XHRcdCAgICBsb3N0UG9pbnQgKz0gNDA7XHJcblx0XHRcdCAgICB9XHJcblx0XHQgICAgfVxyXG5cdCAgICB9XHJcblxyXG5cdCAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sKyspIHtcclxuXHRcdCAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudCAtIDY7IHJvdysrKSB7XHJcblx0XHRcdCAgICBpZiAocXJDb2RlLmlzRGFyayhyb3csIGNvbClcclxuXHRcdFx0XHRcdCAgICAmJiAhcXJDb2RlLmlzRGFyayhyb3cgKyAxLCBjb2wpXHJcblx0XHRcdFx0XHQgICAgJiYgIHFyQ29kZS5pc0Rhcmsocm93ICsgMiwgY29sKVxyXG5cdFx0XHRcdFx0ICAgICYmICBxckNvZGUuaXNEYXJrKHJvdyArIDMsIGNvbClcclxuXHRcdFx0XHRcdCAgICAmJiAgcXJDb2RlLmlzRGFyayhyb3cgKyA0LCBjb2wpXHJcblx0XHRcdFx0XHQgICAgJiYgIXFyQ29kZS5pc0Rhcmsocm93ICsgNSwgY29sKVxyXG5cdFx0XHRcdFx0ICAgICYmICBxckNvZGUuaXNEYXJrKHJvdyArIDYsIGNvbCkgKSB7XHJcblx0XHRcdFx0ICAgIGxvc3RQb2ludCArPSA0MDtcclxuXHRcdFx0ICAgIH1cclxuXHRcdCAgICB9XHJcblx0ICAgIH1cclxuXHJcblx0ICAgIC8vIExFVkVMNFxyXG5cdCAgICBcclxuXHQgICAgdmFyIGRhcmtDb3VudCA9IDA7XHJcblxyXG5cdCAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sKyspIHtcclxuXHRcdCAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93KyspIHtcclxuXHRcdFx0ICAgIGlmIChxckNvZGUuaXNEYXJrKHJvdywgY29sKSApIHtcclxuXHRcdFx0XHQgICAgZGFya0NvdW50Kys7XHJcblx0XHRcdCAgICB9XHJcblx0XHQgICAgfVxyXG5cdCAgICB9XHJcblx0ICAgIFxyXG5cdCAgICB2YXIgcmF0aW8gPSBNYXRoLmFicygxMDAgKiBkYXJrQ291bnQgLyBtb2R1bGVDb3VudCAvIG1vZHVsZUNvdW50IC0gNTApIC8gNTtcclxuXHQgICAgbG9zdFBvaW50ICs9IHJhdGlvICogMTA7XHJcblxyXG5cdCAgICByZXR1cm4gbG9zdFBvaW50O1x0XHRcclxuICAgIH1cclxuXHJcbn07XHJcblxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gUVJNYXRoXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG52YXIgUVJNYXRoID0ge1xyXG5cclxuXHRnbG9nIDogZnVuY3Rpb24obikge1xyXG5cdFxyXG5cdFx0aWYgKG4gPCAxKSB7XHJcblx0XHRcdHRocm93IG5ldyBFcnJvcihcImdsb2coXCIgKyBuICsgXCIpXCIpO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHRyZXR1cm4gUVJNYXRoLkxPR19UQUJMRVtuXTtcclxuXHR9LFxyXG5cdFxyXG5cdGdleHAgOiBmdW5jdGlvbihuKSB7XHJcblx0XHJcblx0XHR3aGlsZSAobiA8IDApIHtcclxuXHRcdFx0biArPSAyNTU7XHJcblx0XHR9XHJcblx0XHJcblx0XHR3aGlsZSAobiA+PSAyNTYpIHtcclxuXHRcdFx0biAtPSAyNTU7XHJcblx0XHR9XHJcblx0XHJcblx0XHRyZXR1cm4gUVJNYXRoLkVYUF9UQUJMRVtuXTtcclxuXHR9LFxyXG5cdFxyXG5cdEVYUF9UQUJMRSA6IG5ldyBBcnJheSgyNTYpLFxyXG5cdFxyXG5cdExPR19UQUJMRSA6IG5ldyBBcnJheSgyNTYpXHJcblxyXG59O1xyXG5cdFxyXG5mb3IgKHZhciBpID0gMDsgaSA8IDg7IGkrKykge1xyXG5cdFFSTWF0aC5FWFBfVEFCTEVbaV0gPSAxIDw8IGk7XHJcbn1cclxuZm9yICh2YXIgaSA9IDg7IGkgPCAyNTY7IGkrKykge1xyXG5cdFFSTWF0aC5FWFBfVEFCTEVbaV0gPSBRUk1hdGguRVhQX1RBQkxFW2kgLSA0XVxyXG5cdFx0XiBRUk1hdGguRVhQX1RBQkxFW2kgLSA1XVxyXG5cdFx0XiBRUk1hdGguRVhQX1RBQkxFW2kgLSA2XVxyXG5cdFx0XiBRUk1hdGguRVhQX1RBQkxFW2kgLSA4XTtcclxufVxyXG5mb3IgKHZhciBpID0gMDsgaSA8IDI1NTsgaSsrKSB7XHJcblx0UVJNYXRoLkxPR19UQUJMRVtRUk1hdGguRVhQX1RBQkxFW2ldIF0gPSBpO1xyXG59XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBRUlBvbHlub21pYWxcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmZ1bmN0aW9uIFFSUG9seW5vbWlhbChudW0sIHNoaWZ0KSB7XHJcblxyXG5cdGlmIChudW0ubGVuZ3RoID09IHVuZGVmaW5lZCkge1xyXG5cdFx0dGhyb3cgbmV3IEVycm9yKG51bS5sZW5ndGggKyBcIi9cIiArIHNoaWZ0KTtcclxuXHR9XHJcblxyXG5cdHZhciBvZmZzZXQgPSAwO1xyXG5cclxuXHR3aGlsZSAob2Zmc2V0IDwgbnVtLmxlbmd0aCAmJiBudW1bb2Zmc2V0XSA9PSAwKSB7XHJcblx0XHRvZmZzZXQrKztcclxuXHR9XHJcblxyXG5cdHRoaXMubnVtID0gbmV3IEFycmF5KG51bS5sZW5ndGggLSBvZmZzZXQgKyBzaGlmdCk7XHJcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBudW0ubGVuZ3RoIC0gb2Zmc2V0OyBpKyspIHtcclxuXHRcdHRoaXMubnVtW2ldID0gbnVtW2kgKyBvZmZzZXRdO1xyXG5cdH1cclxufVxyXG5cclxuUVJQb2x5bm9taWFsLnByb3RvdHlwZSA9IHtcclxuXHJcblx0Z2V0IDogZnVuY3Rpb24oaW5kZXgpIHtcclxuXHRcdHJldHVybiB0aGlzLm51bVtpbmRleF07XHJcblx0fSxcclxuXHRcclxuXHRnZXRMZW5ndGggOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB0aGlzLm51bS5sZW5ndGg7XHJcblx0fSxcclxuXHRcclxuXHRtdWx0aXBseSA6IGZ1bmN0aW9uKGUpIHtcclxuXHRcclxuXHRcdHZhciBudW0gPSBuZXcgQXJyYXkodGhpcy5nZXRMZW5ndGgoKSArIGUuZ2V0TGVuZ3RoKCkgLSAxKTtcclxuXHRcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5nZXRMZW5ndGgoKTsgaSsrKSB7XHJcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZS5nZXRMZW5ndGgoKTsgaisrKSB7XHJcblx0XHRcdFx0bnVtW2kgKyBqXSBePSBRUk1hdGguZ2V4cChRUk1hdGguZ2xvZyh0aGlzLmdldChpKSApICsgUVJNYXRoLmdsb2coZS5nZXQoaikgKSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHJcblx0XHRyZXR1cm4gbmV3IFFSUG9seW5vbWlhbChudW0sIDApO1xyXG5cdH0sXHJcblx0XHJcblx0bW9kIDogZnVuY3Rpb24oZSkge1xyXG5cdFxyXG5cdFx0aWYgKHRoaXMuZ2V0TGVuZ3RoKCkgLSBlLmdldExlbmd0aCgpIDwgMCkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH1cclxuXHRcclxuXHRcdHZhciByYXRpbyA9IFFSTWF0aC5nbG9nKHRoaXMuZ2V0KDApICkgLSBRUk1hdGguZ2xvZyhlLmdldCgwKSApO1xyXG5cdFxyXG5cdFx0dmFyIG51bSA9IG5ldyBBcnJheSh0aGlzLmdldExlbmd0aCgpICk7XHJcblx0XHRcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5nZXRMZW5ndGgoKTsgaSsrKSB7XHJcblx0XHRcdG51bVtpXSA9IHRoaXMuZ2V0KGkpO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGUuZ2V0TGVuZ3RoKCk7IGkrKykge1xyXG5cdFx0XHRudW1baV0gXj0gUVJNYXRoLmdleHAoUVJNYXRoLmdsb2coZS5nZXQoaSkgKSArIHJhdGlvKTtcclxuXHRcdH1cclxuXHRcclxuXHRcdC8vIHJlY3Vyc2l2ZSBjYWxsXHJcblx0XHRyZXR1cm4gbmV3IFFSUG9seW5vbWlhbChudW0sIDApLm1vZChlKTtcclxuXHR9XHJcbn07XHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBRUlJTQmxvY2tcclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbmZ1bmN0aW9uIFFSUlNCbG9jayh0b3RhbENvdW50LCBkYXRhQ291bnQpIHtcclxuXHR0aGlzLnRvdGFsQ291bnQgPSB0b3RhbENvdW50O1xyXG5cdHRoaXMuZGF0YUNvdW50ICA9IGRhdGFDb3VudDtcclxufVxyXG5cclxuUVJSU0Jsb2NrLlJTX0JMT0NLX1RBQkxFID0gW1xyXG5cclxuXHQvLyBMXHJcblx0Ly8gTVxyXG5cdC8vIFFcclxuXHQvLyBIXHJcblxyXG5cdC8vIDFcclxuXHRbMSwgMjYsIDE5XSxcclxuXHRbMSwgMjYsIDE2XSxcclxuXHRbMSwgMjYsIDEzXSxcclxuXHRbMSwgMjYsIDldLFxyXG5cdFxyXG5cdC8vIDJcclxuXHRbMSwgNDQsIDM0XSxcclxuXHRbMSwgNDQsIDI4XSxcclxuXHRbMSwgNDQsIDIyXSxcclxuXHRbMSwgNDQsIDE2XSxcclxuXHJcblx0Ly8gM1xyXG5cdFsxLCA3MCwgNTVdLFxyXG5cdFsxLCA3MCwgNDRdLFxyXG5cdFsyLCAzNSwgMTddLFxyXG5cdFsyLCAzNSwgMTNdLFxyXG5cclxuXHQvLyA0XHRcdFxyXG5cdFsxLCAxMDAsIDgwXSxcclxuXHRbMiwgNTAsIDMyXSxcclxuXHRbMiwgNTAsIDI0XSxcclxuXHRbNCwgMjUsIDldLFxyXG5cdFxyXG5cdC8vIDVcclxuXHRbMSwgMTM0LCAxMDhdLFxyXG5cdFsyLCA2NywgNDNdLFxyXG5cdFsyLCAzMywgMTUsIDIsIDM0LCAxNl0sXHJcblx0WzIsIDMzLCAxMSwgMiwgMzQsIDEyXSxcclxuXHRcclxuXHQvLyA2XHJcblx0WzIsIDg2LCA2OF0sXHJcblx0WzQsIDQzLCAyN10sXHJcblx0WzQsIDQzLCAxOV0sXHJcblx0WzQsIDQzLCAxNV0sXHJcblx0XHJcblx0Ly8gN1x0XHRcclxuXHRbMiwgOTgsIDc4XSxcclxuXHRbNCwgNDksIDMxXSxcclxuXHRbMiwgMzIsIDE0LCA0LCAzMywgMTVdLFxyXG5cdFs0LCAzOSwgMTMsIDEsIDQwLCAxNF0sXHJcblx0XHJcblx0Ly8gOFxyXG5cdFsyLCAxMjEsIDk3XSxcclxuXHRbMiwgNjAsIDM4LCAyLCA2MSwgMzldLFxyXG5cdFs0LCA0MCwgMTgsIDIsIDQxLCAxOV0sXHJcblx0WzQsIDQwLCAxNCwgMiwgNDEsIDE1XSxcclxuXHRcclxuXHQvLyA5XHJcblx0WzIsIDE0NiwgMTE2XSxcclxuXHRbMywgNTgsIDM2LCAyLCA1OSwgMzddLFxyXG5cdFs0LCAzNiwgMTYsIDQsIDM3LCAxN10sXHJcblx0WzQsIDM2LCAxMiwgNCwgMzcsIDEzXSxcclxuXHRcclxuXHQvLyAxMFx0XHRcclxuXHRbMiwgODYsIDY4LCAyLCA4NywgNjldLFxyXG5cdFs0LCA2OSwgNDMsIDEsIDcwLCA0NF0sXHJcblx0WzYsIDQzLCAxOSwgMiwgNDQsIDIwXSxcclxuXHRbNiwgNDMsIDE1LCAyLCA0NCwgMTZdLFxyXG5cclxuXHQvLyAxMVxyXG5cdFs0LCAxMDEsIDgxXSxcclxuXHRbMSwgODAsIDUwLCA0LCA4MSwgNTFdLFxyXG5cdFs0LCA1MCwgMjIsIDQsIDUxLCAyM10sXHJcblx0WzMsIDM2LCAxMiwgOCwgMzcsIDEzXSxcclxuXHJcblx0Ly8gMTJcclxuXHRbMiwgMTE2LCA5MiwgMiwgMTE3LCA5M10sXHJcblx0WzYsIDU4LCAzNiwgMiwgNTksIDM3XSxcclxuXHRbNCwgNDYsIDIwLCA2LCA0NywgMjFdLFxyXG5cdFs3LCA0MiwgMTQsIDQsIDQzLCAxNV0sXHJcblxyXG5cdC8vIDEzXHJcblx0WzQsIDEzMywgMTA3XSxcclxuXHRbOCwgNTksIDM3LCAxLCA2MCwgMzhdLFxyXG5cdFs4LCA0NCwgMjAsIDQsIDQ1LCAyMV0sXHJcblx0WzEyLCAzMywgMTEsIDQsIDM0LCAxMl0sXHJcblxyXG5cdC8vIDE0XHJcblx0WzMsIDE0NSwgMTE1LCAxLCAxNDYsIDExNl0sXHJcblx0WzQsIDY0LCA0MCwgNSwgNjUsIDQxXSxcclxuXHRbMTEsIDM2LCAxNiwgNSwgMzcsIDE3XSxcclxuXHRbMTEsIDM2LCAxMiwgNSwgMzcsIDEzXSxcclxuXHJcblx0Ly8gMTVcclxuXHRbNSwgMTA5LCA4NywgMSwgMTEwLCA4OF0sXHJcblx0WzUsIDY1LCA0MSwgNSwgNjYsIDQyXSxcclxuXHRbNSwgNTQsIDI0LCA3LCA1NSwgMjVdLFxyXG5cdFsxMSwgMzYsIDEyXSxcclxuXHJcblx0Ly8gMTZcclxuXHRbNSwgMTIyLCA5OCwgMSwgMTIzLCA5OV0sXHJcblx0WzcsIDczLCA0NSwgMywgNzQsIDQ2XSxcclxuXHRbMTUsIDQzLCAxOSwgMiwgNDQsIDIwXSxcclxuXHRbMywgNDUsIDE1LCAxMywgNDYsIDE2XSxcclxuXHJcblx0Ly8gMTdcclxuXHRbMSwgMTM1LCAxMDcsIDUsIDEzNiwgMTA4XSxcclxuXHRbMTAsIDc0LCA0NiwgMSwgNzUsIDQ3XSxcclxuXHRbMSwgNTAsIDIyLCAxNSwgNTEsIDIzXSxcclxuXHRbMiwgNDIsIDE0LCAxNywgNDMsIDE1XSxcclxuXHJcblx0Ly8gMThcclxuXHRbNSwgMTUwLCAxMjAsIDEsIDE1MSwgMTIxXSxcclxuXHRbOSwgNjksIDQzLCA0LCA3MCwgNDRdLFxyXG5cdFsxNywgNTAsIDIyLCAxLCA1MSwgMjNdLFxyXG5cdFsyLCA0MiwgMTQsIDE5LCA0MywgMTVdLFxyXG5cclxuXHQvLyAxOVxyXG5cdFszLCAxNDEsIDExMywgNCwgMTQyLCAxMTRdLFxyXG5cdFszLCA3MCwgNDQsIDExLCA3MSwgNDVdLFxyXG5cdFsxNywgNDcsIDIxLCA0LCA0OCwgMjJdLFxyXG5cdFs5LCAzOSwgMTMsIDE2LCA0MCwgMTRdLFxyXG5cclxuXHQvLyAyMFxyXG5cdFszLCAxMzUsIDEwNywgNSwgMTM2LCAxMDhdLFxyXG5cdFszLCA2NywgNDEsIDEzLCA2OCwgNDJdLFxyXG5cdFsxNSwgNTQsIDI0LCA1LCA1NSwgMjVdLFxyXG5cdFsxNSwgNDMsIDE1LCAxMCwgNDQsIDE2XSxcclxuXHJcblx0Ly8gMjFcclxuXHRbNCwgMTQ0LCAxMTYsIDQsIDE0NSwgMTE3XSxcclxuXHRbMTcsIDY4LCA0Ml0sXHJcblx0WzE3LCA1MCwgMjIsIDYsIDUxLCAyM10sXHJcblx0WzE5LCA0NiwgMTYsIDYsIDQ3LCAxN10sXHJcblxyXG5cdC8vIDIyXHJcblx0WzIsIDEzOSwgMTExLCA3LCAxNDAsIDExMl0sXHJcblx0WzE3LCA3NCwgNDZdLFxyXG5cdFs3LCA1NCwgMjQsIDE2LCA1NSwgMjVdLFxyXG5cdFszNCwgMzcsIDEzXSxcclxuXHJcblx0Ly8gMjNcclxuXHRbNCwgMTUxLCAxMjEsIDUsIDE1MiwgMTIyXSxcclxuXHRbNCwgNzUsIDQ3LCAxNCwgNzYsIDQ4XSxcclxuXHRbMTEsIDU0LCAyNCwgMTQsIDU1LCAyNV0sXHJcblx0WzE2LCA0NSwgMTUsIDE0LCA0NiwgMTZdLFxyXG5cclxuXHQvLyAyNFxyXG5cdFs2LCAxNDcsIDExNywgNCwgMTQ4LCAxMThdLFxyXG5cdFs2LCA3MywgNDUsIDE0LCA3NCwgNDZdLFxyXG5cdFsxMSwgNTQsIDI0LCAxNiwgNTUsIDI1XSxcclxuXHRbMzAsIDQ2LCAxNiwgMiwgNDcsIDE3XSxcclxuXHJcblx0Ly8gMjVcclxuXHRbOCwgMTMyLCAxMDYsIDQsIDEzMywgMTA3XSxcclxuXHRbOCwgNzUsIDQ3LCAxMywgNzYsIDQ4XSxcclxuXHRbNywgNTQsIDI0LCAyMiwgNTUsIDI1XSxcclxuXHRbMjIsIDQ1LCAxNSwgMTMsIDQ2LCAxNl0sXHJcblxyXG5cdC8vIDI2XHJcblx0WzEwLCAxNDIsIDExNCwgMiwgMTQzLCAxMTVdLFxyXG5cdFsxOSwgNzQsIDQ2LCA0LCA3NSwgNDddLFxyXG5cdFsyOCwgNTAsIDIyLCA2LCA1MSwgMjNdLFxyXG5cdFszMywgNDYsIDE2LCA0LCA0NywgMTddLFxyXG5cclxuXHQvLyAyN1xyXG5cdFs4LCAxNTIsIDEyMiwgNCwgMTUzLCAxMjNdLFxyXG5cdFsyMiwgNzMsIDQ1LCAzLCA3NCwgNDZdLFxyXG5cdFs4LCA1MywgMjMsIDI2LCA1NCwgMjRdLFxyXG5cdFsxMiwgNDUsIDE1LCAyOCwgNDYsIDE2XSxcclxuXHJcblx0Ly8gMjhcclxuXHRbMywgMTQ3LCAxMTcsIDEwLCAxNDgsIDExOF0sXHJcblx0WzMsIDczLCA0NSwgMjMsIDc0LCA0Nl0sXHJcblx0WzQsIDU0LCAyNCwgMzEsIDU1LCAyNV0sXHJcblx0WzExLCA0NSwgMTUsIDMxLCA0NiwgMTZdLFxyXG5cclxuXHQvLyAyOVxyXG5cdFs3LCAxNDYsIDExNiwgNywgMTQ3LCAxMTddLFxyXG5cdFsyMSwgNzMsIDQ1LCA3LCA3NCwgNDZdLFxyXG5cdFsxLCA1MywgMjMsIDM3LCA1NCwgMjRdLFxyXG5cdFsxOSwgNDUsIDE1LCAyNiwgNDYsIDE2XSxcclxuXHJcblx0Ly8gMzBcclxuXHRbNSwgMTQ1LCAxMTUsIDEwLCAxNDYsIDExNl0sXHJcblx0WzE5LCA3NSwgNDcsIDEwLCA3NiwgNDhdLFxyXG5cdFsxNSwgNTQsIDI0LCAyNSwgNTUsIDI1XSxcclxuXHRbMjMsIDQ1LCAxNSwgMjUsIDQ2LCAxNl0sXHJcblxyXG5cdC8vIDMxXHJcblx0WzEzLCAxNDUsIDExNSwgMywgMTQ2LCAxMTZdLFxyXG5cdFsyLCA3NCwgNDYsIDI5LCA3NSwgNDddLFxyXG5cdFs0MiwgNTQsIDI0LCAxLCA1NSwgMjVdLFxyXG5cdFsyMywgNDUsIDE1LCAyOCwgNDYsIDE2XSxcclxuXHJcblx0Ly8gMzJcclxuXHRbMTcsIDE0NSwgMTE1XSxcclxuXHRbMTAsIDc0LCA0NiwgMjMsIDc1LCA0N10sXHJcblx0WzEwLCA1NCwgMjQsIDM1LCA1NSwgMjVdLFxyXG5cdFsxOSwgNDUsIDE1LCAzNSwgNDYsIDE2XSxcclxuXHJcblx0Ly8gMzNcclxuXHRbMTcsIDE0NSwgMTE1LCAxLCAxNDYsIDExNl0sXHJcblx0WzE0LCA3NCwgNDYsIDIxLCA3NSwgNDddLFxyXG5cdFsyOSwgNTQsIDI0LCAxOSwgNTUsIDI1XSxcclxuXHRbMTEsIDQ1LCAxNSwgNDYsIDQ2LCAxNl0sXHJcblxyXG5cdC8vIDM0XHJcblx0WzEzLCAxNDUsIDExNSwgNiwgMTQ2LCAxMTZdLFxyXG5cdFsxNCwgNzQsIDQ2LCAyMywgNzUsIDQ3XSxcclxuXHRbNDQsIDU0LCAyNCwgNywgNTUsIDI1XSxcclxuXHRbNTksIDQ2LCAxNiwgMSwgNDcsIDE3XSxcclxuXHJcblx0Ly8gMzVcclxuXHRbMTIsIDE1MSwgMTIxLCA3LCAxNTIsIDEyMl0sXHJcblx0WzEyLCA3NSwgNDcsIDI2LCA3NiwgNDhdLFxyXG5cdFszOSwgNTQsIDI0LCAxNCwgNTUsIDI1XSxcclxuXHRbMjIsIDQ1LCAxNSwgNDEsIDQ2LCAxNl0sXHJcblxyXG5cdC8vIDM2XHJcblx0WzYsIDE1MSwgMTIxLCAxNCwgMTUyLCAxMjJdLFxyXG5cdFs2LCA3NSwgNDcsIDM0LCA3NiwgNDhdLFxyXG5cdFs0NiwgNTQsIDI0LCAxMCwgNTUsIDI1XSxcclxuXHRbMiwgNDUsIDE1LCA2NCwgNDYsIDE2XSxcclxuXHJcblx0Ly8gMzdcclxuXHRbMTcsIDE1MiwgMTIyLCA0LCAxNTMsIDEyM10sXHJcblx0WzI5LCA3NCwgNDYsIDE0LCA3NSwgNDddLFxyXG5cdFs0OSwgNTQsIDI0LCAxMCwgNTUsIDI1XSxcclxuXHRbMjQsIDQ1LCAxNSwgNDYsIDQ2LCAxNl0sXHJcblxyXG5cdC8vIDM4XHJcblx0WzQsIDE1MiwgMTIyLCAxOCwgMTUzLCAxMjNdLFxyXG5cdFsxMywgNzQsIDQ2LCAzMiwgNzUsIDQ3XSxcclxuXHRbNDgsIDU0LCAyNCwgMTQsIDU1LCAyNV0sXHJcblx0WzQyLCA0NSwgMTUsIDMyLCA0NiwgMTZdLFxyXG5cclxuXHQvLyAzOVxyXG5cdFsyMCwgMTQ3LCAxMTcsIDQsIDE0OCwgMTE4XSxcclxuXHRbNDAsIDc1LCA0NywgNywgNzYsIDQ4XSxcclxuXHRbNDMsIDU0LCAyNCwgMjIsIDU1LCAyNV0sXHJcblx0WzEwLCA0NSwgMTUsIDY3LCA0NiwgMTZdLFxyXG5cclxuXHQvLyA0MFxyXG5cdFsxOSwgMTQ4LCAxMTgsIDYsIDE0OSwgMTE5XSxcclxuXHRbMTgsIDc1LCA0NywgMzEsIDc2LCA0OF0sXHJcblx0WzM0LCA1NCwgMjQsIDM0LCA1NSwgMjVdLFxyXG5cdFsyMCwgNDUsIDE1LCA2MSwgNDYsIDE2XVxyXG5dO1xyXG5cclxuUVJSU0Jsb2NrLmdldFJTQmxvY2tzID0gZnVuY3Rpb24odHlwZU51bWJlciwgZXJyb3JDb3JyZWN0TGV2ZWwpIHtcclxuXHRcclxuXHR2YXIgcnNCbG9jayA9IFFSUlNCbG9jay5nZXRSc0Jsb2NrVGFibGUodHlwZU51bWJlciwgZXJyb3JDb3JyZWN0TGV2ZWwpO1xyXG5cdFxyXG5cdGlmIChyc0Jsb2NrID09IHVuZGVmaW5lZCkge1xyXG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiYmFkIHJzIGJsb2NrIEAgdHlwZU51bWJlcjpcIiArIHR5cGVOdW1iZXIgKyBcIi9lcnJvckNvcnJlY3RMZXZlbDpcIiArIGVycm9yQ29ycmVjdExldmVsKTtcclxuXHR9XHJcblxyXG5cdHZhciBsZW5ndGggPSByc0Jsb2NrLmxlbmd0aCAvIDM7XHJcblx0XHJcblx0dmFyIGxpc3QgPSBuZXcgQXJyYXkoKTtcclxuXHRcclxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcblxyXG5cdFx0dmFyIGNvdW50ID0gcnNCbG9ja1tpICogMyArIDBdO1xyXG5cdFx0dmFyIHRvdGFsQ291bnQgPSByc0Jsb2NrW2kgKiAzICsgMV07XHJcblx0XHR2YXIgZGF0YUNvdW50ICA9IHJzQmxvY2tbaSAqIDMgKyAyXTtcclxuXHJcblx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGNvdW50OyBqKyspIHtcclxuXHRcdFx0bGlzdC5wdXNoKG5ldyBRUlJTQmxvY2sodG90YWxDb3VudCwgZGF0YUNvdW50KSApO1x0XHJcblx0XHR9XHJcblx0fVxyXG5cdFxyXG5cdHJldHVybiBsaXN0O1xyXG59XHJcblxyXG5RUlJTQmxvY2suZ2V0UnNCbG9ja1RhYmxlID0gZnVuY3Rpb24odHlwZU51bWJlciwgZXJyb3JDb3JyZWN0TGV2ZWwpIHtcclxuXHJcblx0c3dpdGNoKGVycm9yQ29ycmVjdExldmVsKSB7XHJcblx0Y2FzZSBRUkVycm9yQ29ycmVjdExldmVsLkwgOlxyXG5cdFx0cmV0dXJuIFFSUlNCbG9jay5SU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDBdO1xyXG5cdGNhc2UgUVJFcnJvckNvcnJlY3RMZXZlbC5NIDpcclxuXHRcdHJldHVybiBRUlJTQmxvY2suUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAxXTtcclxuXHRjYXNlIFFSRXJyb3JDb3JyZWN0TGV2ZWwuUSA6XHJcblx0XHRyZXR1cm4gUVJSU0Jsb2NrLlJTX0JMT0NLX1RBQkxFWyh0eXBlTnVtYmVyIC0gMSkgKiA0ICsgMl07XHJcblx0Y2FzZSBRUkVycm9yQ29ycmVjdExldmVsLkggOlxyXG5cdFx0cmV0dXJuIFFSUlNCbG9jay5SU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDNdO1xyXG5cdGRlZmF1bHQgOlxyXG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcclxuXHR9XHJcbn1cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFFSQml0QnVmZmVyXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5mdW5jdGlvbiBRUkJpdEJ1ZmZlcigpIHtcclxuXHR0aGlzLmJ1ZmZlciA9IG5ldyBBcnJheSgpO1xyXG5cdHRoaXMubGVuZ3RoID0gMDtcclxufVxyXG5cclxuUVJCaXRCdWZmZXIucHJvdG90eXBlID0ge1xyXG5cclxuXHRnZXQgOiBmdW5jdGlvbihpbmRleCkge1xyXG5cdFx0dmFyIGJ1ZkluZGV4ID0gTWF0aC5mbG9vcihpbmRleCAvIDgpO1xyXG5cdFx0cmV0dXJuICggKHRoaXMuYnVmZmVyW2J1ZkluZGV4XSA+Pj4gKDcgLSBpbmRleCAlIDgpICkgJiAxKSA9PSAxO1xyXG5cdH0sXHJcblx0XHJcblx0cHV0IDogZnVuY3Rpb24obnVtLCBsZW5ndGgpIHtcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dGhpcy5wdXRCaXQoICggKG51bSA+Pj4gKGxlbmd0aCAtIGkgLSAxKSApICYgMSkgPT0gMSk7XHJcblx0XHR9XHJcblx0fSxcclxuXHRcclxuXHRnZXRMZW5ndGhJbkJpdHMgOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB0aGlzLmxlbmd0aDtcclxuXHR9LFxyXG5cdFxyXG5cdHB1dEJpdCA6IGZ1bmN0aW9uKGJpdCkge1xyXG5cdFxyXG5cdFx0dmFyIGJ1ZkluZGV4ID0gTWF0aC5mbG9vcih0aGlzLmxlbmd0aCAvIDgpO1xyXG5cdFx0aWYgKHRoaXMuYnVmZmVyLmxlbmd0aCA8PSBidWZJbmRleCkge1xyXG5cdFx0XHR0aGlzLmJ1ZmZlci5wdXNoKDApO1xyXG5cdFx0fVxyXG5cdFxyXG5cdFx0aWYgKGJpdCkge1xyXG5cdFx0XHR0aGlzLmJ1ZmZlcltidWZJbmRleF0gfD0gKDB4ODAgPj4+ICh0aGlzLmxlbmd0aCAlIDgpICk7XHJcblx0XHR9XHJcblx0XHJcblx0XHR0aGlzLmxlbmd0aCsrO1xyXG5cdH1cclxufTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/4._Q&A/程式碼/Host2_Game.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e75dbxyPdZGi5ZhayAt05CV', 'Host2_Game');
// 4._Q&A/程式碼/Host2_Game.js

"use strict";

var gameModel = require("Model");

var TimeCount_js = require("Host3_GameTimeCountDown");

cc.Class({
  "extends": cc.Component,
  properties: {
    Result: {
      "default": [],
      type: cc.Sprite
    },
    ResultAnswered: {
      "default": [],
      type: cc.Node
    },
    PeopleAnswered: {
      "default": null,
      type: cc.Label
    },
    NowQuestionCount: {
      "default": null,
      type: cc.Label
    },
    Options: {
      "default": [],
      type: cc.Node
    },
    Question: {
      "default": null,
      type: cc.Label
    },
    Rank: {
      "default": [],
      type: cc.Node
    },
    ShowAnswerString: {
      "default": null,
      type: cc.Label
    },
    TimeBar: {
      "default": null,
      type: cc.Sprite
    },
    Timelight: {
      "default": null,
      type: cc.Sprite
    },
    RedTimeBar: {
      "default": null,
      type: cc.SpriteFrame
    },
    RedTimelight: {
      "default": null,
      type: cc.SpriteFrame
    }
  },
  onLoad: function onLoad() {
    this.timenode = cc.find("畫布/秒數處理/秒數");
    this.tensecsound = cc.find("畫布").getComponent(TimeCount_js);
    gameModel.XMLTimeLimit = true;
    gameModel.gametimelimit = 12;
    gameModel.gametimeCountDown = 12;
    this.lerp = 1.1 / gameModel.gametimelimit * 0.03;
    this.count = 0;
    this.c = 0;
    this.Answer = 2;
    this.alreadyred = false;
    this.schedule(this.TimeBarProgress, 0.03);
  },
  start: function start() {
    gameModel.GameStatusMessage = "open";
    this.ColorString = this.node.getComponent('ColorString'); //this.Question.string = gameModel.Question[gameModel.QuestionCount]
    //this.WebSocket_NumberOfLottery_Host();

    this.SeeResult = false;
    this.PeopleAnswered.string = 10;
    gameModel.AnswerResult = [10, 15, 20, 30];
    gameModel.people = 75;
    this.NowQuestionCount.string = gameModel.QuestionCount + "/" + gameModel.Question.length;

    for (var i = 0; i < 4; i++) {
      //this.Options[i].getChildByName("選項文字").getComponent(cc.Label).string = gameModel.Options[i];
      this.OpacityAni_Start(this.Options[i].getChildByName("選項文字"));
      this.OpacityAni_Start(this.Options[i].getChildByName("選項字母"));
    }

    this.SpawnNewWinner();
    console.log(this.ColorString);
    console.log(gameModel);
  },
  //列出得人獎物件
  SpawnNewWinner: function SpawnNewWinner() {
    for (var i = 0; i < 5; i++) {
      var self = this;
      this.Rank[i].getChildByName("玩家名子").getComponent(cc.Label).string = "甜甜"; //gameModel.winner_name[i]

      this.Rank[i].getChildByName("玩家分數").getChildByName("分數").getComponent(cc.Label).string = "123"; //gameModel.winner_score[i]

      this.Rank[i].getChildByName("玩家耗時").getChildByName("耗時").getComponent(cc.Label).string = "321"; //gameModel.winner_time[i]
      //遠端載入: 網址轉圖片

      /*         cc.assetManager.loadRemote(gameModel.winner_picture[i],{ext :'.jpg'||'.png'},function(err,texture)
              { 
                if(err) console.log("錯誤")
                else
                {
                var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame
                self.Rank[i].getChildByName("頭相框").getChildByName("遮罩").getChildByName("玩家頭像").getComponent(cc.Sprite).spriteFrame = picture;
                }
              }); */
    }

    this.schedule(this.OpacityAni, 0.2);
  },
  OpacityAni: function OpacityAni() {
    this.PlayDarkAni(this.Rank[this.c].getChildByName("黑布"));
    this.c++;
    console.log(this.c);
    if (this.c == 5) this.unschedule(this.OpacityAni);
  },
  AnswerButton: function AnswerButton() {
    if (this.SeeResult == false) {
      //gameModel.WebSocket_GameStatus_Host("end",0.1)
      gameModel.GameStatusMessage = "end";
    } else {
      //gameModel.WebSocket_GameStatus_Host("final",0.1)
      if (gameModel.QuestionCount == gameModel.Question.length) cc.director.loadScene("Host3_Last");else {
        // gameModel.WebSocket_GameStatus_Host("next",0.1)
        gameModel.QuestionCount++;
        cc.director.loadScene("Host1_Question");
      }
    }
  },
  PrintResult: function PrintResult() {
    this.SeeResult = true;
    this.timenode.active = false;
    this.ShowAnswerString.string = gameModel.QuestionCount == gameModel.Question.length ? "結算" : "下一題";
    this.TimeBar.fillRange = 0;
    this.schedule(this.ProgressBar, 0.01);

    for (var i = 0; i < 4; i++) {
      this.ResultAnswered[i].active = true;
      this.ResultAnswered[i].getComponent(cc.Label).string = gameModel.AnswerResult[i] + "人"; //this.Result[i].fillRange = -gameModel.AnswerResult[i] / gameModel.people ;

      this.i = 0;
      if (i == this.Answer) continue;
      this.Options[i].color = this.Options[i].getChildByName("選項文字").color = this.Options[i].getChildByName("選項字母").color = this.ColorString.colorOfString('#045858');
    }

    for (var i = 0; i < 5; i++) {
      this.PlayBrightAni(this.Rank[i].getChildByName("黑布"));
    }
  },
  PlayBrightAni: function PlayBrightAni(node) {
    cc.tween(node).to(2, {
      opacity: 255
    }).start();
  },
  PlayDarkAni: function PlayDarkAni(node) {
    cc.tween(node).to(2, {
      opacity: 0
    }).start();
  },
  OpacityAni_Start: function OpacityAni_Start(node) {
    node.opacity = 0;
    cc.tween(node).to(0.3, {
      opacity: 255
    }).start();
  },
  OpacityAni_Time: function OpacityAni_Time() {
    cc.tween(this.Timelight.node).repeatForever(cc.tween().to(0.2, {
      opacity: 0
    }).to(0.2, {
      opacity: 255
    })).start();
  },
  ProgressBar: function ProgressBar() {
    this.Result[this.i].fillRange -= 0.01;

    if (this.Result[this.i].fillRange <= -gameModel.AnswerResult[this.i] / gameModel.people) {
      this.unschedule(this.ProgressBar);
      this.i++;
      if (this.i > 3) return;
      this.schedule(this.ProgressBar, 0.01);
    }
  },
  TimeBarProgress: function TimeBarProgress() {
    this.TimeBar.fillRange -= this.lerp;
    this.count++;

    if (gameModel.gametimeCountDown == 10 && this.alreadyred == false) {
      this.alreadyred = true;
      this.TimeBar.spriteFrame = this.RedTimeBar;
      this.Timelight.spriteFrame = this.RedTimelight;
      this.OpacityAni_Time();
    }

    if (this.TimeBar.fillRange < 0) {
      this.Timelight.node.active = false;
      this.unschedule(this.TimeBarProgress);
    }
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "end" && this.SeeResult == false) {
      cc.audioEngine.stop(this.tensecsound.currentsound);
      this.PrintResult();
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/3_whack_a_mole/遊戲模塊/Guest4_Whack_a_mole.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '83d95EkbptGn5JBBdtEmj8P', 'Guest4_Whack_a_mole');
// 3_whack_a_mole/遊戲模塊/Guest4_Whack_a_mole.js

"use strict";

var gameModel = require("Model"); ///玩家在遊戲中敲敲樂計算分數js


cc.Class({
  "extends": cc.Component,
  properties: {
    mouseHoles: {
      "default": null,
      type: cc.Node
    },
    mouseTypeImg: {
      "default": [],
      type: [cc.SpriteFrame]
    },
    mouseIndexArr: null
  },
  onLoad: function onLoad() {
    this.Hammer = cc.find("槌子");
    gameModel.WebSocket_UpDateScore_Guest();
    gameModel.Score = 0;
  },
  start: function start() {
    this.mouseIndexArr = []; //槌子動畫

    this.node.on("touchstart", function (event) {
      this.Hammer.setPosition(event.currentTouch._startPoint.x + 100, event.currentTouch._startPoint.y - 90);
      this.Hammer.active = true;
      this.scheduleOnce(function () {
        this.Hammer.active = false;
      }, 0.15);
    }, this);
    this.schedule(function () {
      this.MouseComeOut();
    }, 0.5);
  },
  updateMouseNodeInfo: function updateMouseNodeInfo(mouse, tag) {
    //設置當前老鼠節點爲存活
    mouse.getComponent("Guest_MouseManager").isLive = true; //將老鼠類型序號作爲標籤添加到老鼠節點上

    mouse.getComponent("Guest_MouseManager").tag = tag;
  },
  MouseComeOut: function MouseComeOut() {
    for (var i = 0; i < 3; i++) {
      var randomNodeIndex = Math.floor(Math.random() * this.mouseHoles.childrenCount); //隨機鼠洞

      var randomSpriteFrameIndex = Math.floor(Math.random() * this.mouseTypeImg.length); //隨機老鼠圖片

      if (this.mouseIndexArr.indexOf(randomNodeIndex) === -1) {
        var mouse = this.mouseHoles.children[randomNodeIndex].getChildByName("遮罩").getChildByName("鼠"); //mouse = 隨機洞的老鼠

        this.updateMouseNodeInfo(mouse, randomSpriteFrameIndex); //執行老鼠節點數據刷新函數

        this.mouseIndexArr.push(randomNodeIndex);
        mouse.getComponent(cc.Sprite).spriteFrame = this.mouseTypeImg[randomSpriteFrameIndex];
        mouse.getComponent("Guest_MouseManager").GetData(randomNodeIndex, randomSpriteFrameIndex);
        mouse.getComponent("Guest_MouseManager").MouseAnimation();
      }
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcM193aGFja19hX21vbGVcXOmBiuaIsuaooeWhilxcR3Vlc3Q0X1doYWNrX2FfbW9sZS5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJtb3VzZUhvbGVzIiwidHlwZSIsIk5vZGUiLCJtb3VzZVR5cGVJbWciLCJTcHJpdGVGcmFtZSIsIm1vdXNlSW5kZXhBcnIiLCJvbkxvYWQiLCJIYW1tZXIiLCJmaW5kIiwiV2ViU29ja2V0X1VwRGF0ZVNjb3JlX0d1ZXN0IiwiU2NvcmUiLCJzdGFydCIsIm5vZGUiLCJvbiIsImV2ZW50Iiwic2V0UG9zaXRpb24iLCJjdXJyZW50VG91Y2giLCJfc3RhcnRQb2ludCIsIngiLCJ5IiwiYWN0aXZlIiwic2NoZWR1bGVPbmNlIiwic2NoZWR1bGUiLCJNb3VzZUNvbWVPdXQiLCJ1cGRhdGVNb3VzZU5vZGVJbmZvIiwibW91c2UiLCJ0YWciLCJnZXRDb21wb25lbnQiLCJpc0xpdmUiLCJpIiwicmFuZG9tTm9kZUluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiY2hpbGRyZW5Db3VudCIsInJhbmRvbVNwcml0ZUZyYW1lSW5kZXgiLCJsZW5ndGgiLCJpbmRleE9mIiwiY2hpbGRyZW4iLCJnZXRDaGlsZEJ5TmFtZSIsInB1c2giLCJTcHJpdGUiLCJzcHJpdGVGcmFtZSIsIkdldERhdGEiLCJNb3VzZUFuaW1hdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCLEVBRUE7OztBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsVUFBVSxFQUFFO0FBQ1IsaUJBQVMsSUFERDtBQUVSQyxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007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RGIsZUFBakQsRUFBaUVLLHNCQUFqRTtBQUNBVixRQUFBQSxLQUFLLENBQUNFLFlBQU4sQ0FBbUIsb0JBQW5CLEVBQXlDaUIsY0FBekM7QUFDSDtBQUNKO0FBQ0osR0EzREksQ0E0REw7O0FBNURLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcblxyXG4vLy/njqnlrrblnKjpgYrmiLLkuK3mlbLmlbLmqILoqIjnrpfliIbmlbhqc1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIG1vdXNlSG9sZXM6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbW91c2VUeXBlSW1nOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IFtdLFxyXG4gICAgICAgICAgICB0eXBlOiBbY2MuU3ByaXRlRnJhbWVdXHJcbiAgICAgICAgfSxcclxuICAgICAgICBtb3VzZUluZGV4QXJyIDpudWxsXHJcbiAgICB9LFxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5IYW1tZXIgPSBjYy5maW5kKFwi5qeM5a2QXCIpXHJcbiAgICAgICAgZ2FtZU1vZGVsLldlYlNvY2tldF9VcERhdGVTY29yZV9HdWVzdCgpO1xyXG4gICAgICAgIGdhbWVNb2RlbC5TY29yZSA9IDBcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICB0aGlzLm1vdXNlSW5kZXhBcnIgPSBbXVxyXG5cclxuICAgICAgLy/mp4zlrZDli5XnlatcclxuICAgICAgdGhpcy5ub2RlLm9uKFwidG91Y2hzdGFydFwiLCBmdW5jdGlvbiAoZXZlbnQpIHsgIFxyXG4gICAgICAgIHRoaXMuSGFtbWVyLnNldFBvc2l0aW9uKGV2ZW50LmN1cnJlbnRUb3VjaC5fc3RhcnRQb2ludC54ICsgMTAwLCBldmVudC5jdXJyZW50VG91Y2guX3N0YXJ0UG9pbnQueSAtIDkwKVxyXG4gICAgICAgIHRoaXMuSGFtbWVyLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZShmdW5jdGlvbigpIHsgdGhpcy5IYW1tZXIuYWN0aXZlID0gZmFsc2V9LCAwLjE1KTtcclxuICAgICAgfSwgdGhpcyk7XHJcblxyXG4gICAgICB0aGlzLnNjaGVkdWxlKGZ1bmN0aW9uKCkgeyBcclxuICAgICAgICB0aGlzLk1vdXNlQ29tZU91dCgpXHJcbiAgICAgIH0sIDAuNSk7XHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZU1vdXNlTm9kZUluZm8obW91c2UsIHRhZykge1xyXG4gICAgICAgIC8v6Kit572u55W25YmN6ICB6byg56+A6bue54iy5a2Y5rS7XHJcbiAgICAgICAgbW91c2UuZ2V0Q29tcG9uZW50KFwiR3Vlc3RfTW91c2VNYW5hZ2VyXCIpLmlzTGl2ZSA9IHRydWU7XHJcbiAgICAgICAgLy/lsIfogIHpvKDpoZ7lnovluo/omZ/kvZzniLLmqJnnsaTmt7vliqDliLDogIHpvKDnr4Dpu57kuIpcclxuICAgICAgICBtb3VzZS5nZXRDb21wb25lbnQoXCJHdWVzdF9Nb3VzZU1hbmFnZXJcIikudGFnID0gdGFnO1xyXG4gICAgfSxcclxuICAgIFxyXG4gICAgTW91c2VDb21lT3V0KCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSBcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGxldCByYW5kb21Ob2RlSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAodGhpcy5tb3VzZUhvbGVzLmNoaWxkcmVuQ291bnQpKTsgIC8v6Zqo5qmf6byg5rSeXHJcbiAgICAgICAgICAgIGxldCByYW5kb21TcHJpdGVGcmFtZUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHRoaXMubW91c2VUeXBlSW1nLmxlbmd0aCkpIC8v6Zqo5qmf6ICB6byg5ZyW54mHXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAodGhpcy5tb3VzZUluZGV4QXJyLmluZGV4T2YocmFuZG9tTm9kZUluZGV4KSA9PT0gLTEpIFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbW91c2UgPSB0aGlzLm1vdXNlSG9sZXMuY2hpbGRyZW5bcmFuZG9tTm9kZUluZGV4XS5nZXRDaGlsZEJ5TmFtZShcIumBrue9qVwiKS5nZXRDaGlsZEJ5TmFtZShcIum8oFwiKTsgLy9tb3VzZSA9IOmaqOapn+a0nueahOiAgem8oFxyXG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVNb3VzZU5vZGVJbmZvKG1vdXNlLCByYW5kb21TcHJpdGVGcmFtZUluZGV4KTsgLy/ln7fooYzogIHpvKDnr4Dpu57mlbjmk5rliLfmlrDlh73mlbhcclxuICAgICAgICAgICAgICAgIHRoaXMubW91c2VJbmRleEFyci5wdXNoKHJhbmRvbU5vZGVJbmRleCk7XHJcbiAgICAgICAgICAgICAgICBtb3VzZS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHRoaXMubW91c2VUeXBlSW1nW3JhbmRvbVNwcml0ZUZyYW1lSW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgbW91c2UuZ2V0Q29tcG9uZW50KFwiR3Vlc3RfTW91c2VNYW5hZ2VyXCIpLkdldERhdGEocmFuZG9tTm9kZUluZGV4LHJhbmRvbVNwcml0ZUZyYW1lSW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgbW91c2UuZ2V0Q29tcG9uZW50KFwiR3Vlc3RfTW91c2VNYW5hZ2VyXCIpLk1vdXNlQW5pbWF0aW9uKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/Ani_Opacity_Bright.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cf56dsRrKZITL++yW6WV/jn', 'Ani_Opacity_Bright');
// 共用模塊/Ani_Opacity_Bright.js

"use strict";

///透明度漸層動畫js
cc.Class({
  "extends": cc.Component,
  properties: {
    Target: {
      "default": [],
      type: [cc.Node]
    }
  },
  start: function start() {
    this.OpacityAni();
  },
  OpacityAni: function OpacityAni() {
    this.node.opacity = 0;
    cc.tween(this.node).to(0.5, {
      opacity: 255
    }).start();
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFxBbmlfT3BhY2l0eV9CcmlnaHQuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJUYXJnZXQiLCJ0eXBlIiwiTm9kZSIsInN0YXJ0IiwiT3BhY2l0eUFuaSIsIm5vZGUiLCJvcGFjaXR5IiwidHdlZW4iLCJ0byJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUNBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsTUFBTSxFQUFFO0FBQ0osaUJBQVMsRUFETDtBQUVKQyxNQUFBQSxJQUFJLEVBQUUsQ0FBQ0wsRUFBRSxDQUFDTSxJQUFKO0FBRkY7QUFEQSxHQUhQO0FBVUxDLEVBQUFBLEtBVkssbUJBVUk7QUFDUCxTQUFLQyxVQUFMO0FBQ0QsR0FaSTtBQWVMQSxFQUFBQSxVQWZLLHdCQWVPO0FBQ1IsU0FBS0MsSUFBTCxDQUFVQyxPQUFWLEdBQW9CLENBQXBCO0FBQ0FWLElBQUFBLEVBQUUsQ0FBQ1csS0FBSCxDQUFTLEtBQUtGLElBQWQsRUFDQ0csRUFERCxDQUNJLEdBREosRUFDUztBQUFDRixNQUFBQSxPQUFPLEVBQUU7QUFBVixLQURULEVBRUNILEtBRkQ7QUFHSCxHQXBCSSxDQXFCTDs7QUFyQkssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8vL+mAj+aYjuW6pua8uOWxpOWLleeVq2pzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgVGFyZ2V0OiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IFtdLFxyXG4gICAgICAgICAgICB0eXBlOiBbY2MuTm9kZV1cclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgIHRoaXMuT3BhY2l0eUFuaSgpXHJcbiAgICB9LFxyXG5cclxuICAgIFxyXG4gICAgT3BhY2l0eUFuaSgpe1xyXG4gICAgICAgIHRoaXMubm9kZS5vcGFjaXR5ID0gMFxyXG4gICAgICAgIGNjLnR3ZWVuKHRoaXMubm9kZSlcclxuICAgICAgICAudG8oMC41LCB7b3BhY2l0eTogMjU1fSlcclxuICAgICAgICAuc3RhcnQoKTtcclxuICAgIH1cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/備份/rwd.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '70071zniddBV7x/wyEJaTsF', 'rwd');
// 共用模塊/備份/rwd.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {
    window.addEventListener('orientationchange', function (event) {
      cc.log("：：：：：：：：：：：：：：：" + window.orientation);
      var currentScene = cc.director.getScene().name; //当前场景

      var changeScene = currentScene.replace('V', '');

      if (cc.sys.isMobile) {
        if (cc.view._orientation != cc.macro.ORIENTATION_AUTO) {
          cc.view.setOrientation(cc.macro.ORIENTATION_AUTO);
        }

        if (window.orientation == 180 || window.orientation == 0) //竖屏   -  创建旋转提示层
          {
            cc.log("竖屏, 角度:" + window.orientation);
            cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT); //cc.director.loadScene(changeScene + 'V')

            cc.log("changeScene: " + changeScene + 'V');
            gameModel.device = 1;
          }

        if (window.orientation == 90 || window.orientation == -90) //横屏   -  移除
          {
            cc.log("横屏, 角度:" + window.orientation);
            cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE); //cc.director.loadScene(changeScene)

            cc.log("changeScene: " + changeScene);
            gameModel.device = 2;
          }
      } else {
        cc.director.loadScene(changeScene);
        gameModel.device = 2;
      }
    });
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xc5YWx55So5qih5aGKXFzlgpnku71cXHJ3ZC5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJvbkxvYWQiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJsb2ciLCJvcmllbnRhdGlvbiIsImN1cnJlbnRTY2VuZSIsImRpcmVjdG9yIiwiZ2V0U2NlbmUiLCJuYW1lIiwiY2hhbmdlU2NlbmUiLCJyZXBsYWNlIiwic3lzIiwiaXNNb2JpbGUiLCJ2aWV3IiwiX29yaWVudGF0aW9uIiwibWFjcm8iLCJPUklFTlRBVElPTl9BVVRPIiwic2V0T3JpZW50YXRpb24iLCJPUklFTlRBVElPTl9QT1JUUkFJVCIsImRldmljZSIsIk9SSUVOVEFUSU9OX0xBTkRTQ0FQRSIsImxvYWRTY2VuZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCOztBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQVFMQyxFQUFBQSxNQVJLLG9CQVFLO0FBQ05DLElBQUFBLE1BQU0sQ0FBQ0MsZ0JBQVAsQ0FBd0IsbUJBQXhCLEVBQTZDLFVBQVVDLEtBQVYsRUFBaUI7QUFDMURQLE1BQUFBLEVBQUUsQ0FBQ1EsR0FBSCxDQUFPLG9CQUFvQkgsTUFBTSxDQUFDSSxXQUFsQztBQUNBLFVBQUlDLFlBQVksR0FBR1YsRUFBRSxDQUFDVyxRQUFILENBQVlDLFFBQVosR0FBdUJDLElBQTFDLENBRjBELENBRUc7O0FBQzdELFVBQUlDLFdBQVcsR0FBR0osWUFBWSxDQUFDSyxPQUFiLENBQXFCLEdBQXJCLEVBQTBCLEVBQTFCLENBQWxCOztBQUNBLFVBQUlmLEVBQUUsQ0FBQ2dCLEdBQUgsQ0FBT0MsUUFBWCxFQUFvQjtBQUNoQixZQUFJakIsRUFBRSxDQUFDa0IsSUFBSCxDQUFRQyxZQUFSLElBQXdCbkIsRUFBRSxDQUFDb0IsS0FBSCxDQUFTQyxnQkFBckMsRUFBdUQ7QUFDbkRyQixVQUFBQSxFQUFFLENBQUNrQixJQUFILENBQVFJLGNBQVIsQ0FBdUJ0QixFQUFFLENBQUNvQixLQUFILENBQVNDLGdCQUFoQztBQUNIOztBQUNELFlBQUloQixNQUFNLENBQUNJLFdBQVAsSUFBc0IsR0FBdEIsSUFBNkJKLE1BQU0sQ0FBQ0ksV0FBUCxJQUFzQixDQUF2RCxFQUErRDtBQUMvRDtBQUNJVCxZQUFBQSxFQUFFLENBQUNRLEdBQUgsQ0FBTyxZQUFZSCxNQUFNLENBQUNJLFdBQTFCO0FBRUFULFlBQUFBLEVBQUUsQ0FBQ2tCLElBQUgsQ0FBUUksY0FBUixDQUF1QnRCLEVBQUUsQ0FBQ29CLEtBQUgsQ0FBU0csb0JBQWhDLEVBSEosQ0FJSTs7QUFDQXZCLFlBQUFBLEVBQUUsQ0FBQ1EsR0FBSCxDQUFPLGtCQUFrQk0sV0FBbEIsR0FBZ0MsR0FBdkM7QUFDQWhCLFlBQUFBLFNBQVMsQ0FBQzBCLE1BQVYsR0FBaUIsQ0FBakI7QUFDSDs7QUFDRCxZQUFJbkIsTUFBTSxDQUFDSSxXQUFQLElBQXNCLEVBQXRCLElBQTRCSixNQUFNLENBQUNJLFdBQVAsSUFBc0IsQ0FBQyxFQUF2RCxFQUFnRTtBQUNoRTtBQUNJVCxZQUFBQSxFQUFFLENBQUNRLEdBQUgsQ0FBTyxZQUFZSCxNQUFNLENBQUNJLFdBQTFCO0FBRUFULFlBQUFBLEVBQUUsQ0FBQ2tCLElBQUgsQ0FBUUksY0FBUixDQUF1QnRCLEVBQUUsQ0FBQ29CLEtBQUgsQ0FBU0sscUJBQWhDLEVBSEosQ0FJSTs7QUFDQXpCLFlBQUFBLEVBQUUsQ0FBQ1EsR0FBSCxDQUFPLGtCQUFrQk0sV0FBekI7QUFDQWhCLFlBQUFBLFNBQVMsQ0FBQzBCLE1BQVYsR0FBaUIsQ0FBakI7QUFDSDtBQUNKLE9BdEJELE1BdUJJO0FBQ0F4QixRQUFBQSxFQUFFLENBQUNXLFFBQUgsQ0FBWWUsU0FBWixDQUFzQlosV0FBdEI7QUFDQWhCLFFBQUFBLFNBQVMsQ0FBQzBCLE1BQVYsR0FBaUIsQ0FBakI7QUFDSDtBQUNKLEtBL0JEO0FBZ0NIO0FBekNJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG52YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvcmllbnRhdGlvbmNoYW5nZScsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICBjYy5sb2coXCLvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJrvvJpcIiArIHdpbmRvdy5vcmllbnRhdGlvbik7XHJcbiAgICAgICAgICAgIHZhciBjdXJyZW50U2NlbmUgPSBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLm5hbWU7ICAgICAgICAgICAgICAvL+W9k+WJjeWcuuaZr1xyXG4gICAgICAgICAgICB2YXIgY2hhbmdlU2NlbmUgPSBjdXJyZW50U2NlbmUucmVwbGFjZSgnVicsICcnKTtcclxuICAgICAgICAgICAgaWYgKGNjLnN5cy5pc01vYmlsZSl7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2Mudmlldy5fb3JpZW50YXRpb24gIT0gY2MubWFjcm8uT1JJRU5UQVRJT05fQVVUTykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNjLnZpZXcuc2V0T3JpZW50YXRpb24oY2MubWFjcm8uT1JJRU5UQVRJT05fQVVUTyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAod2luZG93Lm9yaWVudGF0aW9uID09IDE4MCB8fCB3aW5kb3cub3JpZW50YXRpb24gPT0gMCkgICAgICAvL+erluWxjyAgIC0gIOWIm+W7uuaXi+i9rOaPkOekuuWxglxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGNjLmxvZyhcIuerluWxjywg6KeS5bqmOlwiICsgd2luZG93Lm9yaWVudGF0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBjYy52aWV3LnNldE9yaWVudGF0aW9uKGNjLm1hY3JvLk9SSUVOVEFUSU9OX1BPUlRSQUlUKTtcclxuICAgICAgICAgICAgICAgICAgICAvL2NjLmRpcmVjdG9yLmxvYWRTY2VuZShjaGFuZ2VTY2VuZSArICdWJylcclxuICAgICAgICAgICAgICAgICAgICBjYy5sb2coXCJjaGFuZ2VTY2VuZTogXCIgKyBjaGFuZ2VTY2VuZSArICdWJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLmRldmljZT0xO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5vcmllbnRhdGlvbiA9PSA5MCB8fCB3aW5kb3cub3JpZW50YXRpb24gPT0gLTkwKSAgICAgIC8v5qiq5bGPICAgLSAg56e76ZmkXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2MubG9nKFwi5qiq5bGPLCDop5LluqY6XCIgKyB3aW5kb3cub3JpZW50YXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGNjLnZpZXcuc2V0T3JpZW50YXRpb24oY2MubWFjcm8uT1JJRU5UQVRJT05fTEFORFNDQVBFKTtcclxuICAgICAgICAgICAgICAgICAgICAvL2NjLmRpcmVjdG9yLmxvYWRTY2VuZShjaGFuZ2VTY2VuZSlcclxuICAgICAgICAgICAgICAgICAgICBjYy5sb2coXCJjaGFuZ2VTY2VuZTogXCIgKyBjaGFuZ2VTY2VuZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2FtZU1vZGVsLmRldmljZT0yO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5sb2FkU2NlbmUoY2hhbmdlU2NlbmUpO1xyXG4gICAgICAgICAgICAgICAgZ2FtZU1vZGVsLmRldmljZT0yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/4._Q&A/程式碼/Host3_ShowWinner.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7b4a1Hsh89NeIGf55SCL1EQ', 'Host3_ShowWinner');
// 4._Q&A/程式碼/Host3_ShowWinner.js

"use strict";

var gameModel = require("Model");

var WinnerItem = require("Host3_WinRecordItem");

cc.Class({
  "extends": cc.Component,
  properties: {
    Rank: {
      "default": [],
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    this.itemlist = [];
    this.winlist = [];
    this.index = [];
    this.indexcount = 0;
    this.items_parent = cc.find("畫布/中獎列表/view/內容");
  },
  start: function start() {
    this.SpawnWinner();
  },
  //列出得獎人和得到的獎品清單
  SpawnWinner: function SpawnWinner() {
    //列出前三名得獎人
    for (var i = 0; i < 3; i++) {
      if (gameModel.winner_picture[i] == null) return;
      var ranked = this.Rank[i];
      var playerAvatar = ranked.getChildByName("頭相框").getChildByName("遮罩").getChildByName("玩家頭像").getComponent(cc.Sprite).spriteFrame;
      ranked.getChildByName("玩家名稱").getComponent(cc.Label).string = gameModel.winner_name[i];
      ranked.getChildByName("玩家分數").getChildByName("分數").getComponent(cc.Label).string = gameModel.winner_Score[i];
      ranked.getChildByName("玩家耗時").getChildByName("耗時").getComponent(cc.Label).string = gameModel.winner_Taketime[i]; //遠端載入: 網址轉圖片

      cc.assetManager.loadRemote(gameModel.winner_picture[i], {
        ext: '.jpg' || '.png'
      }, function (err, texture) {
        if (err) console.log("錯誤");else {
          var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

          playerAvatar.spriteFrame = picture;
        }
      });
    } //列出剩下得獎人


    for (var i = 3; i < gameModel.winner_name.length; i++) {
      var node = cc.instantiate(this.items);
      node.parent = this.items_parent;
      var obj = node.getComponent(WinnerItem); //抓取WinnerItem

      this.itemlist.push(obj);
      this.itemlist[i].updateInfo(i);
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNC5fUSZBXFznqIvlvI/norxcXEhvc3QzX1Nob3dXaW5uZXIuanMiXSwibmFtZXMiOlsiZ2FtZU1vZGVsIiwicmVxdWlyZSIsIldpbm5lckl0ZW0iLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIlJhbmsiLCJ0eXBlIiwiTm9kZSIsIm9uTG9hZCIsIml0ZW1saXN0Iiwid2lubGlzdCIsImluZGV4IiwiaW5kZXhjb3VudCIsIml0ZW1zX3BhcmVudCIsImZpbmQiLCJzdGFydCIsIlNwYXduV2lubmVyIiwiaSIsIndpbm5lcl9waWN0dXJlIiwicmFua2VkIiwicGxheWVyQXZhdGFyIiwiZ2V0Q2hpbGRCeU5hbWUiLCJnZXRDb21wb25lbnQiLCJTcHJpdGUiLCJzcHJpdGVGcmFtZSIsIkxhYmVsIiwic3RyaW5nIiwid2lubmVyX25hbWUiLCJ3aW5uZXJfU2NvcmUiLCJ3aW5uZXJfVGFrZXRpbWUiLCJhc3NldE1hbmFnZXIiLCJsb2FkUmVtb3RlIiwiZXh0IiwiZXJyIiwidGV4dHVyZSIsImNvbnNvbGUiLCJsb2ciLCJwaWN0dXJlIiwiU3ByaXRlRnJhbWUiLCJsZW5ndGgiLCJub2RlIiwiaW5zdGFudGlhdGUiLCJpdGVtcyIsInBhcmVudCIsIm9iaiIsInB1c2giLCJ1cGRhdGVJbmZvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBeEI7O0FBRUFFLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxJQUFJLEVBQUM7QUFDRCxpQkFBUyxFQURSO0FBRURDLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZSO0FBREcsR0FIUDtBQVlMQyxFQUFBQSxNQVpLLG9C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RUFBaUI2QixVQUFqQixDQUE0QjdCLENBQTVCO0FBQ0g7QUFDSixHQXpESSxDQTRETDs7QUE1REssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxudmFyIFdpbm5lckl0ZW0gPSByZXF1aXJlKFwiSG9zdDNfV2luUmVjb3JkSXRlbVwiKTtcclxuXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgUmFuazp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IFtdLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXHJcbiAgICAgICAgICB9LFxyXG4gICAgXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIHRoaXMuaXRlbWxpc3Q9W107XHJcbiAgICAgICAgdGhpcy53aW5saXN0PVtdO1xyXG4gICAgICAgIHRoaXMuaW5kZXggPSBbXTtcclxuICAgICAgICB0aGlzLmluZGV4Y291bnQgPSAwO1xyXG4gICAgICAgIHRoaXMuaXRlbXNfcGFyZW50ID0gY2MuZmluZChcIueVq+W4gy/kuK3njY7liJfooagvdmlldy/lhaflrrlcIik7XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICB0aGlzLlNwYXduV2lubmVyKCk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8v5YiX5Ye65b6X542O5Lq65ZKM5b6X5Yiw55qE542O5ZOB5riF5ZauXHJcbiAgICBTcGF3bldpbm5lcigpe1xyXG4gICAgICAgIC8v5YiX5Ye65YmN5LiJ5ZCN5b6X542O5Lq6XHJcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IDM7IGkrKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmKGdhbWVNb2RlbC53aW5uZXJfcGljdHVyZVtpXSA9PSBudWxsKSByZXR1cm47XHJcbiAgICAgICAgICAgIHZhciByYW5rZWQgPSB0aGlzLlJhbmtbaV1cclxuICAgICAgICAgICAgdmFyIHBsYXllckF2YXRhciA9IHJhbmtlZC5nZXRDaGlsZEJ5TmFtZShcIumgreebuOahhlwiKS5nZXRDaGlsZEJ5TmFtZShcIumBrue9qVwiKS5nZXRDaGlsZEJ5TmFtZShcIueOqeWutumgreWDj1wiKS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZVxyXG4gICAgICAgICAgICByYW5rZWQuZ2V0Q2hpbGRCeU5hbWUoXCLnjqnlrrblkI3nqLFcIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBnYW1lTW9kZWwud2lubmVyX25hbWVbaV1cclxuICAgICAgICAgICAgcmFua2VkLmdldENoaWxkQnlOYW1lKFwi546p5a625YiG5pW4XCIpLmdldENoaWxkQnlOYW1lKFwi5YiG5pW4XCIpLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gZ2FtZU1vZGVsLndpbm5lcl9TY29yZVtpXVxyXG4gICAgICAgICAgICByYW5rZWQuZ2V0Q2hpbGRCeU5hbWUoXCLnjqnlrrbogJfmmYJcIikuZ2V0Q2hpbGRCeU5hbWUoXCLogJfmmYJcIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBnYW1lTW9kZWwud2lubmVyX1Rha2V0aW1lW2ldXHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8v6YGg56uv6LyJ5YWlOiDntrLlnYDovYnlnJbniYdcclxuICAgICAgICAgICBjYy5hc3NldE1hbmFnZXIubG9hZFJlbW90ZShnYW1lTW9kZWwud2lubmVyX3BpY3R1cmVbaV0se2V4dCA6Jy5qcGcnfHwnLnBuZyd9LGZ1bmN0aW9uKGVycix0ZXh0dXJlKVxyXG4gICAgICAgICAgIHsgXHJcbiAgICAgICAgICAgICBpZihlcnIpIGNvbnNvbGUubG9nKFwi6Yyv6KqkXCIpXHJcbiAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgdmFyIHBpY3R1cmUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7IC8vdGV4dHVyZSDovYkgU3ByaXRlRnJhbWVcclxuICAgICAgICAgICAgICAgICBwbGF5ZXJBdmF0YXIuc3ByaXRlRnJhbWUgPSBwaWN0dXJlO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy/liJflh7rliankuIvlvpfnjY7kurpcclxuICAgICAgICBmb3IodmFyIGkgPSAzOyBpIDwgZ2FtZU1vZGVsLndpbm5lcl9uYW1lLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIG5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLml0ZW1zKTtcclxuICAgICAgICAgICAgbm9kZS5wYXJlbnQgPSB0aGlzLml0ZW1zX3BhcmVudDtcclxuICAgICAgICAgICAgdmFyIG9iaiA9IG5vZGUuZ2V0Q29tcG9uZW50KFdpbm5lckl0ZW0pOy8v5oqT5Y+WV2lubmVySXRlbVxyXG4gICAgICAgICAgICB0aGlzLml0ZW1saXN0LnB1c2gob2JqKTtcclxuICAgICAgICAgICAgdGhpcy5pdGVtbGlzdFtpXS51cGRhdGVJbmZvKGkpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/共用模塊/備份/goeasy-2.0.12.min.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (Buffer){
"use strict";
cc._RF.push(module, '73b74QnRwRA4phQ5aA3bI9k', 'goeasy-2.0.12.min');
// 共用模塊/備份/goeasy-2.0.12.min.js

"use strict";

!function (e, t) {
  "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.GoEasy = t() : e.GoEasy = t();
}("undefined" != typeof self ? self : void 0, function () {
  return function (e) {
    var t = {};

    function n(o) {
      if (t[o]) return t[o].exports;
      var i = t[o] = {
        i: o,
        l: !1,
        exports: {}
      };
      return e[o].call(i.exports, i, i.exports, n), i.l = !0, i.exports;
    }

    return n.m = e, n.c = t, n.d = function (e, t, o) {
      n.o(e, t) || Object.defineProperty(e, t, {
        configurable: !1,
        enumerable: !0,
        get: o
      });
    }, n.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e["default"];
      } : function () {
        return e;
      };
      return n.d(t, "a", t), t;
    }, n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, n.p = "", n(n.s = 120);
  }([function (e, t, n) {
    "use strict";

    t.__esModule = !0, t["default"] = function (e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    };
  }, function (e, t, n) {
    "use strict";

    t.__esModule = !0;
    var o,
        i = n(128),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };

    t["default"] = function () {
      function e(e, t) {
        for (var n = 0; n < t.length; n++) {
          var o = t[n];
          o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), (0, r["default"])(e, o.key, o);
        }
      }

      return function (t, n, o) {
        return n && e(t.prototype, n), o && e(t, o), t;
      };
    }();
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.noop = t.GoEasyDomainNumber = t.env = t.goEasyArray = t.UUID = t.calibrator = undefined;
    var o = n(83),
        i = n(150),
        r = n(154),
        s = n(92),
        a = n(93);
    t.calibrator = o.calibrator, t.UUID = i.UUID, t.goEasyArray = r.goEasyArray, t.env = s.env, t.GoEasyDomainNumber = a.GoEasyDomainNumber, t.noop = function () {};
  }, function (e, t, n) {
    e.exports = {
      "default": n(155),
      __esModule: !0
    };
  }, function (e, t, n) {
    "use strict";

    t.__esModule = !0;
    var o,
        i = n(20),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };

    t["default"] = function (e, t) {
      if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !t || "object" !== (void 0 === t ? "undefined" : (0, r["default"])(t)) && "function" != typeof t ? e : t;
    };
  }, function (e, t, n) {
    "use strict";

    t.__esModule = !0;
    var o = s(n(157)),
        i = s(n(21)),
        r = s(n(20));

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    t["default"] = function (e, t) {
      if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : (0, r["default"])(t)));
      e.prototype = (0, i["default"])(t && t.prototype, {
        constructor: {
          value: e,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), t && (o["default"] ? (0, o["default"])(e, t) : e.__proto__ = t);
    };
  }, function (e, t, n) {
    e.exports = {
      "default": n(175),
      __esModule: !0
    };
  }, function (e, t) {
    var n = e.exports = {
      version: "2.6.12"
    };
    "number" == typeof __e && (__e = n);
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t["default"] = {
      WRITE: "WRITE",
      READ: "READ",
      NONE: "NONE"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t["default"] = {
      "default": "default",
      text: "text",
      image: "image",
      video: "video",
      audio: "audio",
      emoji: "emoji",
      file: "file"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = a(n(0)),
        i = a(n(1)),
        r = n(2),
        s = a(n(8));

    function a(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var u = function () {
      function e(t) {
        var n = this;
        (0, o["default"])(this, e), this.uuid = null, this.name = "", this.params = null, this.success = null, this.fail = null, this.permission = s["default"].NONE, this.singleTimeout = 0, this.totalTimeout = 0, this.startTime = 0, this.complete = !1, this.retried = 0, this.uuid = r.UUID.get(), this.name = t.name, this.params = t.params, this.permission = t.permission, this.totalTimeout = t.totalTimeout, this.singleTimeout = t.singleTimeout, this.success = function (e) {
          n.complete || (n.complete = !0, t.success(e));
        }, this.fail = function (e) {
          n.complete || (n.complete = !0, t.fail(e));
        };
      }

      return (0, i["default"])(e, [{
        key: "start",
        value: function value() {
          this.startTime = Date.now();
        }
      }, {
        key: "isTimeout",
        value: function value() {
          return this.startTime + this.totalTimeout < Date.now();
        }
      }]), e;
    }();

    t["default"] = u;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t.EmitType = {
      authorize: "authorize",
      manualDisconnect: "manualDisconnect",
      subscribe: "subscribe",
      unsubscribe: "unsubscribe",
      publish: "publish",
      ack: "ack",
      historyMessages: "historyMessages",
      hereNow: "hereNow",
      hereNowByUserIds: "hereNowByUserIds",
      imLastConversations: "imLastConversations",
      markPrivateMessageAsRead: "markPrivateMessageAsRead",
      markGroupMessageAsRead: "markGroupMessageAsRead",
      imGroupOnlineCount: "imGroupOnlineCount",
      imHereNow: "imHereNow",
      imGroupHereNow: "imGroupHereNow",
      publishIM: "publishIM",
      imHistory: "imHistory",
      subscribeUserPresence: "subscribeUserPresence",
      unsubscribeUserPresence: "unsubscribeUserPresence",
      subscribeGroupPresence: "subscribeGroupPresence",
      unsubscribeGroupPresence: "unsubscribeGroupPresence",
      removeConversation: "removeConversation",
      topConversation: "topConversation",
      imData: "imData",
      subscribeGroups: "subscribeGroups",
      unsubscribeGroup: "unsubscribeGroup"
    };
  }, function (e, t, n) {
    "use strict";

    t.__esModule = !0;
    var o = r(n(3)),
        i = r(n(193));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    t["default"] = function s(e, t, n) {
      null === e && (e = Function.prototype);
      var r = (0, i["default"])(e, t);

      if (r === undefined) {
        var a = (0, o["default"])(e);
        return null === a ? undefined : s(a, t, n);
      }

      if ("value" in r) return r.value;
      var u = r.get;
      return u === undefined ? undefined : u.call(n);
    };
  }, function (e, t) {
    var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    "number" == typeof __g && (__g = n);
  }, function (e, t, n) {
    var o = n(59)("wks"),
        i = n(46),
        r = n(13).Symbol,
        s = "function" == typeof r;
    (e.exports = function (e) {
      return o[e] || (o[e] = s && r[e] || (s ? r : i)("Symbol." + e));
    }).store = o;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t.SocketTimeout = {
      connect: 1500,
      reconnectionDelayMax: 3e3,
      commonQuerySingle: 2500,
      commonQueryTotal: 12e3,
      commonRequestSingle: 1700,
      commonRequestTotal: 12e3,
      commonInfiniteSingle: 1700,
      commonInfiniteTotal: 864e5
    };
  }, function (e, t, n) {
    var o = n(13),
        i = n(7),
        r = n(35),
        s = n(26),
        a = n(27),
        u = function u(e, t, n) {
      var c,
          l,
          f,
          d = e & u.F,
          p = e & u.G,
          h = e & u.S,
          y = e & u.P,
          v = e & u.B,
          m = e & u.W,
          g = p ? i : i[t] || (i[t] = {}),
          b = g.prototype,
          _ = p ? o : h ? o[t] : (o[t] || {}).prototype;

      for (c in p && (n = t), n) {
        (l = !d && _ && _[c] !== undefined) && a(g, c) || (f = l ? _[c] : n[c], g[c] = p && "function" != typeof _[c] ? n[c] : v && l ? r(f, o) : m && _[c] == f ? function (e) {
          var t = function t(_t, n, o) {
            if (this instanceof e) {
              switch (arguments.length) {
                case 0:
                  return new e();

                case 1:
                  return new e(_t);

                case 2:
                  return new e(_t, n);
              }

              return new e(_t, n, o);
            }

            return e.apply(this, arguments);
          };

          return t.prototype = e.prototype, t;
        }(f) : y && "function" == typeof f ? r(Function.call, f) : f, y && ((g.virtual || (g.virtual = {}))[c] = f, e & u.R && b && !b[c] && s(b, c, f)));
      }
    };

    u.F = 1, u.G = 2, u.S = 4, u.P = 8, u.B = 16, u.W = 32, u.U = 64, u.R = 128, e.exports = u;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.str = t.noop = t.GoEasyDomainNumber = t.env = t.goEasyArray = t.UUID = t.calibrator = undefined;
    var o = n(196),
        i = n(2);
    t.calibrator = i.calibrator, t.UUID = i.UUID, t.goEasyArray = i.goEasyArray, t.env = i.env, t.GoEasyDomainNumber = i.GoEasyDomainNumber, t.noop = i.noop, t.str = o.str;
  }, function (e, t, n) {
    e.exports = !n(30)(function () {
      return 7 != Object.defineProperty({}, "a", {
        get: function get() {
          return 7;
        }
      }).a;
    });
  }, function (e, t, n) {
    var o = n(23);

    e.exports = function (e) {
      if (!o(e)) throw TypeError(e + " is not an object!");
      return e;
    };
  }, function (e, t, n) {
    "use strict";

    t.__esModule = !0;
    var o = s(n(133)),
        i = s(n(141)),
        r = "function" == typeof i["default"] && "symbol" == typeof o["default"] ? function (e) {
      return typeof e;
    } : function (e) {
      return e && "function" == typeof i["default"] && e.constructor === i["default"] && e !== i["default"].prototype ? "symbol" : typeof e;
    };

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    t["default"] = "function" == typeof i["default"] && "symbol" === r(o["default"]) ? function (e) {
      return void 0 === e ? "undefined" : r(e);
    } : function (e) {
      return e && "function" == typeof i["default"] && e.constructor === i["default"] && e !== i["default"].prototype ? "symbol" : void 0 === e ? "undefined" : r(e);
    };
  }, function (e, t, n) {
    e.exports = {
      "default": n(161),
      __esModule: !0
    };
  }, function (e, t, n) {
    var o = n(19),
        i = n(79),
        r = n(55),
        s = Object.defineProperty;
    t.f = n(18) ? Object.defineProperty : function (e, t, n) {
      if (o(e), t = r(t, !0), o(n), i) try {
        return s(e, t, n);
      } catch (a) {}
      if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
      return "value" in n && (e[t] = n.value), e;
    };
  }, function (e, t) {
    e.exports = function (e) {
      return "object" == typeof e ? null !== e : "function" == typeof e;
    };
  }, function (e, t, n) {
    var o = n(81),
        i = n(56);

    e.exports = function (e) {
      return o(i(e));
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Conversion = t.ConversationType = t.Conversations = undefined;
    var o = n(101),
        i = n(69),
        r = n(191);
    t.Conversations = r.Conversations, t.ConversationType = i.ConversationType, t.Conversion = o.Conversion;
  }, function (e, t, n) {
    var o = n(22),
        i = n(45);
    e.exports = n(18) ? function (e, t, n) {
      return o.f(e, t, i(1, n));
    } : function (e, t, n) {
      return e[t] = n, e;
    };
  }, function (e, t) {
    var n = {}.hasOwnProperty;

    e.exports = function (e, t) {
      return n.call(e, t);
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t["default"] = {
      DISCONNECTED: "disconnected",
      DISCONNECTING: "disconnecting",
      CONNECTING: "connecting",
      CONNECTED: "connected",
      RECONNECTING: "reconnecting",
      RECONNECTED: "reconnected",
      EXPIRED_RECONNECTED: "reconnected",
      CONNECT_FAILED: "connect_failed"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.ImEventType = t.eventCenter = undefined;
    var o = n(190),
        i = n(100);
    t.eventCenter = o.eventCenter, t.ImEventType = i.ImEventType;
  }, function (e, t) {
    e.exports = function (e) {
      try {
        return !!e();
      } catch (t) {
        return !0;
      }
    };
  }, function (e, t, n) {
    var o = n(80),
        i = n(60);

    e.exports = Object.keys || function (e) {
      return o(e, i);
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.SocketTimeout = t.IMTimeout = undefined;
    var o = n(15);
    t.IMTimeout = {};
    t.SocketTimeout = o.SocketTimeout;
  }, function (e, t, n) {
    e.exports = {
      "default": n(208),
      __esModule: !0
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(253),
        i = n(254),
        r = n(256),
        s = n(257);
    "undefined" != typeof navigator && /Android/i.test(navigator.userAgent), "undefined" != typeof navigator && /PhantomJS/i.test(navigator.userAgent);
    t.protocol = 3;
    var a = t.packets = {
      open: 0,
      close: 1,
      ping: 2,
      pong: 3,
      message: 4,
      upgrade: 5,
      noop: 6
    },
        u = o(a),
        c = {
      type: "error",
      data: "parser error"
    },
        l = n(258);
    t.encodePacket = function (e, t, n, o) {
      "function" == typeof t && (o = t, t = !1), "function" == typeof n && (o = n, n = null);
      e.data === undefined ? undefined : e.data.buffer || e.data;
      var i = a[e.type];
      return undefined !== e.data && (i += n ? s.encode(String(e.data), {
        strict: !1
      }) : String(e.data)), o("" + i);
    }, t.decodePacket = function (e, t, n) {
      if (e === undefined) return c;

      if ("string" == typeof e) {
        if (n && !1 === (e = function (e) {
          try {
            e = s.decode(e, {
              strict: !1
            });
          } catch (t) {
            return !1;
          }

          return e;
        }(e))) return c;
        var o = e.charAt(0);
        return Number(o) == o && u[o] ? e.length > 1 ? {
          type: u[o],
          data: e.substring(1)
        } : {
          type: u[o]
        } : c;
      }

      o = new Uint8Array(e)[0];
      var i = sliceBuffer(e, 1);
      return l && "blob" === t && (i = new l([i])), {
        type: u[o],
        data: i
      };
    }, t.encodePayload = function (e, n, o) {
      "function" == typeof n && (o = n, n = null);
      var s = i(e);
      if (!e.length) return o("0:");
      !function (e, t, n) {
        for (var o = new Array(e.length), i = r(e.length, n), s = function s(e, n, i) {
          t(n, function (t, n) {
            o[e] = n, i(t, o);
          });
        }, a = 0; a < e.length; a++) {
          s(a, e[a], i);
        }
      }(e, function (e, o) {
        t.encodePacket(e, !!s && n, !0, function (e) {
          o(null, function (e) {
            return e.length + ":" + e;
          }(e));
        });
      }, function (e, t) {
        return o(t.join(""));
      });
    }, t.decodePayload = function (e, n, o) {
      var i;
      if ("function" == typeof n && (o = n, n = null), "" === e) return o(c, 0, 1);

      for (var r, s, a = "", u = 0, l = e.length; u < l; u++) {
        var f = e.charAt(u);

        if (":" === f) {
          if ("" === a || a != (r = Number(a))) return o(c, 0, 1);
          if (a != (s = e.substr(u + 1, r)).length) return o(c, 0, 1);

          if (s.length) {
            if (i = t.decodePacket(s, n, !0), c.type === i.type && c.data === i.data) return o(c, 0, 1);
            if (!1 === o(i, u + r, l)) return;
          }

          u += r, a = "";
        } else a += f;
      }

      return "" !== a ? o(c, 0, 1) : void 0;
    };
  }, function (e, t, n) {
    var o = n(44);

    e.exports = function (e, t, n) {
      if (o(e), t === undefined) return e;

      switch (n) {
        case 1:
          return function (n) {
            return e.call(t, n);
          };

        case 2:
          return function (n, o) {
            return e.call(t, n, o);
          };

        case 3:
          return function (n, o, i) {
            return e.call(t, n, o, i);
          };
      }

      return function () {
        return e.apply(t, arguments);
      };
    };
  }, function (e, t) {
    var n = {}.toString;

    e.exports = function (e) {
      return n.call(e).slice(8, -1);
    };
  }, function (e, t) {
    e.exports = !0;
  }, function (e, t) {
    t.f = {}.propertyIsEnumerable;
  }, function (e, t) {
    e.exports = {};
  }, function (e, t, n) {
    var o = n(56);

    e.exports = function (e) {
      return Object(o(e));
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t["default"] = {
      message: "message",
      imMessage: "imMessage",
      userPresence: "userPresence",
      groupPresence: "groupPresence"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });

    var o = C(n(6)),
        i = C(n(0)),
        r = C(n(1)),
        s = n(29),
        a = n(25),
        u = n(192),
        c = C(n(9)),
        l = C(n(207)),
        f = C(n(224)),
        d = C(n(107)),
        p = C(n(225)),
        h = C(n(226)),
        y = C(n(227)),
        v = C(n(228)),
        m = C(n(229)),
        g = C(n(230)),
        b = C(n(231)),
        _ = C(n(232)),
        k = C(n(233));

    function C(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var w = function () {
      function e() {
        (0, i["default"])(this, e), this._event = s.eventCenter, this._goEasyUploader = null, this._goEasySocket = null, this._dataCache = null, this._messageSender = null, this._history = null, this._conversations = null, this._iMReceiver = null, this._groupMessageReceive = null, this._groupPresenceSubscriber = null, this._groupOnlineCount = null, this._groupHereNow = null, this._privateMessageReceive = null, this._userPresenceSubscriber = null, this._userHereNow = null;
      }

      return (0, r["default"])(e, [{
        key: "on",
        value: function value(e, t) {
          this._event.on(e, t);
        }
      }, {
        key: "initialBeforeConnect",
        value: function value(t) {
          e.userId = t.id, e.userData = t.data, this._dataCache = new k["default"](this, t), this._messageSender = new l["default"](this), this._history = new f["default"](this), this._goEasyUploader = new d["default"](this), this._userHereNow = new g["default"](this), this._groupHereNow = new b["default"](this), this._groupOnlineCount = new y["default"](this);
        }
      }, {
        key: "initialAfterConnect",
        value: function value() {
          this._iMReceiver = new _["default"](this), this._conversations = new a.Conversations(this), this._groupPresenceSubscriber = new v["default"](this), this._groupMessageReceive = new p["default"](this), this._userPresenceSubscriber = new m["default"](this), this._privateMessageReceive = new h["default"](this);
        }
      }, {
        key: "initialGoEasySocket",
        value: function value(e) {
          this._goEasySocket = e;
        }
      }, {
        key: "createTextMessage",
        value: function value(e) {
          return u.messageCreator.create(c["default"].text, e);
        }
      }, {
        key: "createImageMessage",
        value: function value(e) {
          return u.messageCreator.create(c["default"].image, e);
        }
      }, {
        key: "createFileMessage",
        value: function value(e) {
          return u.messageCreator.create(c["default"].file, e);
        }
      }, {
        key: "createAudioMessage",
        value: function value(e) {
          return u.messageCreator.create(c["default"].audio, e);
        }
      }, {
        key: "createVideoMessage",
        value: function value(e) {
          return u.messageCreator.create(c["default"].video, e);
        }
      }, {
        key: "createCustomMessage",
        value: function value(e) {
          return u.messageCreator.create(e.type, e);
        }
      }, {
        key: "latestConversations",
        value: function value() {
          return this._conversations ? this._conversations.latestConversations() : o["default"].reject({
            code: 500,
            content: "Please connect GoEasyIM first."
          });
        }
      }, {
        key: "groupMarkAsRead",
        value: function value(e, t) {
          return this._conversations.groupMarkAsRead(e, t);
        }
      }, {
        key: "privateMarkAsRead",
        value: function value(e, t) {
          return this._conversations.privateMarkAsRead(e, t);
        }
      }, {
        key: "removePrivateConversation",
        value: function value(e) {
          return this._conversations.removeConversation(e, a.ConversationType.PRIVATE);
        }
      }, {
        key: "removeGroupConversation",
        value: function value(e) {
          return this._conversations.removeConversation(e, a.ConversationType.GROUP);
        }
      }, {
        key: "topPrivateConversation",
        value: function value(e, t) {
          return this._conversations.topConversation(e, t, a.ConversationType.PRIVATE);
        }
      }, {
        key: "topGroupConversation",
        value: function value(e, t) {
          return this._conversations.topConversation(e, t, a.ConversationType.GROUP);
        }
      }, {
        key: "history",
        value: function value(e) {
          return this._history.history(e);
        }
      }, {
        key: "upload",
        value: function value(e, t, n) {
          return this._goEasyUploader.upload(e, t, n);
        }
      }, {
        key: "sendSystemMessage",
        value: function value(e, t) {
          return this._messageSender.send(e, t, a.ConversationType.SYSTEM);
        }
      }, {
        key: "sendMessage",
        value: function value(e) {
          return this._messageSender.sendMessage(e);
        }
      }, {
        key: "sendPrivateMessage",
        value: function value(e, t) {
          return this._messageSender.send(e, t, a.ConversationType.PRIVATE);
        }
      }, {
        key: "subscribeUserPresence",
        value: function value(e) {
          return this._userPresenceSubscriber.presence(e);
        }
      }, {
        key: "unsubscribeUserPresence",
        value: function value(e) {
          return this._userPresenceSubscriber.unPresence(e);
        }
      }, {
        key: "hereNow",
        value: function value(e) {
          return this._userHereNow.hereNow(e, a.ConversationType.PRIVATE);
        }
      }, {
        key: "sendGroupMessage",
        value: function value(e, t) {
          return this._messageSender.send(e, t, a.ConversationType.GROUP);
        }
      }, {
        key: "subscribeGroup",
        value: function value(e) {
          return this._groupMessageReceive.subscribe(e);
        }
      }, {
        key: "unsubscribeGroup",
        value: function value(e) {
          return this._groupMessageReceive.unsubscribe(e);
        }
      }, {
        key: "subscribeGroupPresence",
        value: function value(e) {
          return this._groupPresenceSubscriber.presence(e);
        }
      }, {
        key: "unsubscribeGroupPresence",
        value: function value(e) {
          return this._groupPresenceSubscriber.unPresence(e);
        }
      }, {
        key: "groupHereNow",
        value: function value(e) {
          return this._groupHereNow.hereNow(e);
        }
      }, {
        key: "groupOnlineCount",
        value: function value(e) {
          return this._groupOnlineCount.get(e);
        }
      }]), e;
    }();

    w.version = null, w.userId = undefined, w.userData = null, t["default"] = w;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(21)),
        i = l(n(0)),
        r = l(n(1)),
        s = l(n(42)),
        a = n(2),
        u = (l(n(9)), l(n(49))),
        c = n(25);

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = function () {
      function e(t) {
        (0, i["default"])(this, e), this.type = "", this.to = {
          type: null,
          id: null,
          data: null
        }, this.timestamp = Date.now(), this.senderId = null, this.payload = null, this.messageId = a.UUID.get(), this.status = u["default"]["new"], this.validate(t), this.setSenderId(), this.setType(t), this.setNotification(t), this.setPayload(t), this.setTo(t), this.setData();
      }

      return (0, r["default"])(e, [{
        key: "validate",
        value: function value(e) {
          if (!a.calibrator.isObject(e)) throw Error("it is an empty message.");
        }
      }, {
        key: "setType",
        value: function value(e) {
          throw Error("Abstract method");
        }
      }, {
        key: "setNotification",
        value: function value(e) {
          if (e.notification) {
            if (!a.calibrator.isObject(e.notification)) throw Error("notification require an object.");
            if (a.calibrator.isEmpty(e.notification.title)) throw Error("notification's title is empty.");
            if (a.calibrator.isEmpty(e.notification.body)) throw Error("notification's body is empty.");
            if (e.notification.title.length > 32) throw Error("notification's title over max length 32");
            if (e.notification.body.length > 50) throw Error("notification's body over max length 50");
            this.notification = e.notification;
          }
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          this.payload = (0, o["default"])(null);
        }
      }, {
        key: "setSenderId",
        value: function value() {
          if (!s["default"].userId) throw Error("please call connect() first.");
          this.senderId = s["default"].userId;
        }
      }, {
        key: "setTo",
        value: function value(e) {
          this.to = e.to;
        }
      }, {
        key: "setData",
        value: function value() {
          this.to && this.to.type == c.ConversationType.GROUP && (this.senderData = s["default"].userData);
        }
      }]), e;
    }();

    t["default"] = f;
  }, function (e, t) {
    e.exports = function (e) {
      if ("function" != typeof e) throw TypeError(e + " is not a function!");
      return e;
    };
  }, function (e, t) {
    e.exports = function (e, t) {
      return {
        enumerable: !(1 & e),
        configurable: !(2 & e),
        writable: !(4 & e),
        value: t
      };
    };
  }, function (e, t) {
    var n = 0,
        o = Math.random();

    e.exports = function (e) {
      return "Symbol(".concat(e === undefined ? "" : e, ")_", (++n + o).toString(36));
    };
  }, function (e, t, n) {
    var o = n(22).f,
        i = n(27),
        r = n(14)("toStringTag");

    e.exports = function (e, t, n) {
      e && !i(e = n ? e : e.prototype, r) && o(e, r, {
        configurable: !0,
        value: t
      });
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = c(n(21)),
        i = c(n(0)),
        r = c(n(1)),
        s = n(2),
        a = n(25),
        u = c(n(49));

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = function () {
      function e() {
        (0, i["default"])(this, e);
      }

      return (0, r["default"])(e, null, [{
        key: "assemble",
        value: function value(e) {
          if (!s.calibrator.isDef(e)) return null;

          try {
            var t = (0, o["default"])(null);
            return t.type = e.mt, t.timestamp = e.ts, t.senderId = e.s, t.payload = JSON.parse(e.p), t.messageId = e.i, t.status = u["default"].success, e.t == a.ConversationType.GROUP ? (t.groupId = e.r, t.senderData = e.d ? JSON.parse(e.d) : {}) : t.receiverId = e.r, t;
          } catch (n) {
            throw Error(n);
          }
        }
      }]), e;
    }();

    t["default"] = l;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t["default"] = {
      "new": "new",
      sending: "sending",
      success: "success",
      fail: "fail"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(3)),
        i = f(n(0)),
        r = f(n(1)),
        s = f(n(4)),
        a = f(n(12)),
        u = f(n(5)),
        c = f(n(70)),
        l = n(17);

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          if ((0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e), !l.calibrator.isDef(e.file)) throw Error("file is empty.");
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
        }
      }]), t;
    }(c["default"]);

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(3)),
        i = l(n(0)),
        r = l(n(1)),
        s = l(n(4)),
        a = l(n(12)),
        u = l(n(5)),
        c = n(17);

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          if ((0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e), !c.calibrator.isDef(e.file)) throw Error("file is empty.");
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
        }
      }]), t;
    }(l(n(70))["default"]);

    t["default"] = f;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = c(n(3)),
        i = c(n(0)),
        r = c(n(1)),
        s = c(n(4)),
        a = c(n(12)),
        u = c(n(5));

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          if ((0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e), !(e.file instanceof File)) throw Error("wrong file type.");
          if (0 == e.file.size) throw Error("File size is 0.");
          if (e.file.size > 31457280) throw Error("message-length limit 30mib");
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e), this.payload.contentType = e.file.type, this.payload.name = e.file.name, this.payload.size = e.file.size;
          var n = (window.URL || window.webkitURL).createObjectURL(e.file);
          this.payload.url = n;
        }
      }]), t;
    }(c(n(70))["default"]);

    t["default"] = l;
  }, function (e, t, n) {
    (function (o) {
      function i() {
        var e;

        try {
          e = t.storage.debug;
        } catch (n) {}

        return !e && void 0 !== o && "env" in o && (e = o.env.DEBUG), e;
      }

      (t = e.exports = n(241)).log = function () {
        return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
      }, t.formatArgs = function (e) {
        var n = this.useColors;
        if (e[0] = (n ? "%c" : "") + this.namespace + (n ? " %c" : " ") + e[0] + (n ? "%c " : " ") + "+" + t.humanize(this.diff), !n) return;
        var o = "color: " + this.color;
        e.splice(1, 0, o, "color: inherit");
        var i = 0,
            r = 0;
        e[0].replace(/%[a-zA-Z%]/g, function (e) {
          "%%" !== e && "%c" === e && (r = ++i);
        }), e.splice(r, 0, o);
      }, t.save = function (e) {
        try {
          null == e ? t.storage.removeItem("debug") : t.storage.debug = e;
        } catch (n) {}
      }, t.load = i, t.useColors = function () {
        if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return !0;
        if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
        return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
      }, t.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : function () {
        try {
          return window.localStorage;
        } catch (e) {}
      }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.formatters.j = function (e) {
        try {
          return JSON.stringify(e);
        } catch (t) {
          return "[UnexpectedJSONParseError]: " + t.message;
        }
      }, t.enable(i());
    }).call(t, n(73));
  }, function (e, t, n) {
    var o = n(23),
        i = n(13).document,
        r = o(i) && o(i.createElement);

    e.exports = function (e) {
      return r ? i.createElement(e) : {};
    };
  }, function (e, t, n) {
    var o = n(23);

    e.exports = function (e, t) {
      if (!o(e)) return e;
      var n, i;
      if (t && "function" == typeof (n = e.toString) && !o(i = n.call(e))) return i;
      if ("function" == typeof (n = e.valueOf) && !o(i = n.call(e))) return i;
      if (!t && "function" == typeof (n = e.toString) && !o(i = n.call(e))) return i;
      throw TypeError("Can't convert object to primitive value");
    };
  }, function (e, t) {
    e.exports = function (e) {
      if (e == undefined) throw TypeError("Can't call method on  " + e);
      return e;
    };
  }, function (e, t) {
    var n = Math.ceil,
        o = Math.floor;

    e.exports = function (e) {
      return isNaN(e = +e) ? 0 : (e > 0 ? o : n)(e);
    };
  }, function (e, t, n) {
    var o = n(59)("keys"),
        i = n(46);

    e.exports = function (e) {
      return o[e] || (o[e] = i(e));
    };
  }, function (e, t, n) {
    var o = n(7),
        i = n(13),
        r = i["__core-js_shared__"] || (i["__core-js_shared__"] = {});
    (e.exports = function (e, t) {
      return r[e] || (r[e] = t !== undefined ? t : {});
    })("versions", []).push({
      version: o.version,
      mode: n(37) ? "pure" : "global",
      copyright: "© 2020 Denis Pushkarev (zloirock.ru)"
    });
  }, function (e, t) {
    e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
  }, function (e, t, n) {
    var o = n(19),
        i = n(137),
        r = n(60),
        s = n(58)("IE_PROTO"),
        a = function a() {},
        _u = function u() {
      var e,
          t = n(54)("iframe"),
          o = r.length;

      for (t.style.display = "none", n(87).appendChild(t), t.src = "javascript:", (e = t.contentWindow.document).open(), e.write("<script>document.F=Object<\/script>"), e.close(), _u = e.F; o--;) {
        delete _u.prototype[r[o]];
      }

      return _u();
    };

    e.exports = Object.create || function (e, t) {
      var n;
      return null !== e ? (a.prototype = o(e), n = new a(), a.prototype = null, n[s] = e) : n = _u(), t === undefined ? n : i(n, t);
    };
  }, function (e, t, n) {
    t.f = n(14);
  }, function (e, t, n) {
    var o = n(13),
        i = n(7),
        r = n(37),
        s = n(62),
        a = n(22).f;

    e.exports = function (e) {
      var t = i.Symbol || (i.Symbol = r ? {} : o.Symbol || {});
      "_" == e.charAt(0) || e in t || a(t, e, {
        value: s.f(e)
      });
    };
  }, function (e, t) {
    t.f = Object.getOwnPropertySymbols;
  }, function (e, t, n) {
    var o = n(38),
        i = n(45),
        r = n(24),
        s = n(55),
        a = n(27),
        u = n(79),
        c = Object.getOwnPropertyDescriptor;
    t.f = n(18) ? c : function (e, t) {
      if (e = r(e), t = s(t, !0), u) try {
        return c(e, t);
      } catch (n) {}
      if (a(e, t)) return i(!o.f.call(e, t), e[t]);
    };
  }, function (e, t, n) {
    var o = n(16),
        i = n(7),
        r = n(30);

    e.exports = function (e, t) {
      var n = (i.Object || {})[e] || Object[e],
          s = {};
      s[e] = t(n), o(o.S + o.F * r(function () {
        n(1);
      }), "Object", s);
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t.ModuleType = {
      IM: "IM",
      PUBSUB: "PUBSUB"
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(44);

    e.exports.f = function (e) {
      return new function (e) {
        var t, n;
        this.promise = new e(function (e, o) {
          if (t !== undefined || n !== undefined) throw TypeError("Bad Promise constructor");
          t = e, n = o;
        }), this.resolve = o(t), this.reject = o(n);
      }(e);
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t.ConversationType = {
      GROUP: "group",
      PRIVATE: "private"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(3)),
        i = f(n(0)),
        r = f(n(1)),
        s = f(n(4)),
        a = f(n(12)),
        u = f(n(5)),
        c = f(n(43)),
        l = f(n(9));

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function (e) {
      function t(e) {
        (0, i["default"])(this, t);
        var n = (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
        return n.file = null, n.onProgress = null, n.setFile(e.file), n.setOnProgress(e.onProgress), n;
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e);
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e), this.payload.size = "", this.payload.contentType = "", this.payload.name = "", this.payload.url = "";
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = l["default"].file;
        }
      }, {
        key: "setFile",
        value: function value(e) {
          this.file = e;
        }
      }, {
        key: "setOnProgress",
        value: function value(e) {
          this.onProgress = e;
        }
      }]), t;
    }(c["default"]);

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = r(n(0)),
        i = r(n(1));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var s = function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, [{
        key: "upload",
        value: function value(e) {
          throw Error("Not implementation yet.");
        }
      }]), e;
    }();

    t["default"] = s;
  }, function (e, t, n) {
    e.exports = {
      "default": n(234),
      __esModule: !0
    };
  }, function (e, t) {
    var n,
        o,
        i = e.exports = {};

    function r() {
      throw new Error("setTimeout has not been defined");
    }

    function s() {
      throw new Error("clearTimeout has not been defined");
    }

    function a(e) {
      if (n === setTimeout) return setTimeout(e, 0);
      if ((n === r || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0);

      try {
        return n(e, 0);
      } catch (t) {
        try {
          return n.call(null, e, 0);
        } catch (t) {
          return n.call(this, e, 0);
        }
      }
    }

    !function () {
      try {
        n = "function" == typeof setTimeout ? setTimeout : r;
      } catch (e) {
        n = r;
      }

      try {
        o = "function" == typeof clearTimeout ? clearTimeout : s;
      } catch (e) {
        o = s;
      }
    }();
    var u,
        c = [],
        l = !1,
        f = -1;

    function d() {
      l && u && (l = !1, u.length ? c = u.concat(c) : f = -1, c.length && p());
    }

    function p() {
      if (!l) {
        var e = a(d);
        l = !0;

        for (var t = c.length; t;) {
          for (u = c, c = []; ++f < t;) {
            u && u[f].run();
          }

          f = -1, t = c.length;
        }

        u = null, l = !1, function (e) {
          if (o === clearTimeout) return clearTimeout(e);
          if ((o === s || !o) && clearTimeout) return o = clearTimeout, clearTimeout(e);

          try {
            o(e);
          } catch (t) {
            try {
              return o.call(null, e);
            } catch (t) {
              return o.call(this, e);
            }
          }
        }(e);
      }
    }

    function h(e, t) {
      this.fun = e, this.array = t;
    }

    function y() {}

    i.nextTick = function (e) {
      var t = new Array(arguments.length - 1);
      if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {
        t[n - 1] = arguments[n];
      }
      c.push(new h(e, t)), 1 !== c.length || l || a(p);
    }, h.prototype.run = function () {
      this.fun.apply(null, this.array);
    }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = y, i.addListener = y, i.once = y, i.off = y, i.removeListener = y, i.removeAllListeners = y, i.emit = y, i.prependListener = y, i.prependOnceListener = y, i.listeners = function (e) {
      return [];
    }, i.binding = function (e) {
      throw new Error("process.binding is not supported");
    }, i.cwd = function () {
      return "/";
    }, i.chdir = function (e) {
      throw new Error("process.chdir is not supported");
    }, i.umask = function () {
      return 0;
    };
  }, function (e, t, n) {
    "use strict";

    var o,
        i = n(33),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };
    n(243)("socket.io-parser");
    var s = n(246),
        a = n(247);

    function u() {}

    t.protocol = 4, t.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], t.CONNECT = 0, t.DISCONNECT = 1, t.EVENT = 2, t.ACK = 3, t.ERROR = 4, t.BINARY_EVENT = 5, t.BINARY_ACK = 6, t.Encoder = u, t.Decoder = l;
    var c = t.ERROR + '"encode error"';

    function l() {
      this.reconstructor = null;
    }

    function f(e) {
      this.reconPack = e, this.buffers = [];
    }

    function d(e) {
      return {
        type: t.ERROR,
        data: "parser error: " + e
      };
    }

    u.prototype.encode = function (e, n) {
      n([function (e) {
        var n = "" + e.type;
        t.BINARY_EVENT !== e.type && t.BINARY_ACK !== e.type || (n += e.attachments + "-");
        e.nsp && "/" !== e.nsp && (n += e.nsp + ",");
        null != e.id && (n += e.id);

        if (null != e.data) {
          var o = function (e) {
            try {
              return (0, r["default"])(e);
            } catch (t) {
              return !1;
            }
          }(e.data);

          if (!1 === o) return c;
          n += o;
        }

        return n;
      }(e)]);
    }, s(l.prototype), l.prototype.add = function (e) {
      var n;
      if ("string" != typeof e) throw new Error("Unknown type: " + e);
      n = function (e) {
        var n = 0,
            o = {
          type: Number(e.charAt(0))
        };
        if (null == t.types[o.type]) return d("unknown packet type " + o.type);

        if (t.BINARY_EVENT === o.type || t.BINARY_ACK === o.type) {
          for (var i = ""; "-" !== e.charAt(++n) && (i += e.charAt(n), n != e.length);) {
            ;
          }

          if (i != Number(i) || "-" !== e.charAt(n)) throw new Error("Illegal attachments");
          o.attachments = Number(i);
        }

        if ("/" === e.charAt(n + 1)) for (o.nsp = ""; ++n;) {
          var r = e.charAt(n);
          if ("," === r) break;
          if (o.nsp += r, n === e.length) break;
        } else o.nsp = "/";
        var s = e.charAt(n + 1);

        if ("" !== s && Number(s) == s) {
          for (o.id = ""; ++n;) {
            var r = e.charAt(n);

            if (null == r || Number(r) != r) {
              --n;
              break;
            }

            if (o.id += e.charAt(n), n === e.length) break;
          }

          o.id = Number(o.id);
        }

        if (e.charAt(++n)) {
          var u = function (e) {
            try {
              return JSON.parse(e);
            } catch (t) {
              return !1;
            }
          }(e.substr(n)),
              c = !1 !== u && (o.type === t.ERROR || a(u));

          if (!c) return d("invalid payload");
          o.data = u;
        }

        return o;
      }(e), this.emit("decoded", n);
    }, l.prototype.destroy = function () {
      this.reconstructor && this.reconstructor.finishedReconstruction();
    }, f.prototype.takeBinaryData = function (e) {
      if (this.buffers.push(e), this.buffers.length === this.reconPack.attachments) {
        var t = binary.reconstructPacket(this.reconPack, this.buffers);
        return this.finishedReconstruction(), t;
      }

      return null;
    }, f.prototype.finishedReconstruction = function () {
      this.reconPack = null, this.buffers = [];
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(34),
        i = n(113);

    function r(e) {
      this.path = e.path, this.hostname = e.hostname, this.port = e.port, this.secure = e.secure, this.query = e.query, this.timestampParam = e.timestampParam, this.timestampRequests = e.timestampRequests, this.readyState = "", this.agent = e.agent || !1, this.socket = e.socket, this.enablesXDR = e.enablesXDR, this.pfx = e.pfx, this.key = e.key, this.passphrase = e.passphrase, this.cert = e.cert, this.ca = e.ca, this.ciphers = e.ciphers, this.rejectUnauthorized = e.rejectUnauthorized, this.forceNode = e.forceNode, this.isReactNative = e.isReactNative, this.extraHeaders = e.extraHeaders, this.localAddress = e.localAddress;
    }

    e.exports = r, i(r.prototype), r.prototype.onError = function (e, t) {
      var n = new Error(e);
      return n.type = "TransportError", n.description = t, this.emit("error", n), this;
    }, r.prototype.open = function () {
      return "closed" !== this.readyState && "" !== this.readyState || (this.readyState = "opening", this.doOpen()), this;
    }, r.prototype.close = function () {
      return "opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this;
    }, r.prototype.send = function (e) {
      if ("open" !== this.readyState) throw new Error("Transport not open");
      this.write(e);
    }, r.prototype.onOpen = function () {
      this.readyState = "open", this.writable = !0, this.emit("open");
    }, r.prototype.onData = function (e) {
      var t = o.decodePacket(e, this.socket.binaryType);
      this.onPacket(t);
    }, r.prototype.onPacket = function (e) {
      this.emit("packet", e);
    }, r.prototype.onClose = function () {
      this.readyState = "closed", this.emit("close");
    };
  }, function (e, t) {
    t.encode = function (e) {
      var t = "";

      for (var n in e) {
        e.hasOwnProperty(n) && (t.length && (t += "&"), t += encodeURIComponent(n) + "=" + encodeURIComponent(e[n]));
      }

      return t;
    }, t.decode = function (e) {
      for (var t = {}, n = e.split("&"), o = 0, i = n.length; o < i; o++) {
        var r = n[o].split("=");
        t[decodeURIComponent(r[0])] = decodeURIComponent(r[1]);
      }

      return t;
    };
  }, function (e, t) {
    e.exports = function (e, t) {
      var n = function n() {};

      n.prototype = t.prototype, e.prototype = new n(), e.prototype.constructor = e;
    };
  }, function (e, t, n) {
    (function (o) {
      function i() {
        var e;

        try {
          e = t.storage.debug;
        } catch (n) {}

        return !e && void 0 !== o && "env" in o && (e = o.env.DEBUG), e;
      }

      (t = e.exports = n(259)).log = function () {
        return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
      }, t.formatArgs = function (e) {
        var n = this.useColors;
        if (e[0] = (n ? "%c" : "") + this.namespace + (n ? " %c" : " ") + e[0] + (n ? "%c " : " ") + "+" + t.humanize(this.diff), !n) return;
        var o = "color: " + this.color;
        e.splice(1, 0, o, "color: inherit");
        var i = 0,
            r = 0;
        e[0].replace(/%[a-zA-Z%]/g, function (e) {
          "%%" !== e && "%c" === e && (r = ++i);
        }), e.splice(r, 0, o);
      }, t.save = function (e) {
        try {
          null == e ? t.storage.removeItem("debug") : t.storage.debug = e;
        } catch (n) {}
      }, t.load = i, t.useColors = function () {
        if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return !0;
        if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
        return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
      }, t.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : function () {
        try {
          return window.localStorage;
        } catch (e) {}
      }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.formatters.j = function (e) {
        try {
          return JSON.stringify(e);
        } catch (t) {
          return "[UnexpectedJSONParseError]: " + t.message;
        }
      }, t.enable(i());
    }).call(t, n(73));
  }, function (e, t, n) {
    e.exports = !n(18) && !n(30)(function () {
      return 7 != Object.defineProperty(n(54)("div"), "a", {
        get: function get() {
          return 7;
        }
      }).a;
    });
  }, function (e, t, n) {
    var o = n(27),
        i = n(24),
        r = n(126)(!1),
        s = n(58)("IE_PROTO");

    e.exports = function (e, t) {
      var n,
          a = i(e),
          u = 0,
          c = [];

      for (n in a) {
        n != s && o(a, n) && c.push(n);
      }

      for (; t.length > u;) {
        o(a, n = t[u++]) && (~r(c, n) || c.push(n));
      }

      return c;
    };
  }, function (e, t, n) {
    var o = n(36);
    e.exports = Object("z").propertyIsEnumerable(0) ? Object : function (e) {
      return "String" == o(e) ? e.split("") : Object(e);
    };
  }, function (e, t, n) {
    var o = n(57),
        i = Math.min;

    e.exports = function (e) {
      return e > 0 ? i(o(e), 9007199254740991) : 0;
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.calibrator = undefined;
    var o = s(n(20)),
        i = s(n(0)),
        r = s(n(1));

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = new (function () {
      function e() {
        (0, i["default"])(this, e);
      }

      return (0, r["default"])(e, [{
        key: "isUndef",
        value: function value(e) {
          return e === undefined || null === e;
        }
      }, {
        key: "isTrue",
        value: function value(e) {
          return !0 === e;
        }
      }, {
        key: "isFalse",
        value: function value(e) {
          return !1 === e;
        }
      }, {
        key: "isPrimitive",
        value: function value(e) {
          return "string" == typeof e || "number" == typeof e || "symbol" === (void 0 === e ? "undefined" : (0, o["default"])(e)) || "boolean" == typeof e;
        }
      }, {
        key: "isDef",
        value: function value(e) {
          return e !== undefined && null !== e;
        }
      }, {
        key: "isObject",
        value: function value(e) {
          return null !== e && "object" === (void 0 === e ? "undefined" : (0, o["default"])(e));
        }
      }, {
        key: "isPlainObject",
        value: function value(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
      }, {
        key: "isRegExp",
        value: function value(e) {
          return "[object RegExp]" === Object.prototype.toString.call(e);
        }
      }, {
        key: "isValidArrayIndex",
        value: function value(e) {
          var t = parseFloat(String(e));
          return t >= 0 && Math.floor(t) === t && isFinite(e);
        }
      }, {
        key: "isStringOrNumber",
        value: function value(e) {
          return "string" == typeof e || "number" == typeof e;
        }
      }, {
        key: "isString",
        value: function value(e) {
          return "string" == typeof e;
        }
      }, {
        key: "isNumber",
        value: function value(e) {
          return "number" == typeof e;
        }
      }, {
        key: "isArray",
        value: function value(e) {
          return "[object Array]" == Object.prototype.toString.call(e);
        }
      }, {
        key: "isEmpty",
        value: function value(e) {
          return this.isArray(e) ? 0 == e.length : this.isObject(e) ? !this.isDef(e) : !this.isNumber(e) && (this.isString(e) ? "" == e.trim() : !this.isDef(e));
        }
      }, {
        key: "isNative",
        value: function value(e) {
          return "function" == typeof e && /native code/.test(e.toString());
        }
      }, {
        key: "isFunction",
        value: function value(e) {
          return "function" == typeof e;
        }
      }]), e;
    }())();
    t.calibrator = a;
  }, function (e, t, n) {
    "use strict";

    var o = n(135)(!0);
    n(85)(String, "String", function (e) {
      this._t = String(e), this._i = 0;
    }, function () {
      var e,
          t = this._t,
          n = this._i;
      return n >= t.length ? {
        value: undefined,
        done: !0
      } : (e = o(t, n), this._i += e.length, {
        value: e,
        done: !1
      });
    });
  }, function (e, t, n) {
    "use strict";

    var o = n(37),
        i = n(16),
        r = n(86),
        s = n(26),
        a = n(39),
        u = n(136),
        c = n(47),
        l = n(88),
        f = n(14)("iterator"),
        d = !([].keys && "next" in [].keys()),
        p = function p() {
      return this;
    };

    e.exports = function (e, t, n, h, y, v, m) {
      u(n, t, h);

      var g,
          b,
          _,
          k = function k(e) {
        if (!d && e in S) return S[e];

        switch (e) {
          case "keys":
          case "values":
            return function () {
              return new n(this, e);
            };
        }

        return function () {
          return new n(this, e);
        };
      },
          C = t + " Iterator",
          w = "values" == y,
          E = !1,
          S = e.prototype,
          O = S[f] || S["@@iterator"] || y && S[y],
          T = O || k(y),
          F = y ? w ? k("entries") : T : undefined,
          M = "Array" == t && S.entries || O;

      if (M && (_ = l(M.call(new e()))) !== Object.prototype && _.next && (c(_, C, !0), o || "function" == typeof _[f] || s(_, f, p)), w && O && "values" !== O.name && (E = !0, T = function T() {
        return O.call(this);
      }), o && !m || !d && !E && S[f] || s(S, f, T), a[t] = T, a[C] = p, y) if (g = {
        values: w ? T : k("values"),
        keys: v ? T : k("keys"),
        entries: F
      }, m) for (b in g) {
        b in S || r(S, b, g[b]);
      } else i(i.P + i.F * (d || E), t, g);
      return g;
    };
  }, function (e, t, n) {
    e.exports = n(26);
  }, function (e, t, n) {
    var o = n(13).document;
    e.exports = o && o.documentElement;
  }, function (e, t, n) {
    var o = n(27),
        i = n(40),
        r = n(58)("IE_PROTO"),
        s = Object.prototype;

    e.exports = Object.getPrototypeOf || function (e) {
      return e = i(e), o(e, r) ? e[r] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? s : null;
    };
  }, function (e, t, n) {
    n(138);

    for (var o = n(13), i = n(26), r = n(39), s = n(14)("toStringTag"), a = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), u = 0; u < a.length; u++) {
      var c = a[u],
          l = o[c],
          f = l && l.prototype;
      f && !f[s] && i(f, s, c), r[c] = r.Array;
    }
  }, function (e, t, n) {
    var o = n(80),
        i = n(60).concat("length", "prototype");

    t.f = Object.getOwnPropertyNames || function (e) {
      return o(e, i);
    };
  }, function (e, t) {}, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.env = undefined;
    var o = s(n(20)),
        i = s(n(0)),
        r = s(n(1));

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = new (function () {
      function e() {
        (0, i["default"])(this, e);
      }

      return (0, r["default"])(e, [{
        key: "isWx",
        value: function value() {
          return !("undefined" == typeof wx || !wx.getLocation) && ("undefined" != typeof GameGlobal || "function" != typeof WebSocket || "function" != typeof XMLHttpRequest);
        }
      }, {
        key: "isUni",
        value: function value() {
          return !("object" !== ("undefined" == typeof uni ? "undefined" : (0, o["default"])(uni)) || !uni.getSystemInfo);
        }
      }, {
        key: "isSupportHtmlPlus",
        value: function value() {
          return !!("object" === ("undefined" == typeof plus ? "undefined" : (0, o["default"])(plus)) && plus.navigator && plus.navigator.getUserAgent() && plus.navigator.getUserAgent().indexOf("Html5Plus") > -1);
        }
      }, {
        key: "isTT",
        value: function value() {
          return !("object" !== ("undefined" == typeof tt ? "undefined" : (0, o["default"])(tt)) || !tt.getSystemInfo);
        }
      }, {
        key: "isBrowserClient",
        value: function value() {
          return this.isUni() ? "function" == typeof WebSocket && "function" == typeof XMLHttpRequest && "object" == ("undefined" == typeof localStorage ? "undefined" : (0, o["default"])(localStorage)) : !(this.isReactNative() || this.isWx() || this.isTT());
        }
      }, {
        key: "isReactNative",
        value: function value() {
          return "undefined" != typeof navigator && "ReactNative" == navigator.product;
        }
      }]), e;
    }())();
    t.env = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.GoEasyDomainNumber = undefined;
    var o = u(n(0)),
        i = u(n(1)),
        r = n(92),
        s = n(163),
        a = u(n(164));

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var c = function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, null, [{
        key: "refreshNumber",
        value: function value() {
          var e = Math.floor(Math.random() * (a["default"].maxNumber - 1) + 1);
          return r.env.isBrowserClient() && (e = parseInt(s.storage.getData("goEasyNode")) || e), e > 0 && e < a["default"].maxNumber ? e += 1 : e == a["default"].maxNumber && (e = 1), r.env.isBrowserClient() && s.storage.setData("goEasyNode", e), e;
        }
      }]), e;
    }();

    t.GoEasyDomainNumber = c;
  }, function (e, t, n) {
    e.exports = {
      "default": n(172),
      __esModule: !0
    };
  }, function (e, t, n) {
    var o = n(36),
        i = n(14)("toStringTag"),
        r = "Arguments" == o(function () {
      return arguments;
    }());

    e.exports = function (e) {
      var t, n, s;
      return e === undefined ? "Undefined" : null === e ? "Null" : "string" == typeof (n = function (e, t) {
        try {
          return e[t];
        } catch (n) {}
      }(t = Object(e), i)) ? n : r ? o(t) : "Object" == (s = o(t)) && "function" == typeof t.callee ? "Arguments" : s;
    };
  }, function (e, t, n) {
    var o = n(19),
        i = n(44),
        r = n(14)("species");

    e.exports = function (e, t) {
      var n,
          s = o(e).constructor;
      return s === undefined || (n = o(s)[r]) == undefined ? t : i(n);
    };
  }, function (e, t, n) {
    var o,
        i,
        r,
        s = n(35),
        a = n(182),
        u = n(87),
        c = n(54),
        l = n(13),
        f = l.process,
        d = l.setImmediate,
        p = l.clearImmediate,
        h = l.MessageChannel,
        y = l.Dispatch,
        v = 0,
        m = {},
        g = function g() {
      var e = +this;

      if (m.hasOwnProperty(e)) {
        var t = m[e];
        delete m[e], t();
      }
    },
        b = function b(e) {
      g.call(e.data);
    };

    d && p || (d = function d(e) {
      for (var t = [], n = 1; arguments.length > n;) {
        t.push(arguments[n++]);
      }

      return m[++v] = function () {
        a("function" == typeof e ? e : Function(e), t);
      }, o(v), v;
    }, p = function p(e) {
      delete m[e];
    }, "process" == n(36)(f) ? o = function o(e) {
      f.nextTick(s(g, e, 1));
    } : y && y.now ? o = function o(e) {
      y.now(s(g, e, 1));
    } : h ? (r = (i = new h()).port2, i.port1.onmessage = b, o = s(r.postMessage, r, 1)) : l.addEventListener && "function" == typeof postMessage && !l.importScripts ? (o = function o(e) {
      l.postMessage(e + "", "*");
    }, l.addEventListener("message", b, !1)) : o = "onreadystatechange" in c("script") ? function (e) {
      u.appendChild(c("script")).onreadystatechange = function () {
        u.removeChild(this), g.call(e);
      };
    } : function (e) {
      setTimeout(s(g, e, 1), 0);
    }), e.exports = {
      set: d,
      clear: p
    };
  }, function (e, t) {
    e.exports = function (e) {
      try {
        return {
          e: !1,
          v: e()
        };
      } catch (t) {
        return {
          e: !0,
          v: t
        };
      }
    };
  }, function (e, t, n) {
    var o = n(19),
        i = n(23),
        r = n(68);

    e.exports = function (e, t) {
      if (o(e), i(t) && t.constructor === e) return t;
      var n = r.f(e);
      return (0, n.resolve)(t), n.promise;
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.ImEventType = undefined;
    var o,
        i = n(21);
    var r = (0, ((o = i) && o.__esModule ? o : {
      "default": o
    })["default"])(null);
    r.PRIVATE_MESSAGE_RECEIVED = "PRIVATE_MESSAGE_RECEIVED", r.GROUP_MESSAGE_RECEIVED = "GROUP_MESSAGE_RECEIVED", r.SYSTEM_MESSAGE_RECEIVED = "SYSTEM_MESSAGE_RECEIVED", r.CONVERSATIONS_UPDATED = "CONVERSATIONS_UPDATED", r.CONNECTED = "CONNECTED", r.CONNECTING = "CONNECTING", r.DISCONNECTED = "DISCONNECTED", r.USER_PRESENCE = "USER_PRESENCE", r.GROUP_PRESENCE = "GROUP_PRESENCE", t.ImEventType = r;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Conversion = undefined;
    var o = u(n(0)),
        i = u(n(1)),
        r = n(69),
        s = u(n(42)),
        a = u(n(48));

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    t.Conversion = function () {
      function e() {
        (0, o["default"])(this, e), this.type = "", this.lastMessage = null, this.unread = 0, this.top = !1, this.data = null, this.lc = 0, this.lm = 0;
      }

      return (0, i["default"])(e, null, [{
        key: "buildByInMessage",
        value: function value(t) {
          var n = new e();
          return n.data = {}, n.type = t.t, n.lastMessage = a["default"].assemble(t), n.lc = n.lastMessage.timestamp - 1, n.lm = n.lastMessage.timestamp, n.unread = 0, t.t == r.ConversationType.GROUP ? n.groupId = t.r : s["default"].userId == t.r ? n.userId = t.s : n.userId = t.r, n;
        }
      }, {
        key: "buildByOutMessage",
        value: function value(t, n, o, i) {
          var s = new e();
          return s.type = n, s.lastMessage = t, s.lm = s.lastMessage.timestamp, s.lc = s.lm, s.unread = 0, n == r.ConversationType.GROUP ? (s.groupId = o, s.lastMessage.groupId = o) : (s.userId = o, s.lastMessage.receiverId = o), s;
        }
      }, {
        key: "buildByConversation",
        value: function value(t, n) {
          var o = new e();
          o.type = n.t, n.lmsg.t = n.t, o.lastMessage = a["default"].assemble(n.lmsg), o.unread = 0, o.lc = n.lcts, o.lm = o.lastMessage.timestamp, o.top = n.top || !1;
          var i = n.d ? JSON.parse(n.d) : {};
          return o.data = i, n.t == r.ConversationType.GROUP ? (o.groupId = n.g, t.putGroupData(o.groupId, i)) : (o.userId = n.uid, t.putUserData(o.userId, i), s["default"].userId == n.lmsg.s ? o.lastMessage.senderData = s["default"].userData : o.lastMessage.senderData = i), o;
        }
      }]), e;
    }();
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = s(n(0)),
        i = s(n(1)),
        r = n(2);

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, null, [{
        key: "resolve",
        value: function value() {
          return r.env.isUni() ? "uniApp" : r.env.isWx() ? "wx" : "html";
        }
      }]), e;
    }();

    t["default"] = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(3)),
        i = d(n(0)),
        r = d(n(1)),
        s = d(n(4)),
        a = d(n(12)),
        u = d(n(5)),
        c = d(n(43)),
        l = d(n(9)),
        f = n(2);

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          if (f.calibrator.isEmpty(e.text) || "" == e.text.trim()) throw Error("text is empty");
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = l["default"].text;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e), this.payload.text = e.text;
        }
      }]), t;
    }(c["default"]);

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = r(n(0)),
        i = r(n(1));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var s = function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, [{
        key: "build",
        value: function value() {
          throw Error("Not implementation yet.");
        }
      }]), e;
    }();

    t["default"] = s;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(6)),
        i = d(n(3)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(4)),
        u = d(n(5)),
        c = d(n(106)),
        l = d(n(9)),
        f = d(n(107));

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function (e) {
      function t(e) {
        (0, r["default"])(this, t);
        var n = (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this));
        return n.im = null, n.goEasyUploader = new f["default"](e), n;
      }

      return (0, u["default"])(t, e), (0, s["default"])(t, [{
        key: "build",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            var i = new c["default"]();
            t.upload(e).then(function (t) {
              var o = t.content,
                  r = o === undefined ? {} : o;
              (i = e.payload).url = r.url, i.name = r.newFileName, n(i);
            })["catch"](function (e) {
              o(e);
            });
          });
        }
      }, {
        key: "upload",
        value: function value(e) {
          var t = e.type == l["default"].video ? e.payload.video.name : e.payload.name;
          return this.goEasyUploader.upload(e.file, t, e.onProgress, e.type);
        }
      }]), t;
    }(d(n(104))["default"]);

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o,
        i = n(0),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };

    t["default"] = function s(e) {
      (0, r["default"])(this, s);
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = u(n(6)),
        i = u(n(0)),
        r = u(n(1)),
        s = n(214),
        a = u(n(218));

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var c = function () {
      function e(t) {
        (0, i["default"])(this, e), this.requestBuilder = null, this.fileUploader = s.fileUploader, this.requestBuilder = new a["default"](t);
      }

      return (0, r["default"])(e, [{
        key: "upload",
        value: function value(e, t, n, i) {
          var r = this;
          return new o["default"](function (o, s) {
            r.requestBuilder.build(e, t, i).then(function (e) {
              o(r.doUpload(e, n));
            })["catch"](function (e) {
              s(e);
            });
          });
        }
      }, {
        key: "customizeUpload",
        value: function value(e, t) {
          this.doUpload(e, t);
        }
      }, {
        key: "doUpload",
        value: function value(e, t) {
          return this.fileUploader.upload(e, t);
        }
      }]), e;
    }();

    t["default"] = c;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o,
        i = n(0),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };

    t["default"] = function s(e, t, n, o, i) {
      (0, r["default"])(this, s), this.host = "", this.headers = {}, this.parameters = {}, this.file = {}, this.payload = {}, this.host = e, this.headers = t, this.parameters = n, this.file = o, this.payload = i;
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = r(n(0)),
        i = r(n(1));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var s = function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, [{
        key: "build",
        value: function value(e, t) {}
      }, {
        key: "newFileName",
        value: function value(e) {
          return e && e.newFilename || "";
        }
      }]), e;
    }();

    t["default"] = s;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(0)),
        i = l(n(1)),
        r = l(n(28)),
        s = l(n(8)),
        a = l(n(237)),
        u = l(n(238)),
        c = n(2);

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = function () {
      function e() {
        (0, o["default"])(this, e), this.io = u["default"], this.status = r["default"].DISCONNECTED, this.permissions = [s["default"].NONE], this.emitter = null, this.connectedObservers = [], this.disconnectedObservers = [], this.emitter = new a["default"](this);
      }

      return (0, i["default"])(e, [{
        key: "connect",
        value: function value() {
          this.status = r["default"].CONNECTING;
        }
      }, {
        key: "emit",
        value: function value(e) {
          this.emitter.emit(e);
        }
      }, {
        key: "doEmit",
        value: function value(e, t, n) {}
      }, {
        key: "on",
        value: function value(e, t) {
          this.io.on(e, t);
        }
      }, {
        key: "disconnect",
        value: function value() {
          this.io.disconnect();
        }
      }, {
        key: "getStatus",
        value: function value() {
          return this.status;
        }
      }, {
        key: "addConnectedObserver",
        value: function value(e) {
          c.calibrator.isFunction(e) && this.connectedObservers.push(e);
        }
      }, {
        key: "addDisconnectedObserver",
        value: function value(e) {
          c.calibrator.isFunction(e) && this.disconnectedObservers.push(e);
        }
      }, {
        key: "notify",
        value: function value(e, t) {
          for (var n = 0; n < e.length; n++) {
            e[n](t);
          }
        }
      }]), e;
    }();

    t["default"] = f;
  }, function (e, t, n) {
    "use strict";

    var o,
        i = n(20),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };
    var s = n(248),
        a = n(115),
        u = n(116),
        c = n(74),
        l = n(117),
        f = n(118),
        d = (n(53)("socket.io-client:manager"), n(271)),
        p = n(272),
        h = n(93).GoEasyDomainNumber,
        y = Object.prototype.hasOwnProperty;

    function v(e, t) {
      if (!(this instanceof v)) return new v(e, t);
      e && "object" === (void 0 === e ? "undefined" : (0, r["default"])(e)) && (t = e, e = undefined), (t = t || {}).path = t.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = t, this.reconnection(!1 !== t.reconnection), this.reconnectionAttempts(t.reconnectionAttempts || Infinity), this.reconnectionDelay(t.reconnectionDelay || 1e3), this.reconnectionDelayMax(t.reconnectionDelayMax || 5e3), this.randomizationFactor(t.randomizationFactor || .5), this.backoff = new p({
        min: this.reconnectionDelay(),
        max: this.reconnectionDelayMax(),
        jitter: this.randomizationFactor()
      }), this.timeout(null == t.timeout ? 2e4 : t.timeout), this.readyState = "closed", this.uri = e, this.connecting = [], this.lastPing = null, this.encoding = !1, this.packetBuffer = [];
      var n = t.parser || c;
      this.encoder = new n.Encoder(), this.decoder = new n.Decoder(), this.autoConnect = !1 !== t.autoConnect, this.autoConnect && this.open();
    }

    function m() {
      var e = !1;
      return "object" === ("undefined" == typeof uni ? "undefined" : (0, r["default"])(uni)) && uni.getSystemInfo && (e = !0), e && !0 === getApp().uniAppRunningBackend;
    }

    e.exports = v, v.prototype.emitAll = function () {
      for (var e in this.emit.apply(this, arguments), this.nsps) {
        y.call(this.nsps, e) && this.nsps[e].emit.apply(this.nsps[e], arguments);
      }
    }, v.prototype.updateSocketIds = function () {
      for (var e in this.nsps) {
        y.call(this.nsps, e) && (this.nsps[e].id = this.generateId(e));
      }
    }, v.prototype.generateId = function (e) {
      return ("/" === e ? "" : e + "#") + this.engine.id;
    }, u(v.prototype), v.prototype.reconnection = function (e) {
      return arguments.length ? (this._reconnection = !!e, this) : this._reconnection;
    }, v.prototype.reconnectionAttempts = function (e) {
      return arguments.length ? (this._reconnectionAttempts = e, this) : this._reconnectionAttempts;
    }, v.prototype.reconnectionDelay = function (e) {
      return arguments.length ? (this._reconnectionDelay = e, this.backoff && this.backoff.setMin(e), this) : this._reconnectionDelay;
    }, v.prototype.randomizationFactor = function (e) {
      return arguments.length ? (this._randomizationFactor = e, this.backoff && this.backoff.setJitter(e), this) : this._randomizationFactor;
    }, v.prototype.reconnectionDelayMax = function (e) {
      return arguments.length ? (this._reconnectionDelayMax = e, this.backoff && this.backoff.setMax(e), this) : this._reconnectionDelayMax;
    }, v.prototype.timeout = function (e) {
      return arguments.length ? (this._timeout = e, this) : this._timeout;
    }, v.prototype.maybeReconnectOnOpen = function () {
      !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();
    }, v.prototype.open = v.prototype.connect = function (e, t) {
      if (this.readyState, ~this.readyState.indexOf("open")) return this;
      this.uri, this.engine = s(this.uri, this.opts);
      var n = this.engine,
          o = this;
      this.readyState = "opening", this.skipReconnect = !1;
      var i = l(n, "open", function () {
        o.onopen(), e && e();
      }),
          r = l(n, "error", function (t) {
        if ("undefined" != typeof window) {
          var n = parseInt(o.uri.match(/[1-9][0-9]*/g)[0]),
              i = h.refreshNumber();
          o.uri = o.uri.replace(n, i);
        }

        if (o.cleanup(), o.readyState = "closed", o.emitAll("connect_error", t), e) {
          var r = new Error("Connection error");
          r.data = t, e(r);
        } else o.maybeReconnectOnOpen();
      });

      if (!1 !== this._timeout) {
        var a = this._timeout,
            u = setTimeout(function () {
          i.destroy(), n.close(), n.emit("error", "timeout"), o.emitAll("connect_timeout", a);
        }, a);
        this.subs.push({
          destroy: function destroy() {
            clearTimeout(u);
          }
        });
      }

      return this.subs.push(i), this.subs.push(r), this;
    }, v.prototype.onopen = function () {
      this.cleanup(), this.readyState = "open", this.emit("open");
      var e = this.engine;
      this.subs.push(l(e, "data", f(this, "ondata"))), this.subs.push(l(e, "ping", f(this, "onping"))), this.subs.push(l(e, "pong", f(this, "onpong"))), this.subs.push(l(e, "error", f(this, "onerror"))), this.subs.push(l(e, "close", f(this, "onclose"))), this.subs.push(l(this.decoder, "decoded", f(this, "ondecoded")));
    }, v.prototype.onping = function () {
      this.lastPing = new Date(), this.emitAll("ping");
    }, v.prototype.onpong = function () {
      this.emitAll("pong", new Date() - this.lastPing);
    }, v.prototype.ondata = function (e) {
      this.decoder.add(e);
    }, v.prototype.ondecoded = function (e) {
      this.emit("packet", e);
    }, v.prototype.onerror = function (e) {
      this.emitAll("error", e);
    }, v.prototype.socket = function (e, t) {
      var n = this.nsps[e];

      if (!n) {
        n = new a(this, e, t), this.nsps[e] = n;
        var o = this;
        n.on("connecting", i), n.on("connect", function () {
          n.id = o.generateId(e);
        }), this.autoConnect && i();
      }

      function i() {
        ~d(o.connecting, n) || o.connecting.push(n);
      }

      return n;
    }, v.prototype.destroy = function (e) {
      var t = d(this.connecting, e);
      ~t && this.connecting.splice(t, 1), this.connecting.length || this.close();
    }, v.prototype.packet = function (e) {
      var t = this;
      e.query && 0 === e.type && (e.nsp += "?" + e.query), t.encoding ? t.packetBuffer.push(e) : (t.encoding = !0, this.encoder.encode(e, function (n) {
        for (var o = 0; o < n.length; o++) {
          t.engine.write(n[o], e.options);
        }

        t.encoding = !1, t.processPacketQueue();
      }));
    }, v.prototype.processPacketQueue = function () {
      if (this.packetBuffer.length > 0 && !this.encoding) {
        var e = this.packetBuffer.shift();
        this.packet(e);
      }
    }, v.prototype.cleanup = function () {
      for (var e = this.subs.length, t = 0; t < e; t++) {
        this.subs.shift().destroy();
      }

      this.packetBuffer = [], this.encoding = !1, this.lastPing = null, this.decoder.destroy();
    }, v.prototype.close = v.prototype.disconnect = function () {
      this.skipReconnect = !0, this.reconnecting = !1, "opening" === this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close();
    }, v.prototype.onclose = function (e) {
      this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", e), this._reconnection && !this.skipReconnect && this.reconnect();
    }, v.prototype.reconnect = function () {
      if (m(), this.reconnecting || this.skipReconnect) return this;
      var e = this;
      if (this.backoff.attempts >= this._reconnectionAttempts) this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = !1;else {
        var t = this.backoff.duration();
        this.reconnecting = !0;
        var n = setTimeout(function () {
          e.skipReconnect || (e.emitAll("reconnect_attempt", e.backoff.attempts), e.emitAll("reconnecting", e.backoff.attempts), e.skipReconnect || (m() ? (e.reconnecting = !1, e.reconnect(), e.emitAll("reconnect_error", "Uniapp running backend, skipped reconnect...")) : e.open(function (t) {
            t ? (e.reconnecting = !1, e.reconnect(), e.emitAll("reconnect_error", t.data)) : e.onreconnect();
          })));
        }, t);
        this.subs.push({
          destroy: function destroy() {
            clearTimeout(n);
          }
        });
      }
    }, v.prototype.onreconnect = function () {
      var e = this.backoff.attempts;
      this.reconnecting = !1, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", e);
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(250),
        i = n(263);
    t.polling = function (e) {
      var t = !1,
          n = !1;
      e.jsonp;

      if ("undefined" != typeof location) {
        var i = "https:" === location.protocol,
            r = location.port;
        r || (r = i ? 443 : 80), t = e.hostname !== location.hostname || r !== e.port, n = e.secure !== i;
      }

      return e.xdomain = t, e.xscheme = n, new o(e);
    }, t.websocket = i;
  }, function (e, t, n) {
    function o(e) {
      if (e) return function (e) {
        for (var t in o.prototype) {
          e[t] = o.prototype[t];
        }

        return e;
      }(e);
    }

    e.exports = o, o.prototype.on = o.prototype.addEventListener = function (e, t) {
      return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this;
    }, o.prototype.once = function (e, t) {
      function n() {
        this.off(e, n), t.apply(this, arguments);
      }

      return n.fn = t, this.on(e, n), this;
    }, o.prototype.off = o.prototype.removeListener = o.prototype.removeAllListeners = o.prototype.removeEventListener = function (e, t) {
      if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
      var n,
          o = this._callbacks["$" + e];
      if (!o) return this;
      if (1 == arguments.length) return delete this._callbacks["$" + e], this;

      for (var i = 0; i < o.length; i++) {
        if ((n = o[i]) === t || n.fn === t) {
          o.splice(i, 1);
          break;
        }
      }

      return this;
    }, o.prototype.emit = function (e) {
      this._callbacks = this._callbacks || {};
      var t = [].slice.call(arguments, 1),
          n = this._callbacks["$" + e];
      if (n) for (var o = 0, i = (n = n.slice(0)).length; o < i; ++o) {
        n[o].apply(this, t);
      }
      return this;
    }, o.prototype.listeners = function (e) {
      return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || [];
    }, o.prototype.hasListeners = function (e) {
      return !!this.listeners(e).length;
    };
  }, function (e, t, n) {
    "use strict";

    var o,
        i = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),
        r = 64,
        s = {},
        a = 0,
        u = 0;

    function c(e) {
      var t = "";

      do {
        t = i[e % r] + t, e = Math.floor(e / r);
      } while (e > 0);

      return t;
    }

    function l() {
      var e = c(+new Date());
      return e !== o ? (a = 0, o = e) : e + "." + c(a++);
    }

    for (; u < r; u++) {
      s[i[u]] = u;
    }

    l.encode = c, l.decode = function (e) {
      var t = 0;

      for (u = 0; u < e.length; u++) {
        t = t * r + s[e.charAt(u)];
      }

      return t;
    }, e.exports = l;
  }, function (e, t, n) {
    "use strict";

    var o,
        i = n(20),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };
    var s = n(74),
        a = n(116),
        u = n(267),
        c = n(117),
        l = n(118),
        f = (n(53)("socket.io-client:socket"), n(268)),
        d = n(269);
    e.exports = y;
    var p = {
      connect: 1,
      connect_error: 1,
      connect_timeout: 1,
      connecting: 1,
      disconnect: 1,
      error: 1,
      reconnect: 1,
      reconnect_attempt: 1,
      reconnect_failed: 1,
      reconnect_error: 1,
      reconnecting: 1,
      ping: 1,
      pong: 1
    },
        h = a.prototype.emit;

    function y(e, t, n) {
      this.io = e, this.nsp = t, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = !1, this.disconnected = !0, this.flags = {}, n && n.query && (this.query = n.query), this.io.autoConnect && this.open();
    }

    a(y.prototype), y.prototype.subEvents = function () {
      if (!this.subs) {
        var e = this.io;
        this.subs = [c(e, "open", l(this, "onopen")), c(e, "packet", l(this, "onpacket")), c(e, "close", l(this, "onclose"))];
      }
    }, y.prototype.open = y.prototype.connect = function () {
      return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this);
    }, y.prototype.send = function () {
      var e = u(arguments);
      return e.unshift("message"), this.emit.apply(this, e), this;
    }, y.prototype.emit = function (e) {
      if (p.hasOwnProperty(e)) return h.apply(this, arguments), this;
      var t = u(arguments),
          n = {
        type: (this.flags.binary !== undefined ? this.flags.binary : d(t)) ? s.BINARY_EVENT : s.EVENT,
        data: t,
        options: {}
      };
      return n.options.compress = !this.flags || !1 !== this.flags.compress, "function" == typeof t[t.length - 1] && (this.ids, this.acks[this.ids] = t.pop(), n.id = this.ids++), this.connected ? this.packet(n) : this.sendBuffer.push(n), this.flags = {}, this;
    }, y.prototype.packet = function (e) {
      e.nsp = this.nsp, this.io.packet(e);
    }, y.prototype.onopen = function () {
      if ("/" !== this.nsp) if (this.query) {
        var e = "object" === (0, r["default"])(this.query) ? f.encode(this.query) : this.query;
        this.packet({
          type: s.CONNECT,
          query: e
        });
      } else this.packet({
        type: s.CONNECT
      });
    }, y.prototype.onclose = function (e) {
      this.connected = !1, this.disconnected = !0, delete this.id, this.emit("disconnect", e);
    }, y.prototype.onpacket = function (e) {
      var t = e.nsp === this.nsp,
          n = e.type === s.ERROR && "/" === e.nsp;
      if (t || n) switch (e.type) {
        case s.CONNECT:
          this.onconnect();
          break;

        case s.EVENT:
        case s.BINARY_EVENT:
          this.onevent(e);
          break;

        case s.ACK:
        case s.BINARY_ACK:
          this.onack(e);
          break;

        case s.DISCONNECT:
          this.ondisconnect();
          break;

        case s.ERROR:
          this.emit("error", e.data);
      }
    }, y.prototype.onevent = function (e) {
      var t = e.data || [];
      null != e.id && t.push(this.ack(e.id)), this.connected ? h.apply(this, t) : this.receiveBuffer.push(t);
    }, y.prototype.ack = function (e) {
      var t = this,
          n = !1;
      return function () {
        if (!n) {
          n = !0;
          var o = u(arguments);
          t.packet({
            type: d(o) ? s.BINARY_ACK : s.ACK,
            id: e,
            data: o
          });
        }
      };
    }, y.prototype.onack = function (e) {
      var t = this.acks[e.id];
      "function" == typeof t ? (e.id, e.data, t.apply(this, e.data), delete this.acks[e.id]) : e.id;
    }, y.prototype.onconnect = function () {
      this.connected = !0, this.disconnected = !1, this.emit("connect"), this.emitBuffered();
    }, y.prototype.emitBuffered = function () {
      var e;

      for (e = 0; e < this.receiveBuffer.length; e++) {
        h.apply(this, this.receiveBuffer[e]);
      }

      for (this.receiveBuffer = [], e = 0; e < this.sendBuffer.length; e++) {
        this.packet(this.sendBuffer[e]);
      }

      this.sendBuffer = [];
    }, y.prototype.ondisconnect = function () {
      this.nsp, this.destroy(), this.onclose("io server disconnect");
    }, y.prototype.destroy = function () {
      if (this.subs) {
        for (var e = 0; e < this.subs.length; e++) {
          this.subs[e].destroy();
        }

        this.subs = null;
      }

      this.io.destroy(this);
    }, y.prototype.close = y.prototype.disconnect = function () {
      return this.connected && (this.nsp, this.packet({
        type: s.DISCONNECT
      })), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
    }, y.prototype.compress = function (e) {
      return this.flags.compress = e, this;
    }, y.prototype.binary = function (e) {
      return this.flags.binary = e, this;
    };
  }, function (e, t, n) {
    function o(e) {
      if (e) return function (e) {
        for (var t in o.prototype) {
          e[t] = o.prototype[t];
        }

        return e;
      }(e);
    }

    e.exports = o, o.prototype.on = o.prototype.addEventListener = function (e, t) {
      return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this;
    }, o.prototype.once = function (e, t) {
      function n() {
        this.off(e, n), t.apply(this, arguments);
      }

      return n.fn = t, this.on(e, n), this;
    }, o.prototype.off = o.prototype.removeListener = o.prototype.removeAllListeners = o.prototype.removeEventListener = function (e, t) {
      if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
      var n,
          o = this._callbacks["$" + e];
      if (!o) return this;
      if (1 == arguments.length) return delete this._callbacks["$" + e], this;

      for (var i = 0; i < o.length; i++) {
        if ((n = o[i]) === t || n.fn === t) {
          o.splice(i, 1);
          break;
        }
      }

      return this;
    }, o.prototype.emit = function (e) {
      this._callbacks = this._callbacks || {};
      var t = [].slice.call(arguments, 1),
          n = this._callbacks["$" + e];
      if (n) for (var o = 0, i = (n = n.slice(0)).length; o < i; ++o) {
        n[o].apply(this, t);
      }
      return this;
    }, o.prototype.listeners = function (e) {
      return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || [];
    }, o.prototype.hasListeners = function (e) {
      return !!this.listeners(e).length;
    };
  }, function (e, t, n) {
    "use strict";

    e.exports = function (e, t, n) {
      return e.on(t, n), {
        destroy: function destroy() {
          e.removeListener(t, n);
        }
      };
    };
  }, function (e, t) {
    var n = [].slice;

    e.exports = function (e, t) {
      if ("string" == typeof t && (t = e[t]), "function" != typeof t) throw new Error("bind() requires a function");
      var o = n.call(arguments, 2);
      return function () {
        return t.apply(e, o.concat(n.call(arguments)));
      };
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.uniApp = undefined;
    var o = s(n(0)),
        i = s(n(1)),
        r = n(2);

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = new (function () {
      function e() {
        (0, o["default"])(this, e), this.overrided = !1;
      }

      return (0, i["default"])(e, [{
        key: "overrideUniShowHideMethods",
        value: function value() {
          if (r.env.isUni() && !this.overrided && getApp() && "undefined" != typeof getApp().$options) {
            this.overrided = !0;
            var e = getApp().$options;

            if ("undefined" != typeof e.onShow) {
              var t = e.onShow[0];

              e.onShow[0] = function () {
                getApp().uniAppRunningBackend = !1, t && t.call(e);
              };
            }

            if ("undefined" != typeof e.onHide) {
              var n = e.onHide[0];

              e.onHide[0] = function () {
                getApp().uniAppRunningBackend = !0, n && n.call(e);
              };
            }
          }
        }
      }, {
        key: "runningBackend",
        value: function value() {
          return getApp().uniAppRunningBackend;
        }
      }]), e;
    }())();
    t.uniApp = a;
  }, function (e, t, n) {
    "use strict";

    var o = r(n(121)),
        i = r(n(276));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    o["default"].version = i["default"].version, e.exports = o["default"];
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = y(n(122)),
        i = y(n(0)),
        r = y(n(1)),
        s = y(n(131)),
        a = y(n(171)),
        u = n(29),
        c = n(15),
        l = n(25),
        f = y(n(28)),
        d = y(n(236)),
        p = n(2),
        h = n(67);

    function y(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var v = function () {
      function e(t) {
        if ((0, i["default"])(this, e), this.goEasySocket = null, this.pubsub = null, this.im = null, null !== e.instance && e.instance.getConnectionStatus() !== f["default"].DISCONNECTED) return e.instance;
        this.validateOptions(t), this.setUriAndOpts(t), this.options = t, this.options.artifactVersion = e.version, this.pubsub = new s["default"](t), this.im = new a["default"](t);
      }

      return (0, r["default"])(e, [{
        key: "connect",
        value: function value(e) {
          this.getConnectionStatus() !== f["default"].DISCONNECTED && p.calibrator.isObject(e) && p.calibrator.isFunction(e.onFailed) ? e.onFailed({
            code: 408,
            content: "It is already connected, don't try again until disconnect() is called. "
          }) : (this.extendOptions(e), this.pubsub.initialBeforeConnect(), this.im.initialBeforeConnect({
            id: e.id,
            data: e.data
          }), this.goEasySocket = new d["default"](this.options), this.im.initialGoEasySocket(this.goEasySocket), this.goEasySocket.connect(), this.pubsub.initialGoEasySocket(this.goEasySocket), this.im.initialAfterConnect());
        }
      }, {
        key: "disconnect",
        value: function value(e) {
          this.goEasySocket.disconnect(e).then(function () {
            p.calibrator.isObject(e) && p.calibrator.isFunction(e.onSuccess) && e.onSuccess();
          })["catch"](function (t) {
            p.calibrator.isObject(e) && p.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "getConnectionStatus",
        value: function value() {
          return this.goEasySocket ? this.goEasySocket.getStatus() : f["default"].DISCONNECTED;
        }
      }, {
        key: "validateOptions",
        value: function value(e) {
          var t = "";
          if (!p.calibrator.isObject(e)) throw t = "options is require an object.", Error(t);
          if (!p.calibrator.isPrimitive(e.appkey) || 0 == e.appkey.length) throw t = "Invalid options:'host' is empty.", Error(t);
          if (!p.calibrator.isPrimitive(e.host) || 0 == e.host.length) throw t = "Invalid options:'host' is empty.", Error(t);
          if (!p.calibrator.isArray(e.modules)) throw t = "Invalid options: 'modules' must be nonempty array", Error(t);
          var n = (0, o["default"])(h.ModuleType),
              i = e.modules.map(function (e) {
            var o = e.toUpperCase();
            if (!n.includes(o)) throw t = "Invalid options: module '" + e + "' is not support", Error(t);
            return o;
          });
          e.modules = i;
        }
      }, {
        key: "extendOptions",
        value: function value(e) {
          if (p.calibrator.isFunction(e.onSuccess) ? this.options.onSuccess = e.onSuccess : this.options.onSuccess = p.noop, p.calibrator.isFunction(e.onFailed) ? this.options.onFailed = e.onFailed : this.options.onFailed = p.noop, p.calibrator.isFunction(e.onProgress) ? this.options.onProgress = e.onProgress : this.options.onProgress = p.noop, !this.options.modules.includes(h.ModuleType.IM) || !p.calibrator.isEmpty(e.id) && p.calibrator.isStringOrNumber(e.id)) {
            var t = "anonymous-" + Math.floor(1e5 * Math.random() + 1);
            this.options.id = e.id || t;
          } else if (p.calibrator.isObject(e) && p.calibrator.isFunction(e.onFailed)) throw {
            code: 400,
            content: "TypeError: id requires number or string."
          };

          if (p.calibrator.isDef(e.data) && !p.calibrator.isObject(e.data)) throw {
            code: 400,
            content: "TypeError: data requires an object."
          };

          if ((p.calibrator.isDef(e.data) ? String(e.data).length : 0) > 300) {
            if (p.calibrator.isObject(e) && p.calibrator.isFunction(e.onFailed)) throw {
              code: 400,
              content: "user.data-length limit 300 byte."
            };
          } else this.options.data = e.data;

          p.calibrator.isDef(e.otp) && (this.options.otp = e.otp);
        }
      }, {
        key: "setUriAndOpts",
        value: function value(e) {
          var t = "://" + p.GoEasyDomainNumber.refreshNumber() + e.host;

          if (p.env.isBrowserClient()) {
            var n = void 0;
            !0 === e.supportOldBrowser ? (n = ["polling", "websocket"], e.forceTLS = !1) : n = ["websocket"], !1 === e.forceTLS ? e.uri = "http" + t + ":80" : e.uri = "https" + t + ":443", e.opts = {
              transports: n,
              timeout: c.SocketTimeout.connect
            };
          } else e.uri = "https://wx-" + e.host + ":443", e.opts = {
            transports: ["websocket"],
            reconnectionDelayMax: c.SocketTimeout.reconnectionDelayMax
          };
        }
      }], [{
        key: "getInstance",
        value: function value(t) {
          return null === e.instance && (e.instance = new e(t)), e.instance;
        }
      }]), e;
    }();

    v.IM_EVENT = u.ImEventType, v.IM_SCENE = l.ConversationType, v.version = "2.0.0", v.instance = null, t["default"] = v;
  }, function (e, t, n) {
    e.exports = {
      "default": n(123),
      __esModule: !0
    };
  }, function (e, t, n) {
    n(124), e.exports = n(7).Object.values;
  }, function (e, t, n) {
    var o = n(16),
        i = n(125)(!1);
    o(o.S, "Object", {
      values: function values(e) {
        return i(e);
      }
    });
  }, function (e, t, n) {
    var o = n(18),
        i = n(31),
        r = n(24),
        s = n(38).f;

    e.exports = function (e) {
      return function (t) {
        for (var n, a = r(t), u = i(a), c = u.length, l = 0, f = []; c > l;) {
          n = u[l++], o && !s.call(a, n) || f.push(e ? [n, a[n]] : a[n]);
        }

        return f;
      };
    };
  }, function (e, t, n) {
    var o = n(24),
        i = n(82),
        r = n(127);

    e.exports = function (e) {
      return function (t, n, s) {
        var a,
            u = o(t),
            c = i(u.length),
            l = r(s, c);

        if (e && n != n) {
          for (; c > l;) {
            if ((a = u[l++]) != a) return !0;
          }
        } else for (; c > l; l++) {
          if ((e || l in u) && u[l] === n) return e || l || 0;
        }

        return !e && -1;
      };
    };
  }, function (e, t, n) {
    var o = n(57),
        i = Math.max,
        r = Math.min;

    e.exports = function (e, t) {
      return (e = o(e)) < 0 ? i(e + t, 0) : r(e, t);
    };
  }, function (e, t, n) {
    e.exports = {
      "default": n(129),
      __esModule: !0
    };
  }, function (e, t, n) {
    n(130);
    var o = n(7).Object;

    e.exports = function (e, t, n) {
      return o.defineProperty(e, t, n);
    };
  }, function (e, t, n) {
    var o = n(16);
    o(o.S + o.F * !n(18), "Object", {
      defineProperty: n(22).f
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(0)),
        i = f(n(1)),
        r = f(n(132)),
        s = f(n(165)),
        a = f(n(166)),
        u = f(n(167)),
        c = f(n(169)),
        l = n(67);

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function () {
      function e(t) {
        (0, o["default"])(this, e), this.goEasySocket = null, this.publisher = null, this.subscriber = null, this.presence = null, this.histories = null, this.options = null, this.hereNows = null, this.neverConnect = !0, this.options = t;
      }

      return (0, i["default"])(e, [{
        key: "initialGoEasySocket",
        value: function value(e) {
          this.goEasySocket = e, this.subscriber.initialGoEasySocket(), this.presence.initialGoEasySocket();
        }
      }, {
        key: "initialBeforeConnect",
        value: function value() {
          this.neverConnect = !1, this.publisher = new a["default"](this), this.subscriber = new u["default"](this), this.histories = new r["default"](this), this.presence = new c["default"](this), this.hereNows = new s["default"](this);
        }
      }, {
        key: "validateOptions",
        value: function value() {
          var e = this.options;
          if (!e.modules || !e.modules.includes(l.ModuleType.PUBSUB)) throw Error("Invalid options: module '" + l.ModuleType.PUBSUB + "' is not enabled");
        }
      }, {
        key: "publish",
        value: function value(e) {
          this.validateOptions(), this.publisher.publish(e);
        }
      }, {
        key: "subscribe",
        value: function value(e) {
          this.validateOptions(), this.subscriber.subscribe(e);
        }
      }, {
        key: "unsubscribe",
        value: function value(e) {
          this.validateOptions(), this.subscriber.unsubscribe(e);
        }
      }, {
        key: "subscribePresence",
        value: function value(e) {
          this.validateOptions(), this.presence.subscribePresence(e);
        }
      }, {
        key: "unsubscribePresence",
        value: function value(e) {
          this.validateOptions(), this.presence.unsubscribePresence(e);
        }
      }, {
        key: "history",
        value: function value(e) {
          this.validateOptions(), this.histories.get(e);
        }
      }, {
        key: "hereNow",
        value: function value(e) {
          this.validateOptions(), this.hereNows.byChannel(e);
        }
      }, {
        key: "hereNowByUserIds",
        value: function value(e) {
          this.validateOptions(), this.hereNows.byUserId(e);
        }
      }]), e;
    }();

    d.instance = null, t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(0)),
        i = l(n(1)),
        r = n(2),
        s = n(11),
        a = l(n(10)),
        u = l(n(8)),
        c = n(15);

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = function () {
      function e(t) {
        (0, o["default"])(this, e), this.pubSub = null, this.pubSub = t;
      }

      return (0, i["default"])(e, [{
        key: "get",
        value: function value(e, t) {
          if (r.calibrator.isFunction(e.onSuccess) || (e.onSuccess = r.noop), r.calibrator.isFunction(e.onFailed) || (e.onFailed = r.noop), r.calibrator.isDef(e.channel)) {
            r.calibrator.isNumber(e.channel) && (e.channel = e.channel.toString());
            var n = new a["default"]({
              name: s.EmitType.historyMessages,
              permission: u["default"].READ,
              params: e,
              singleTimeout: c.SocketTimeout.commonQuerySingle,
              totalTimeout: c.SocketTimeout.commonQueryTotal,
              success: function success(t) {
                e.onSuccess({
                  code: t.resultCode || t.code || 200,
                  content: t.content
                });
              },
              fail: function fail(t) {
                e.onFailed({
                  code: t.resultCode || t.code,
                  content: t.content
                });
              }
            });
            this.pubSub.goEasySocket.emit(n);
          } else e.onFailed(res);
        }
      }]), e;
    }();

    t["default"] = f;
  }, function (e, t, n) {
    e.exports = {
      "default": n(134),
      __esModule: !0
    };
  }, function (e, t, n) {
    n(84), n(89), e.exports = n(62).f("iterator");
  }, function (e, t, n) {
    var o = n(57),
        i = n(56);

    e.exports = function (e) {
      return function (t, n) {
        var r,
            s,
            a = String(i(t)),
            u = o(n),
            c = a.length;
        return u < 0 || u >= c ? e ? "" : undefined : (r = a.charCodeAt(u)) < 55296 || r > 56319 || u + 1 === c || (s = a.charCodeAt(u + 1)) < 56320 || s > 57343 ? e ? a.charAt(u) : r : e ? a.slice(u, u + 2) : s - 56320 + (r - 55296 << 10) + 65536;
      };
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(61),
        i = n(45),
        r = n(47),
        s = {};
    n(26)(s, n(14)("iterator"), function () {
      return this;
    }), e.exports = function (e, t, n) {
      e.prototype = o(s, {
        next: i(1, n)
      }), r(e, t + " Iterator");
    };
  }, function (e, t, n) {
    var o = n(22),
        i = n(19),
        r = n(31);
    e.exports = n(18) ? Object.defineProperties : function (e, t) {
      i(e);

      for (var n, s = r(t), a = s.length, u = 0; a > u;) {
        o.f(e, n = s[u++], t[n]);
      }

      return e;
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(139),
        i = n(140),
        r = n(39),
        s = n(24);
    e.exports = n(85)(Array, "Array", function (e, t) {
      this._t = s(e), this._i = 0, this._k = t;
    }, function () {
      var e = this._t,
          t = this._k,
          n = this._i++;
      return !e || n >= e.length ? (this._t = undefined, i(1)) : i(0, "keys" == t ? n : "values" == t ? e[n] : [n, e[n]]);
    }, "values"), r.Arguments = r.Array, o("keys"), o("values"), o("entries");
  }, function (e, t) {
    e.exports = function () {};
  }, function (e, t) {
    e.exports = function (e, t) {
      return {
        value: t,
        done: !!e
      };
    };
  }, function (e, t, n) {
    e.exports = {
      "default": n(142),
      __esModule: !0
    };
  }, function (e, t, n) {
    n(143), n(91), n(148), n(149), e.exports = n(7).Symbol;
  }, function (e, t, n) {
    "use strict";

    var o = n(13),
        i = n(27),
        r = n(18),
        s = n(16),
        a = n(86),
        u = n(144).KEY,
        c = n(30),
        l = n(59),
        f = n(47),
        d = n(46),
        p = n(14),
        h = n(62),
        y = n(63),
        v = n(145),
        m = n(146),
        g = n(19),
        b = n(23),
        _ = n(40),
        k = n(24),
        C = n(55),
        w = n(45),
        E = n(61),
        S = n(147),
        O = n(65),
        T = n(64),
        F = n(22),
        M = n(31),
        P = O.f,
        I = F.f,
        N = S.f,
        _x = o.Symbol,
        R = o.JSON,
        A = R && R.stringify,
        j = p("_hidden"),
        D = p("toPrimitive"),
        U = {}.propertyIsEnumerable,
        B = l("symbol-registry"),
        q = l("symbols"),
        L = l("op-symbols"),
        G = Object.prototype,
        z = "function" == typeof _x && !!T.f,
        H = o.QObject,
        V = !H || !H.prototype || !H.prototype.findChild,
        W = r && c(function () {
      return 7 != E(I({}, "a", {
        get: function get() {
          return I(this, "a", {
            value: 7
          }).a;
        }
      })).a;
    }) ? function (e, t, n) {
      var o = P(G, t);
      o && delete G[t], I(e, t, n), o && e !== G && I(G, t, o);
    } : I,
        J = function J(e) {
      var t = q[e] = E(_x.prototype);
      return t._k = e, t;
    },
        $ = z && "symbol" == typeof _x.iterator ? function (e) {
      return "symbol" == typeof e;
    } : function (e) {
      return e instanceof _x;
    },
        K = function K(e, t, n) {
      return e === G && K(L, t, n), g(e), t = C(t, !0), g(n), i(q, t) ? (n.enumerable ? (i(e, j) && e[j][t] && (e[j][t] = !1), n = E(n, {
        enumerable: w(0, !1)
      })) : (i(e, j) || I(e, j, w(1, {})), e[j][t] = !0), W(e, t, n)) : I(e, t, n);
    },
        Y = function Y(e, t) {
      g(e);

      for (var n, o = v(t = k(t)), i = 0, r = o.length; r > i;) {
        K(e, n = o[i++], t[n]);
      }

      return e;
    },
        Q = function Q(e) {
      var t = U.call(this, e = C(e, !0));
      return !(this === G && i(q, e) && !i(L, e)) && (!(t || !i(this, e) || !i(q, e) || i(this, j) && this[j][e]) || t);
    },
        X = function X(e, t) {
      if (e = k(e), t = C(t, !0), e !== G || !i(q, t) || i(L, t)) {
        var n = P(e, t);
        return !n || !i(q, t) || i(e, j) && e[j][t] || (n.enumerable = !0), n;
      }
    },
        Z = function Z(e) {
      for (var t, n = N(k(e)), o = [], r = 0; n.length > r;) {
        i(q, t = n[r++]) || t == j || t == u || o.push(t);
      }

      return o;
    },
        ee = function ee(e) {
      for (var t, n = e === G, o = N(n ? L : k(e)), r = [], s = 0; o.length > s;) {
        !i(q, t = o[s++]) || n && !i(G, t) || r.push(q[t]);
      }

      return r;
    };

    z || (a((_x = function x() {
      if (this instanceof _x) throw TypeError("Symbol is not a constructor!");

      var e = d(arguments.length > 0 ? arguments[0] : undefined),
          t = function t(n) {
        this === G && t.call(L, n), i(this, j) && i(this[j], e) && (this[j][e] = !1), W(this, e, w(1, n));
      };

      return r && V && W(G, e, {
        configurable: !0,
        set: t
      }), J(e);
    }).prototype, "toString", function () {
      return this._k;
    }), O.f = X, F.f = K, n(90).f = S.f = Z, n(38).f = Q, T.f = ee, r && !n(37) && a(G, "propertyIsEnumerable", Q, !0), h.f = function (e) {
      return J(p(e));
    }), s(s.G + s.W + s.F * !z, {
      Symbol: _x
    });

    for (var te = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ne = 0; te.length > ne;) {
      p(te[ne++]);
    }

    for (var oe = M(p.store), ie = 0; oe.length > ie;) {
      y(oe[ie++]);
    }

    s(s.S + s.F * !z, "Symbol", {
      "for": function _for(e) {
        return i(B, e += "") ? B[e] : B[e] = _x(e);
      },
      keyFor: function keyFor(e) {
        if (!$(e)) throw TypeError(e + " is not a symbol!");

        for (var t in B) {
          if (B[t] === e) return t;
        }
      },
      useSetter: function useSetter() {
        V = !0;
      },
      useSimple: function useSimple() {
        V = !1;
      }
    }), s(s.S + s.F * !z, "Object", {
      create: function create(e, t) {
        return t === undefined ? E(e) : Y(E(e), t);
      },
      defineProperty: K,
      defineProperties: Y,
      getOwnPropertyDescriptor: X,
      getOwnPropertyNames: Z,
      getOwnPropertySymbols: ee
    });
    var re = c(function () {
      T.f(1);
    });
    s(s.S + s.F * re, "Object", {
      getOwnPropertySymbols: function getOwnPropertySymbols(e) {
        return T.f(_(e));
      }
    }), R && s(s.S + s.F * (!z || c(function () {
      var e = _x();

      return "[null]" != A([e]) || "{}" != A({
        a: e
      }) || "{}" != A(Object(e));
    })), "JSON", {
      stringify: function stringify(e) {
        for (var t, n, o = [e], i = 1; arguments.length > i;) {
          o.push(arguments[i++]);
        }

        if (n = t = o[1], (b(t) || e !== undefined) && !$(e)) return m(t) || (t = function t(e, _t2) {
          if ("function" == typeof n && (_t2 = n.call(this, e, _t2)), !$(_t2)) return _t2;
        }), o[1] = t, A.apply(R, o);
      }
    }), _x.prototype[D] || n(26)(_x.prototype, D, _x.prototype.valueOf), f(_x, "Symbol"), f(Math, "Math", !0), f(o.JSON, "JSON", !0);
  }, function (e, t, n) {
    var o = n(46)("meta"),
        i = n(23),
        r = n(27),
        s = n(22).f,
        a = 0,
        u = Object.isExtensible || function () {
      return !0;
    },
        c = !n(30)(function () {
      return u(Object.preventExtensions({}));
    }),
        l = function l(e) {
      s(e, o, {
        value: {
          i: "O" + ++a,
          w: {}
        }
      });
    },
        f = e.exports = {
      KEY: o,
      NEED: !1,
      fastKey: function fastKey(e, t) {
        if (!i(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;

        if (!r(e, o)) {
          if (!u(e)) return "F";
          if (!t) return "E";
          l(e);
        }

        return e[o].i;
      },
      getWeak: function getWeak(e, t) {
        if (!r(e, o)) {
          if (!u(e)) return !0;
          if (!t) return !1;
          l(e);
        }

        return e[o].w;
      },
      onFreeze: function onFreeze(e) {
        return c && f.NEED && u(e) && !r(e, o) && l(e), e;
      }
    };
  }, function (e, t, n) {
    var o = n(31),
        i = n(64),
        r = n(38);

    e.exports = function (e) {
      var t = o(e),
          n = i.f;
      if (n) for (var s, a = n(e), u = r.f, c = 0; a.length > c;) {
        u.call(e, s = a[c++]) && t.push(s);
      }
      return t;
    };
  }, function (e, t, n) {
    var o = n(36);

    e.exports = Array.isArray || function (e) {
      return "Array" == o(e);
    };
  }, function (e, t, n) {
    var o = n(24),
        i = n(90).f,
        r = {}.toString,
        s = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

    e.exports.f = function (e) {
      return s && "[object Window]" == r.call(e) ? function (e) {
        try {
          return i(e);
        } catch (t) {
          return s.slice();
        }
      }(e) : i(o(e));
    };
  }, function (e, t, n) {
    n(63)("asyncIterator");
  }, function (e, t, n) {
    n(63)("observable");
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.UUID = undefined;
    var o = s(n(0)),
        i = s(n(1)),
        r = s(n(151));

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, null, [{
        key: "get",
        value: function value() {
          return (0, r["default"])().replace(/-/g, "");
        }
      }]), e;
    }();

    t.UUID = a;
  }, function (e, t, n) {
    var o,
        i,
        r = n(152),
        s = n(153),
        a = 0,
        u = 0;

    e.exports = function (e, t, n) {
      var c = t && n || 0,
          l = t || [],
          f = (e = e || {}).node || o,
          d = e.clockseq !== undefined ? e.clockseq : i;

      if (null == f || null == d) {
        var p = r();
        null == f && (f = o = [1 | p[0], p[1], p[2], p[3], p[4], p[5]]), null == d && (d = i = 16383 & (p[6] << 8 | p[7]));
      }

      var h = e.msecs !== undefined ? e.msecs : new Date().getTime(),
          y = e.nsecs !== undefined ? e.nsecs : u + 1,
          v = h - a + (y - u) / 1e4;
      if (v < 0 && e.clockseq === undefined && (d = d + 1 & 16383), (v < 0 || h > a) && e.nsecs === undefined && (y = 0), y >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
      a = h, u = y, i = d;
      var m = (1e4 * (268435455 & (h += 122192928e5)) + y) % 4294967296;
      l[c++] = m >>> 24 & 255, l[c++] = m >>> 16 & 255, l[c++] = m >>> 8 & 255, l[c++] = 255 & m;
      var g = h / 4294967296 * 1e4 & 268435455;
      l[c++] = g >>> 8 & 255, l[c++] = 255 & g, l[c++] = g >>> 24 & 15 | 16, l[c++] = g >>> 16 & 255, l[c++] = d >>> 8 | 128, l[c++] = 255 & d;

      for (var b = 0; b < 6; ++b) {
        l[c + b] = f[b];
      }

      return t || s(l);
    };
  }, function (e, t) {
    var n = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof window.msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);

    if (n) {
      var o = new Uint8Array(16);

      e.exports = function () {
        return n(o), o;
      };
    } else {
      var i = new Array(16);

      e.exports = function () {
        for (var e, t = 0; t < 16; t++) {
          0 == (3 & t) && (e = 4294967296 * Math.random()), i[t] = e >>> ((3 & t) << 3) & 255;
        }

        return i;
      };
    }
  }, function (e, t) {
    for (var n = [], o = 0; o < 256; ++o) {
      n[o] = (o + 256).toString(16).substr(1);
    }

    e.exports = function (e, t) {
      var o = t || 0,
          i = n;
      return [i[e[o++]], i[e[o++]], i[e[o++]], i[e[o++]], "-", i[e[o++]], i[e[o++]], "-", i[e[o++]], i[e[o++]], "-", i[e[o++]], i[e[o++]], "-", i[e[o++]], i[e[o++]], i[e[o++]], i[e[o++]], i[e[o++]], i[e[o++]]].join("");
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.goEasyArray = undefined;
    var o = u(n(3)),
        i = u(n(0)),
        r = u(n(1)),
        s = u(n(4)),
        a = u(n(5));

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var c = new (function (e) {
      function t() {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).apply(this, arguments));
      }

      return (0, a["default"])(t, e), (0, r["default"])(t, [{
        key: "deleteByKey",
        value: function value(e, t, n) {
          var o = e.findIndex(function (e) {
            return e[t] == n;
          });
          o > -1 && e.splice(o, 1);
        }
      }, {
        key: "unshiftGuid",
        value: function value(e) {
          var t = !1,
              n = this.findIndex(function (t) {
            return t == e;
          });

          for (n > -1 && (t = !0, this.splice(n, 1)), this.unshift(e); this.length > 300;) {
            this.pop();
          }

          return t;
        }
      }]), t;
    }(Array))();
    t.goEasyArray = c;
  }, function (e, t, n) {
    n(156), e.exports = n(7).Object.getPrototypeOf;
  }, function (e, t, n) {
    var o = n(40),
        i = n(88);
    n(66)("getPrototypeOf", function () {
      return function (e) {
        return i(o(e));
      };
    });
  }, function (e, t, n) {
    e.exports = {
      "default": n(158),
      __esModule: !0
    };
  }, function (e, t, n) {
    n(159), e.exports = n(7).Object.setPrototypeOf;
  }, function (e, t, n) {
    var o = n(16);
    o(o.S, "Object", {
      setPrototypeOf: n(160).set
    });
  }, function (e, t, n) {
    var o = n(23),
        i = n(19),
        r = function r(e, t) {
      if (i(e), !o(t) && null !== t) throw TypeError(t + ": can't set as prototype!");
    };

    e.exports = {
      set: Object.setPrototypeOf || ("__proto__" in {} ? function (e, t, o) {
        try {
          (o = n(35)(Function.call, n(65).f(Object.prototype, "__proto__").set, 2))(e, []), t = !(e instanceof Array);
        } catch (i) {
          t = !0;
        }

        return function (e, n) {
          return r(e, n), t ? e.__proto__ = n : o(e, n), e;
        };
      }({}, !1) : undefined),
      check: r
    };
  }, function (e, t, n) {
    n(162);
    var o = n(7).Object;

    e.exports = function (e, t) {
      return o.create(e, t);
    };
  }, function (e, t, n) {
    var o = n(16);
    o(o.S, "Object", {
      create: n(61)
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.storage = undefined;
    var o = r(n(0)),
        i = r(n(1));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var s = new (function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, [{
        key: "getCookie",
        value: function value(e) {
          var t,
              n = new RegExp("(^| )" + e + "=([^;]*)(;|$)");
          return (t = document.cookie.match(n)) ? unescape(t[2]) : null;
        }
      }, {
        key: "getData",
        value: function value(e) {
          return window.localStorage ? window.localStorage.getItem(e) : this.getCookie(e);
        }
      }, {
        key: "setCookie",
        value: function value(e, t) {
          var n = new Date();
          n.setTime(n.getTime() + 2592e6), document.cookie = e + "=" + escape(t) + ";expires=" + n.toGMTString();
        }
      }, {
        key: "setData",
        value: function value(e, t) {
          window.localStorage ? window.localStorage.setItem(e, t) : this.setCookie(e, t);
        }
      }]), e;
    }())();
    t.storage = s;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t["default"] = {
      maxNumber: 5
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(0)),
        i = l(n(1)),
        r = n(2),
        s = n(11),
        a = l(n(10)),
        u = l(n(8)),
        c = n(15);

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = function () {
      function e(t) {
        (0, o["default"])(this, e), this.pubSub = null, this.pubSub = t;
      }

      return (0, i["default"])(e, [{
        key: "byChannel",
        value: function value(e) {
          var t = {
            channels: [],
            includeUsers: !1,
            distinct: !1
          };
          if (r.calibrator.isFunction(e.onSuccess) || (e.onSuccess = r.noop), r.calibrator.isFunction(e.onFailed) || (e.onFailed = r.noop), Array.isArray(e.channels)) for (var n = 0; n < e.channels.length; n++) {
            var o = e.channels[n];
            r.calibrator.isNumber(o) && (o = o.toString()), t.channels.push(o);
          }

          if (0 != t.channels.length) {
            1 == e.includeUsers && (t.includeUsers = !0), 1 == e.distinct && (t.distinct = !0);
            var i = new a["default"]({
              name: s.EmitType.hereNow,
              permission: u["default"].READ,
              params: t,
              singleTimeout: c.SocketTimeout.commonQuerySingle,
              totalTimeout: c.SocketTimeout.commonQueryTotal,
              success: function success(t) {
                var n = t.content,
                    o = n.channels;

                for (var i in o) {
                  if (o.hasOwnProperty(i)) {
                    var r = o[i];
                    r.users = r.users.map(function (e) {
                      return e.data = JSON.parse(e.data), e;
                    });
                  }
                }

                e.onSuccess({
                  code: t.resultCode || t.code || 200,
                  content: n
                });
              },
              fail: function fail(t) {
                e.onFailed({
                  code: t.resultCode || t.code || 200,
                  content: t.content
                });
              }
            });
            this.pubSub.goEasySocket.emit(i);
          } else e.onFailed({
            code: 408,
            content: "channels is required."
          });
        }
      }, {
        key: "byUserId",
        value: function value(e) {
          var t = {
            userIds: [],
            distinct: !0
          };
          if (r.calibrator.isFunction(e.onSuccess) || (e.onSuccess = r.noop), r.calibrator.isFunction(e.onFailed) || (e.onFailed = r.noop), r.calibrator.isDef(e.userIds) && (t.userIds = e.userIds), 0 == e.distinct && (t.distinct = !1), 0 === t.userIds.length) e.onFailed({
            code: 400,
            content: "userIds is required"
          });else if (t.userIds.length > 500) e.onFailed({
            code: 400,
            content: "userIds is over max length 500"
          });else {
            var n = new a["default"]({
              name: s.EmitType.hereNowByUserIds,
              permission: u["default"].READ,
              params: t,
              singleTimeout: c.SocketTimeout.commonQuerySingle,
              totalTimeout: c.SocketTimeout.commonQueryTotal,
              success: function success(t) {
                var n = t.content;
                n = n.map(function (e) {
                  var t = {};
                  return t.id = e.userId, t.data = e.userData ? JSON.parse(e.userData) : {}, t;
                }), e.onSuccess({
                  code: t.resultCode || t.code || 200,
                  content: n
                });
              },
              fail: function fail(t) {
                e.onFailed({
                  code: t.resultCode || t.code || 200,
                  content: t.content
                });
              }
            });
            this.pubSub.goEasySocket.emit(n);
          }
        }
      }]), e;
    }();

    t["default"] = f;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(0)),
        i = l(n(1)),
        r = n(2),
        s = l(n(10)),
        a = n(11),
        u = l(n(8)),
        c = n(15);

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = function () {
      function e(t) {
        (0, o["default"])(this, e), this.pubSub = null, this.pubSub = t;
      }

      return (0, i["default"])(e, [{
        key: "publish",
        value: function value(e) {
          if (r.calibrator.isFunction(e.onFailed) || (e.onFailed = r.noop), r.calibrator.isFunction(e.onSuccess) || (e.onSuccess = r.noop), r.calibrator.isEmpty(e.channel)) throw {
            code: 400,
            content: "channel is required."
          };
          if (r.calibrator.isNumber(e.channel) && (e.channel = e.channel.toString()), r.calibrator.isEmpty(e.message)) throw {
            code: 400,
            content: "message is required."
          };
          if (r.calibrator.isNumber(e.message) && (e.message = e.message.toString()), !r.calibrator.isString(e.message)) throw {
            code: 400,
            content: "TypeError: message requires string."
          };

          if (r.calibrator.isObject(e.notification)) {
            if (r.calibrator.isEmpty(e.notification.title)) throw {
              code: 400,
              content: "notification.title is required."
            };
            if (!r.calibrator.isString(e.notification.title)) throw {
              code: 400,
              content: "TypeError: notification.title requires string."
            };
            if (e.notification.title.length > 32) throw {
              code: 400,
              content: "TypeError: notification.title over max length 32."
            };
            if (r.calibrator.isEmpty(e.notification.body)) throw {
              code: 400,
              content: "notification.body is required."
            };
            if (!r.calibrator.isString(e.notification.body)) throw {
              code: 400,
              content: "TypeError: notification.body must be string."
            };
            if (e.notification.body.length > 50) throw {
              code: 400,
              content: "notification.body over max length 50."
            };
          } else if (r.calibrator.isPrimitive(e.notification)) throw {
            code: 400,
            content: "TypeError: notification requires an object."
          };

          var t = {
            channel: e.channel,
            content: e.message,
            nt: e.notification,
            guid: r.UUID.get()
          },
              n = new s["default"]({
            name: a.EmitType.publish,
            params: t,
            singleTimeout: c.SocketTimeout.commonRequestSingle,
            totalTimeout: c.SocketTimeout.commonRequestTotal,
            permission: u["default"].WRITE,
            success: function success(t) {
              e.onSuccess({
                code: 200,
                content: "ok"
              });
            },
            fail: function fail(t) {
              e.onFailed({
                code: t.resultCode,
                content: t.content
              });
            }
          });
          this.pubSub.goEasySocket.emit(n);
        }
      }]), e;
    }();

    t["default"] = f;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = p(n(0)),
        i = p(n(1)),
        r = n(2),
        s = p(n(10)),
        a = n(11),
        u = p(n(8)),
        c = p(n(168)),
        l = p(n(41)),
        f = n(15),
        d = p(n(28));

    function p(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var h = function () {
      function e(t) {
        (0, o["default"])(this, e), this.subscriptions = [], this.pubSub = null, this.pubSub = t;
      }

      return (0, i["default"])(e, [{
        key: "initialGoEasySocket",
        value: function value() {
          var e = this.pubSub.goEasySocket;
          e.addMessageObserver(l["default"].message, this.onNewMessage.bind(this)), e.addExpiredReconnectedObserver(this.onExpiredReconnected.bind(this)), e.addConnectedObserver(this.onReconnected.bind(this));
        }
      }, {
        key: "resubscribe",
        value: function value() {
          var e = this.subscriptions.slice(0);
          this.subscriptions = [];

          for (var t = 0; t < e.length; t++) {
            0 != e[t].channels.length && this.subscribe(e[t]);
          }
        }
      }, {
        key: "onExpiredReconnected",
        value: function value() {
          this.resubscribe();
        }
      }, {
        key: "onReconnected",
        value: function value() {
          this.pubSub.neverConnect || this.pubSub.goEasySocket.status == d["default"].RECONNECTED || this.resubscribe();
        }
      }, {
        key: "onNewMessage",
        value: function value(e) {
          if (!(e.n.indexOf("_presence") > -1)) {
            e.a && this.pubSub.goEasySocket.sendAck("ack", {
              publishGuid: e.i
            });
            var t = {
              time: e.t,
              channel: e.n,
              content: e.c
            };
            this.findSubscriptionByChannel(t.channel).onMessage(t);
          }
        }
      }, {
        key: "formatOptions",
        value: function value(e) {
          var t = !r.calibrator.isEmpty(e.channel),
              n = !r.calibrator.isEmpty(e.channels);
          if (this.formatCallback(e), r.calibrator.isFunction(e.onMessage) || (e.onMessage = r.noop), !t && !n) return e.onFailed({
            code: 400,
            content: "channel is required"
          }), !1;

          if (!t || !n) {
            if (t && (r.calibrator.isNumber(e.channel) && (e.channel = e.channel.toString()), e.channels = [e.channel]), n) {
              if (!Array.isArray(e.channels) || 0 == e.channels.length) return void e.onFailed({
                code: 400,
                content: "channels must be an array"
              });
              if (e.channels.length > 500) return e.onFailed({
                code: 400,
                content: "channels over max length:500"
              }), !1;

              for (var o = 0, i = e.channels.length; o < i; o++) {
                if (r.calibrator.isNumber(e.channels[o]) && (e.channels[o] = e.channels[o].toString()), r.calibrator.isEmpty(e.channels[o])) return e.onFailed({
                  code: 400,
                  content: "Channels array contains empty channel"
                }), !1;
              }
            }

            return !0;
          }

          e.onFailed({
            code: 400,
            content: "subscribe to either channel or channels, not both"
          });
        }
      }, {
        key: "formatCallback",
        value: function value(e) {
          r.calibrator.isFunction(e.onSuccess) || (e.onSuccess = r.noop), r.calibrator.isFunction(e.onFailed) || (e.onFailed = r.noop);
        }
      }, {
        key: "subscribe",
        value: function value(e) {
          var t = this;

          if (this.formatOptions(e)) {
            var n = new s["default"]({
              name: a.EmitType.subscribe,
              permission: u["default"].READ,
              singleTimeout: f.SocketTimeout.commonInfiniteSingle,
              totalTimeout: f.SocketTimeout.commonInfiniteTotal,
              params: {
                channels: e.channels
              },
              success: function success() {
                var n = new c["default"]({
                  channels: e.channels,
                  onSuccess: e.onSuccess,
                  onFailed: e.onFailed,
                  onMessage: e.onMessage
                });
                t.subscriptions.push(n), e.onSuccess({
                  code: 200,
                  content: "ok"
                });
              },
              fail: function fail(t) {
                e.onFailed({
                  code: t.resultCode,
                  content: t.content
                });
              }
            });
            this.pubSub.goEasySocket.emit(n);
          }
        }
      }, {
        key: "unsubscribe",
        value: function value(e) {
          var t = this;
          if (this.formatCallback(e), r.calibrator.isDef(e.channel)) {
            if (r.calibrator.isNumber(e.channel) && (e.channel = e.channel.toString()), this.findSubscriptionByChannel(e.channel)) {
              var n = new s["default"]({
                name: a.EmitType.unsubscribe,
                params: {
                  channel: e.channel
                },
                permission: u["default"].READ,
                singleTimeout: f.SocketTimeout.commonRequestSingle,
                totalTimeout: f.SocketTimeout.commonRequestTotal,
                success: function success() {
                  e.onSuccess({
                    code: 200,
                    content: "ok"
                  }), t.removeChannel(e.channel);
                },
                fail: function fail(t) {
                  e.onFailed({
                    code: t.resultCode,
                    content: t.content
                  });
                }
              });
              this.pubSub.goEasySocket.emit(n);
            } else e.onFailed({
              code: 400,
              content: "channel[" + e.channel + "] is not subscribed"
            });
          } else e.onFailed({
            code: 400,
            content: "channel is required"
          });
        }
      }, {
        key: "removeChannel",
        value: function value(e) {
          for (var t = 0; t < this.subscriptions.length; t++) {
            for (var n = this.subscriptions[t].channels, o = 0; o < n.length; o++) {
              if (n[o] == e) {
                this.subscriptions[t].channels.splice(o, 1);
                break;
              }
            }
          }
        }
      }, {
        key: "findSubscriptionByChannel",
        value: function value(e) {
          for (var t = !1, n = null, o = this.subscriptions.length - 1; o >= 0; o--) {
            for (var i = this.subscriptions[o].channels, r = 0; r < i.length; r++) {
              if (i[r] == e) {
                t = !0, n = this.subscriptions[o];
                break;
              }
            }

            if (t) break;
          }

          return n;
        }
      }]), e;
    }();

    t["default"] = h;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = r(n(0)),
        i = r(n(1));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var s = function () {
      function e(t) {
        (0, o["default"])(this, e), this.channels = [], this.onSuccess = null, this.onFailed = null, this.onMessage = null, this.channels = t.channels, this.onSuccess = t.onSuccess, this.onFailed = t.onFailed, this.onMessage = t.onMessage;
      }

      return (0, i["default"])(e, [{
        key: "empty",
        value: function value() {}
      }]), e;
    }();

    t["default"] = s;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = p(n(0)),
        i = p(n(1)),
        r = n(2),
        s = p(n(10)),
        a = n(11),
        u = p(n(8)),
        c = n(15),
        l = p(n(41)),
        f = p(n(170)),
        d = p(n(28));

    function p(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var h = function () {
      function e(t) {
        (0, o["default"])(this, e), this.presenters = [], this.pubSub = null, this.pubSub = t;
      }

      return (0, i["default"])(e, [{
        key: "initialGoEasySocket",
        value: function value() {
          var e = this.pubSub.goEasySocket;
          e.addMessageObserver(l["default"].message, this.onNewMessage.bind(this)), e.addExpiredReconnectedObserver(this.onExpiredReconnected.bind(this)), e.addConnectedObserver(this.onReconnected.bind(this));
        }
      }, {
        key: "resubscribe",
        value: function value() {
          var e = this.presenters.slice(0);
          this.presenters = [];

          for (var t = 0; t < e.length; t++) {
            for (var n = 0; n < e[t].channels.length; n++) {
              var o = e[t].channels[n].split("_presence");
              e[t].channels[n] = o[0];
            }

            0 != e[t].channels.length && this.subscribePresence(e[t]);
          }
        }
      }, {
        key: "onExpiredReconnected",
        value: function value() {
          this.resubscribe();
        }
      }, {
        key: "onReconnected",
        value: function value() {
          this.pubSub.neverConnect || this.pubSub.goEasySocket.status == d["default"].RECONNECTED || this.resubscribe();
        }
      }, {
        key: "onNewMessage",
        value: function value(e) {
          if (-1 != e.n.indexOf("_presence")) {
            var t = this.findPresenceByChannel(e.n);

            if (t) {
              var n = JSON.parse(e.c);
              n.events = n.events.map(function (e) {
                var t = e.userData ? JSON.parse(e.userData) : {};
                return {
                  time: e.time,
                  action: e.action,
                  id: e.userId,
                  data: t
                };
              }), t.onPresence(n);
            }
          }
        }
      }, {
        key: "formatOptions",
        value: function value(e) {
          var t = !r.calibrator.isEmpty(e.channel),
              n = !r.calibrator.isEmpty(e.channels);
          if (this.formatCallback(e), r.calibrator.isFunction(e.onPresence) || (e.onPresence = r.noop), !t && !n) return e.onFailed({
            code: 400,
            content: "channel is required"
          }), !1;

          if (!t || !n) {
            if (t && (r.calibrator.isNumber(e.channel) && (e.channel = e.channel.toString()), e.channels = [e.channel]), n) {
              if (!Array.isArray(e.channels) || 0 == e.channels.length) return void e.onFailed({
                code: 400,
                content: "channels must be an array"
              });
              if (e.channels.length > 500) return e.onFailed({
                code: 400,
                content: "channels over max length:500"
              }), !1;

              for (var o = 0, i = e.channels.length; o < i; o++) {
                if (r.calibrator.isNumber(e.channels[o]) && (e.channels[o] = e.channels[o].toString()), r.calibrator.isEmpty(e.channels[o])) return e.onFailed({
                  code: 400,
                  content: "Channels array contains empty channel"
                }), !1;
              }
            }

            return !0;
          }

          e.onFailed({
            code: 400,
            content: "subscribe to either channel or channels, not both"
          });
        }
      }, {
        key: "formatCallback",
        value: function value(e) {
          r.calibrator.isFunction(e.onSuccess) || (e.onSuccess = r.noop), r.calibrator.isFunction(e.onFailed) || (e.onFailed = r.noop);
        }
      }, {
        key: "subscribePresence",
        value: function value(e) {
          var t = this;

          if (this.formatOptions(e)) {
            Array.isArray(e.channels) && (e.channels = e.channels.map(function (e) {
              return e += "_presence";
            }));
            var n = new s["default"]({
              name: a.EmitType.subscribe,
              permission: u["default"].READ,
              singleTimeout: c.SocketTimeout.commonInfiniteSingle,
              totalTimeout: c.SocketTimeout.commonInfiniteTotal,
              params: {
                channels: e.channels
              },
              success: function success() {
                var n = new f["default"]({
                  channels: e.channels,
                  onSuccess: e.onSuccess,
                  onFailed: e.onFailed,
                  onPresence: e.onPresence
                });
                t.presenters.push(n), e.onSuccess({
                  code: 200,
                  content: "ok"
                });
              },
              fail: function fail(t) {
                e.onFailed({
                  code: t.resultCode,
                  content: t.content
                });
              }
            });
            this.pubSub.goEasySocket.emit(n);
          }
        }
      }, {
        key: "unsubscribePresence",
        value: function value(e) {
          var t = this;
          if (this.formatCallback(e), r.calibrator.isDef(e.channel)) {
            if (e.channel += "_presence", this.findPresenceByChannel(e.channel)) {
              var n = new s["default"]({
                name: a.EmitType.unsubscribe,
                params: {
                  channel: e.channel
                },
                permission: u["default"].READ,
                singleTimeout: c.SocketTimeout.commonRequestSingle,
                totalTimeout: c.SocketTimeout.commonRequestTotal,
                success: function success() {
                  e.onSuccess({
                    code: 200,
                    content: "ok"
                  }), t.removeChannel(e.channel);
                },
                fail: function fail(t) {
                  e.onFailed({
                    code: t.resultCode,
                    content: t.content
                  });
                }
              });
              this.pubSub.goEasySocket.emit(n);
            } else e.onFailed({
              code: 400,
              content: "channel[" + e.channel + "] is not subscribed"
            });
          } else e.onFailed({
            code: 400,
            content: "channel is required"
          });
        }
      }, {
        key: "removeChannel",
        value: function value(e) {
          for (var t = 0; t < this.presenters.length; t++) {
            for (var n = this.presenters[t].channels, o = 0; o < n.length; o++) {
              if (n[o] == e) {
                this.presenters[t].channels.splice(o, 1);
                break;
              }
            }
          }
        }
      }, {
        key: "findPresenceByChannel",
        value: function value(e) {
          for (var t = !1, n = null, o = this.presenters.length - 1; o >= 0; o--) {
            for (var i = this.presenters[o].channels, r = 0; r < i.length; r++) {
              if (i[r] == e) {
                t = !0, n = this.presenters[o];
                break;
              }
            }

            if (t) break;
          }

          return n;
        }
      }]), e;
    }();

    t["default"] = h;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = r(n(0)),
        i = r(n(1));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var s = function () {
      function e(t) {
        (0, o["default"])(this, e), this.channels = [], this.onSuccess = null, this.onFailed = null, this.onPresence = null, this.channels = t.channels, this.onSuccess = t.onSuccess, this.onFailed = t.onFailed, this.onPresence = t.onPresence;
      }

      return (0, i["default"])(e, [{
        key: "empty",
        value: function value() {}
      }]), e;
    }();

    t["default"] = s;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = c(n(94)),
        i = c(n(0)),
        r = c(n(1)),
        s = c(n(42)),
        a = n(2),
        u = n(67);

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = null,
        f = function () {
      function e(t) {
        (0, i["default"])(this, e), this.options = null, this.options = t, l = new s["default"]();
      }

      return (0, r["default"])(e, [{
        key: "initialBeforeConnect",
        value: function value(e) {
          l.initialBeforeConnect(e);
        }
      }, {
        key: "initialAfterConnect",
        value: function value() {
          l.initialAfterConnect();
        }
      }, {
        key: "initialGoEasySocket",
        value: function value(e) {
          l.initialGoEasySocket(e);
        }
      }, {
        key: "validateOptions",
        value: function value() {
          var e = this.options;
          if (!e.modules || !e.modules.includes(u.ModuleType.IM)) throw Error("Invalid options: module '" + u.ModuleType.IM + "' is not enabled");
        }
      }, {
        key: "validateMessageToData",
        value: function value(e) {
          if (!a.calibrator.isObject(e.to)) throw {
            code: 400,
            content: "TypeError: to requires an object."
          };
          if (!a.calibrator.isObject(e.to.data)) throw {
            code: 400,
            content: "TypeError: to.data requires an object."
          };
        }
      }, {
        key: "on",
        value: function value(e, t) {
          this.validateOptions(), l.on(e, t);
        }
      }, {
        key: "createTextMessage",
        value: function value(e) {
          if (this.validateOptions(), this.validateMessageToData(e), !a.calibrator.isString(e.text)) throw {
            code: 400,
            content: "TypeError: text requires string."
          };
          return l.createTextMessage(e);
        }
      }, {
        key: "createImageMessage",
        value: function value(e) {
          return this.validateOptions(), this.validateMessageToData(e), l.createImageMessage(e);
        }
      }, {
        key: "createFileMessage",
        value: function value(e) {
          return this.validateOptions(), this.validateMessageToData(e), l.createFileMessage(e);
        }
      }, {
        key: "createAudioMessage",
        value: function value(e) {
          return this.validateOptions(), this.validateMessageToData(e), l.createAudioMessage(e);
        }
      }, {
        key: "createVideoMessage",
        value: function value(e) {
          return this.validateOptions(), this.validateMessageToData(e), l.createVideoMessage(e);
        }
      }, {
        key: "createCustomMessage",
        value: function value(e) {
          if (this.validateOptions(), this.validateMessageToData(e), !a.calibrator.isObject(e.payload)) throw {
            code: 400,
            content: "TypeError: payload requires an object."
          };
          return l.createCustomMessage(e);
        }
      }, {
        key: "latestConversations",
        value: function value(e) {
          this.validateOptions(), l.latestConversations().then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "removePrivateConversation",
        value: function value(e) {
          this.validateOptions(), l.removePrivateConversation(e.userId).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess();
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "removeGroupConversation",
        value: function value(e) {
          this.validateOptions(), l.removeGroupConversation(e.groupId).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess();
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "history",
        value: function value(e) {
          this.validateOptions();
          var t = (0, o["default"])(e, {
            friendId: e.userId
          });
          l.history(t).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "upload",
        value: function value(e) {
          this.validateOptions(), l.upload(e.file, e.name, e.onProgress).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "sendMessage",
        value: function value(e) {
          this.validateOptions(), l.sendMessage(e.message).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "markGroupMessageAsRead",
        value: function value(e) {
          this.validateOptions(), l.groupMarkAsRead(e.groupId, e.timestamp).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "markPrivateMessageAsRead",
        value: function value(e) {
          this.validateOptions(), l.privateMarkAsRead(e.userId, e.timestamp).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess();
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "topPrivateConversation",
        value: function value(e) {
          this.validateOptions(), l.topPrivateConversation(e.userId, e.top).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess();
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "topGroupConversation",
        value: function value(e) {
          this.validateOptions(), l.topGroupConversation(e.groupId, e.top).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess();
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "subscribeUserPresence",
        value: function value(e) {
          this.validateOptions(), l.subscribeUserPresence(e.userIds).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "unsubscribeUserPresence",
        value: function value(e) {
          this.validateOptions(), l.unsubscribeUserPresence(e.userId).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "hereNow",
        value: function value(e) {
          this.validateOptions(), l.hereNow(e).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "subscribeGroup",
        value: function value(e) {
          this.validateOptions(), l.subscribeGroup(e.groupIds).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "unsubscribeGroup",
        value: function value(e) {
          this.validateOptions(), l.unsubscribeGroup(e.groupId).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "subscribeGroupPresence",
        value: function value(e) {
          this.validateOptions(), l.subscribeGroupPresence(e.groupIds).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "unsubscribeGroupPresence",
        value: function value(e) {
          this.validateOptions(), l.unsubscribeGroupPresence(e.groupId).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "groupHereNow",
        value: function value(e) {
          this.validateOptions(), l.groupHereNow(e.groupId).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }, {
        key: "groupOnlineCount",
        value: function value(e) {
          this.validateOptions(), l.groupOnlineCount(e.groupId).then(function (t) {
            a.calibrator.isFunction(e.onSuccess) && e.onSuccess(t);
          })["catch"](function (t) {
            a.calibrator.isFunction(e.onFailed) && e.onFailed(t);
          });
        }
      }]), e;
    }();

    t["default"] = f;
  }, function (e, t, n) {
    n(173), e.exports = n(7).Object.assign;
  }, function (e, t, n) {
    var o = n(16);
    o(o.S + o.F, "Object", {
      assign: n(174)
    });
  }, function (e, t, n) {
    "use strict";

    var o = n(18),
        i = n(31),
        r = n(64),
        s = n(38),
        a = n(40),
        u = n(81),
        c = Object.assign;
    e.exports = !c || n(30)(function () {
      var e = {},
          t = {},
          n = Symbol(),
          o = "abcdefghijklmnopqrst";
      return e[n] = 7, o.split("").forEach(function (e) {
        t[e] = e;
      }), 7 != c({}, e)[n] || Object.keys(c({}, t)).join("") != o;
    }) ? function (e, t) {
      for (var n = a(e), c = arguments.length, l = 1, f = r.f, d = s.f; c > l;) {
        for (var p, h = u(arguments[l++]), y = f ? i(h).concat(f(h)) : i(h), v = y.length, m = 0; v > m;) {
          p = y[m++], o && !d.call(h, p) || (n[p] = h[p]);
        }
      }

      return n;
    } : c;
  }, function (e, t, n) {
    n(91), n(84), n(89), n(176), n(188), n(189), e.exports = n(7).Promise;
  }, function (e, t, n) {
    "use strict";

    var o,
        i,
        r,
        s,
        a = n(37),
        u = n(13),
        c = n(35),
        l = n(95),
        f = n(16),
        d = n(23),
        p = n(44),
        h = n(177),
        y = n(178),
        v = n(96),
        m = n(97).set,
        g = n(183)(),
        b = n(68),
        _ = n(98),
        k = n(184),
        C = n(99),
        w = u.TypeError,
        E = u.process,
        S = E && E.versions,
        O = S && S.v8 || "",
        _T = u.Promise,
        F = "process" == l(E),
        M = function M() {},
        P = i = b.f,
        I = !!function () {
      try {
        var e = _T.resolve(1),
            t = (e.constructor = {})[n(14)("species")] = function (e) {
          e(M, M);
        };

        return (F || "function" == typeof PromiseRejectionEvent) && e.then(M) instanceof t && 0 !== O.indexOf("6.6") && -1 === k.indexOf("Chrome/66");
      } catch (o) {}
    }(),
        N = function N(e) {
      var t;
      return !(!d(e) || "function" != typeof (t = e.then)) && t;
    },
        x = function x(e, t) {
      if (!e._n) {
        e._n = !0;
        var n = e._c;
        g(function () {
          for (var o = e._v, i = 1 == e._s, r = 0, s = function s(t) {
            var n,
                r,
                s,
                a = i ? t.ok : t.fail,
                u = t.resolve,
                c = t.reject,
                l = t.domain;

            try {
              a ? (i || (2 == e._h && j(e), e._h = 1), !0 === a ? n = o : (l && l.enter(), n = a(o), l && (l.exit(), s = !0)), n === t.promise ? c(w("Promise-chain cycle")) : (r = N(n)) ? r.call(n, u, c) : u(n)) : c(o);
            } catch (f) {
              l && !s && l.exit(), c(f);
            }
          }; n.length > r;) {
            s(n[r++]);
          }

          e._c = [], e._n = !1, t && !e._h && R(e);
        });
      }
    },
        R = function R(e) {
      m.call(u, function () {
        var t,
            n,
            o,
            i = e._v,
            r = A(e);
        if (r && (t = _(function () {
          F ? E.emit("unhandledRejection", i, e) : (n = u.onunhandledrejection) ? n({
            promise: e,
            reason: i
          }) : (o = u.console) && o.error && o.error("Unhandled promise rejection", i);
        }), e._h = F || A(e) ? 2 : 1), e._a = undefined, r && t.e) throw t.v;
      });
    },
        A = function A(e) {
      return 1 !== e._h && 0 === (e._a || e._c).length;
    },
        j = function j(e) {
      m.call(u, function () {
        var t;
        F ? E.emit("rejectionHandled", e) : (t = u.onrejectionhandled) && t({
          promise: e,
          reason: e._v
        });
      });
    },
        D = function D(e) {
      var t = this;
      t._d || (t._d = !0, (t = t._w || t)._v = e, t._s = 2, t._a || (t._a = t._c.slice()), x(t, !0));
    },
        U = function U(e) {
      var t,
          n = this;

      if (!n._d) {
        n._d = !0, n = n._w || n;

        try {
          if (n === e) throw w("Promise can't be resolved itself");
          (t = N(e)) ? g(function () {
            var o = {
              _w: n,
              _d: !1
            };

            try {
              t.call(e, c(U, o, 1), c(D, o, 1));
            } catch (i) {
              D.call(o, i);
            }
          }) : (n._v = e, n._s = 1, x(n, !1));
        } catch (o) {
          D.call({
            _w: n,
            _d: !1
          }, o);
        }
      }
    };

    I || (_T = function T(e) {
      h(this, _T, "Promise", "_h"), p(e), o.call(this);

      try {
        e(c(U, this, 1), c(D, this, 1));
      } catch (t) {
        D.call(this, t);
      }
    }, (o = function o(e) {
      this._c = [], this._a = undefined, this._s = 0, this._d = !1, this._v = undefined, this._h = 0, this._n = !1;
    }).prototype = n(185)(_T.prototype, {
      then: function then(e, t) {
        var n = P(v(this, _T));
        return n.ok = "function" != typeof e || e, n.fail = "function" == typeof t && t, n.domain = F ? E.domain : undefined, this._c.push(n), this._a && this._a.push(n), this._s && x(this, !1), n.promise;
      },
      "catch": function _catch(e) {
        return this.then(undefined, e);
      }
    }), r = function r() {
      var e = new o();
      this.promise = e, this.resolve = c(U, e, 1), this.reject = c(D, e, 1);
    }, b.f = P = function P(e) {
      return e === _T || e === s ? new r(e) : i(e);
    }), f(f.G + f.W + f.F * !I, {
      Promise: _T
    }), n(47)(_T, "Promise"), n(186)("Promise"), s = n(7).Promise, f(f.S + f.F * !I, "Promise", {
      reject: function reject(e) {
        var t = P(this);
        return (0, t.reject)(e), t.promise;
      }
    }), f(f.S + f.F * (a || !I), "Promise", {
      resolve: function resolve(e) {
        return C(a && this === s ? _T : this, e);
      }
    }), f(f.S + f.F * !(I && n(187)(function (e) {
      _T.all(e)["catch"](M);
    })), "Promise", {
      all: function all(e) {
        var t = this,
            n = P(t),
            o = n.resolve,
            i = n.reject,
            r = _(function () {
          var n = [],
              r = 0,
              s = 1;
          y(e, !1, function (e) {
            var a = r++,
                u = !1;
            n.push(undefined), s++, t.resolve(e).then(function (e) {
              u || (u = !0, n[a] = e, --s || o(n));
            }, i);
          }), --s || o(n);
        });

        return r.e && i(r.v), n.promise;
      },
      race: function race(e) {
        var t = this,
            n = P(t),
            o = n.reject,
            i = _(function () {
          y(e, !1, function (e) {
            t.resolve(e).then(n.resolve, o);
          });
        });

        return i.e && o(i.v), n.promise;
      }
    });
  }, function (e, t) {
    e.exports = function (e, t, n, o) {
      if (!(e instanceof t) || o !== undefined && o in e) throw TypeError(n + ": incorrect invocation!");
      return e;
    };
  }, function (e, t, n) {
    var o = n(35),
        i = n(179),
        r = n(180),
        s = n(19),
        a = n(82),
        u = n(181),
        c = {},
        l = {};
    (t = e.exports = function (e, t, n, f, d) {
      var p,
          h,
          y,
          v,
          m = d ? function () {
        return e;
      } : u(e),
          g = o(n, f, t ? 2 : 1),
          b = 0;
      if ("function" != typeof m) throw TypeError(e + " is not iterable!");

      if (r(m)) {
        for (p = a(e.length); p > b; b++) {
          if ((v = t ? g(s(h = e[b])[0], h[1]) : g(e[b])) === c || v === l) return v;
        }
      } else for (y = m.call(e); !(h = y.next()).done;) {
        if ((v = i(y, g, h.value, t)) === c || v === l) return v;
      }
    }).BREAK = c, t.RETURN = l;
  }, function (e, t, n) {
    var o = n(19);

    e.exports = function (e, t, n, i) {
      try {
        return i ? t(o(n)[0], n[1]) : t(n);
      } catch (s) {
        var r = e["return"];
        throw r !== undefined && o(r.call(e)), s;
      }
    };
  }, function (e, t, n) {
    var o = n(39),
        i = n(14)("iterator"),
        r = Array.prototype;

    e.exports = function (e) {
      return e !== undefined && (o.Array === e || r[i] === e);
    };
  }, function (e, t, n) {
    var o = n(95),
        i = n(14)("iterator"),
        r = n(39);

    e.exports = n(7).getIteratorMethod = function (e) {
      if (e != undefined) return e[i] || e["@@iterator"] || r[o(e)];
    };
  }, function (e, t) {
    e.exports = function (e, t, n) {
      var o = n === undefined;

      switch (t.length) {
        case 0:
          return o ? e() : e.call(n);

        case 1:
          return o ? e(t[0]) : e.call(n, t[0]);

        case 2:
          return o ? e(t[0], t[1]) : e.call(n, t[0], t[1]);

        case 3:
          return o ? e(t[0], t[1], t[2]) : e.call(n, t[0], t[1], t[2]);

        case 4:
          return o ? e(t[0], t[1], t[2], t[3]) : e.call(n, t[0], t[1], t[2], t[3]);
      }

      return e.apply(n, t);
    };
  }, function (e, t, n) {
    var o = n(13),
        i = n(97).set,
        r = o.MutationObserver || o.WebKitMutationObserver,
        s = o.process,
        a = o.Promise,
        u = "process" == n(36)(s);

    e.exports = function () {
      var e,
          t,
          n,
          c = function c() {
        var o, i;

        for (u && (o = s.domain) && o.exit(); e;) {
          i = e.fn, e = e.next;

          try {
            i();
          } catch (r) {
            throw e ? n() : t = undefined, r;
          }
        }

        t = undefined, o && o.enter();
      };

      if (u) n = function n() {
        s.nextTick(c);
      };else if (!r || o.navigator && o.navigator.standalone) {
        if (a && a.resolve) {
          var l = a.resolve(undefined);

          n = function n() {
            l.then(c);
          };
        } else n = function n() {
          i.call(o, c);
        };
      } else {
        var f = !0,
            d = document.createTextNode("");
        new r(c).observe(d, {
          characterData: !0
        }), n = function n() {
          d.data = f = !f;
        };
      }
      return function (o) {
        var i = {
          fn: o,
          next: undefined
        };
        t && (t.next = i), e || (e = i, n()), t = i;
      };
    };
  }, function (e, t, n) {
    var o = n(13).navigator;
    e.exports = o && o.userAgent || "";
  }, function (e, t, n) {
    var o = n(26);

    e.exports = function (e, t, n) {
      for (var i in t) {
        n && e[i] ? e[i] = t[i] : o(e, i, t[i]);
      }

      return e;
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(13),
        i = n(7),
        r = n(22),
        s = n(18),
        a = n(14)("species");

    e.exports = function (e) {
      var t = "function" == typeof i[e] ? i[e] : o[e];
      s && t && !t[a] && r.f(t, a, {
        configurable: !0,
        get: function get() {
          return this;
        }
      });
    };
  }, function (e, t, n) {
    var o = n(14)("iterator"),
        i = !1;

    try {
      var r = [7][o]();
      r["return"] = function () {
        i = !0;
      }, Array.from(r, function () {
        throw 2;
      });
    } catch (s) {}

    e.exports = function (e, t) {
      if (!t && !i) return !1;
      var n = !1;

      try {
        var r = [7],
            a = r[o]();
        a.next = function () {
          return {
            done: n = !0
          };
        }, r[o] = function () {
          return a;
        }, e(r);
      } catch (s) {}

      return n;
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(16),
        i = n(7),
        r = n(13),
        s = n(96),
        a = n(99);
    o(o.P + o.R, "Promise", {
      "finally": function _finally(e) {
        var t = s(this, i.Promise || r.Promise),
            n = "function" == typeof e;
        return this.then(n ? function (n) {
          return a(t, e()).then(function () {
            return n;
          });
        } : e, n ? function (n) {
          return a(t, e()).then(function () {
            throw n;
          });
        } : e);
      }
    });
  }, function (e, t, n) {
    "use strict";

    var o = n(16),
        i = n(68),
        r = n(98);
    o(o.S, "Promise", {
      "try": function _try(e) {
        var t = i.f(this),
            n = r(e);
        return (n.e ? t.reject : t.resolve)(n.v), t.promise;
      }
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.eventCenter = undefined;
    var o = u(n(21)),
        i = u(n(0)),
        r = u(n(1)),
        s = n(100),
        a = n(2);

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var c = new (function () {
      function e() {
        (0, i["default"])(this, e), this.subs = null, this.subs = (0, o["default"])(null);
      }

      return (0, r["default"])(e, [{
        key: "on",
        value: function value(e, t) {
          if (!a.calibrator.isString(e)) throw Error("eventType require a string.");
          if (!a.calibrator.isDef(s.ImEventType[e])) throw Error("event not found.");
          if (!a.calibrator.isFunction(t)) throw Error("event require a callback.");
          this.subs[e] = t;
        }
      }, {
        key: "notify",
        value: function value(e, t) {
          var n = this.subs[e];
          n && n(t);
        }
      }]), e;
    }())();
    t.eventCenter = c;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.Conversations = undefined;
    var o = g(n(6)),
        i = g(n(94)),
        r = g(n(0)),
        s = g(n(1)),
        a = n(101),
        u = g(n(42)),
        c = n(29),
        l = n(69),
        f = g(n(10)),
        d = g(n(8)),
        p = n(32),
        h = n(11),
        y = n(2),
        v = g(n(48)),
        m = g(n(49));

    function g(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    t.Conversations = function () {
      function e(t) {
        (0, r["default"])(this, e), this.im = null, this.list = [], this["synchronized"] = !1, this.im = t, t._iMReceiver.addIMMessageObserver(this.updateByInMessage.bind(this));
      }

      return (0, s["default"])(e, [{
        key: "onUpdated",
        value: function value() {
          var e = this;
          this.latestConversations().then(function () {
            e.im._event.notify(c.ImEventType.CONVERSATIONS_UPDATED, {
              unreadTotal: e.getUnreadTotal(e.list),
              conversations: e.list.slice(0)
            });
          });
        }
      }, {
        key: "latestConversations",
        value: function value() {
          return this["synchronized"] ? this.loadLocalConversations() : this.loadServerConversations();
        }
      }, {
        key: "updateByInMessage",
        value: function value(e) {
          var t = this,
              n = null;
          n = e.t == l.ConversationType.GROUP ? e.r : u["default"].userId == e.r ? e.s : e.r;
          var o = this.list.findIndex(function (t) {
            return e.t == l.ConversationType.GROUP && n == t.groupId || e.t == l.ConversationType.PRIVATE && n == t.userId;
          }),
              i = void 0;

          function r(e) {
            e.type === l.ConversationType.PRIVATE && (u["default"].userId === e.lastMessage.senderId ? e.lastMessage.senderData = u["default"].userData : e.lastMessage.senderData = e.data);
          }

          o > -1 ? (i = this.list[o], this.list.splice(o, 1), i.lc < e.ts && (i.lastMessage = v["default"].assemble(e), i.lm = e.ts), u["default"].userId != e.senderId && (i.unread += 1), r(i), this.insertOne(i), this.onUpdated()) : (i = a.Conversion.buildByInMessage(e), u["default"].userId != e.senderId && (i.unread += 1), this.insertOne(i), this.im._dataCache.loadData(n, e.t).then(function (e) {
            i.data = e, r(i), t.onUpdated();
          })["catch"](function (t) {
            e.t;
          }));
        }
      }, {
        key: "updateByOutMessage",
        value: function value(e, t, n, o) {
          var r = {};
          (0, i["default"])(r, e), delete r.file;
          var s = this.list.findIndex(function (e) {
            return e.type == l.ConversationType.GROUP && n == e.groupId || e.type == l.ConversationType.PRIVATE && n == e.userId;
          }),
              c = void 0;
          s > -1 ? (c = this.list[s], this.list.splice(s, 1), c.unread = 0, c.lc = c.lm, c.lastMessage = r, e.status === m["default"].success && (c.lc = e.timestamp, c.lm = e.timestamp)) : c = a.Conversion.buildByOutMessage(r, t, n, o), c.data = o;
          var f = this.im._dataCache;
          t === l.ConversationType.GROUP ? f.putGroupData(c.groupId, o) : (f.putUserData(c.userId, o), c.lastMessage.senderData = u["default"].userData), this.insertOne(c), this.onUpdated();
        }
      }, {
        key: "imLastConversations",
        value: function value(e, t) {
          var n = new f["default"]({
            name: h.EmitType.imLastConversations,
            params: {},
            permission: d["default"].READ,
            singleTimeout: p.SocketTimeout.commonQuerySingle,
            totalTimeout: p.SocketTimeout.commonQueryTotal,
            fail: t,
            success: e
          });

          this.im._goEasySocket.emit(n);
        }
      }, {
        key: "loadServerConversations",
        value: function value() {
          var e = this,
              t = this.im;
          return new o["default"](function (n, o) {
            e.imLastConversations(function (i) {
              if (200 == i.code) {
                for (var r = i.content, s = function s(n, o) {
                  var i = r[n],
                      s = e.list.find(function (e) {
                    return i.t == l.ConversationType.GROUP && i.g == e.groupId || i.t == l.ConversationType.PRIVATE && i.uid == e.userId;
                  });
                  y.calibrator.isDef(s) ? s.top = i.top : (s = a.Conversion.buildByConversation(t._dataCache, i), e.insertOne(s));
                }, u = 0, c = r.length; u < c; u++) {
                  s(u);
                }

                e["synchronized"] = !0, n({
                  code: 200,
                  content: {
                    unreadTotal: e.getUnreadTotal(e.list),
                    conversations: e.list.slice(0)
                  }
                });
              } else o(i);
            }, function (e) {
              o({
                code: e.resultCode,
                content: e.content
              });
            });
          });
        }
      }, {
        key: "loadLocalConversations",
        value: function value() {
          var e = this,
              t = [];
          return this.list.map(function (n) {
            if (!n.data) {
              var o = "private" == n.t ? n.userId : n.groupId,
                  i = e.im._dataCache.loadData(o, n.t);

              i.then(function (e) {
                n.data = e;
              })["catch"](function (e) {
                n.type;
              }), t.push(i);
            }
          }), 0 != t.length ? new o["default"](function (n, i) {
            o["default"].all(t).then(function () {
              n({
                code: 200,
                content: {
                  unreadTotal: e.getUnreadTotal(e.list),
                  conversations: e.list.slice(0)
                }
              });
            })["catch"](function (e) {
              i({
                code: 408,
                content: e.message
              });
            });
          }) : o["default"].resolve({
            code: 200,
            content: {
              unreadTotal: this.getUnreadTotal(this.list),
              conversations: this.list
            }
          });
        }
      }, {
        key: "privateMarkAsRead",
        value: function value(e) {
          var t = this.list.find(function (t) {
            return t.userId == e;
          }),
              n = {
            friendId: e
          };
          return this.markAsRead(n, t);
        }
      }, {
        key: "groupMarkAsRead",
        value: function value(e) {
          var t = this.list.find(function (t) {
            return t.groupId === e;
          }),
              n = {
            groupId: e
          };
          return this.markAsRead(n, t);
        }
      }, {
        key: "markAsRead",
        value: function value(e, t) {
          var n = this;
          return !t || t.unread <= 0 ? o["default"].resolve({
            code: 200,
            content: "OK"
          }) : (e.lastTimestamp = t.lm, e.lastConsumedTimestamp = t.lc, new o["default"](function (o, i) {
            var r = t.type == l.ConversationType.PRIVATE ? h.EmitType.markPrivateMessageAsRead : h.EmitType.markGroupMessageAsRead;
            n.requestEmit(r, e, function (e) {
              200 == e.code ? (n.resetConversation(t, t.lm, e.content.amount), o({
                code: 200,
                content: "OK"
              })) : i(e);
            }, function (e) {
              i(e || {
                code: e.code || 408,
                content: e.content || "Failed to query message"
              });
            });
          }));
        }
      }, {
        key: "resetConversation",
        value: function value(e, t, n) {
          t <= e.lc || (e.unread -= n, e.lc = t, this.onUpdated());
        }
      }, {
        key: "getUnreadTotal",
        value: function value(e) {
          for (var t = 0, n = 0, o = e.length; n < o; n++) {
            t += e[n].unread;
          }

          return t;
        }
      }, {
        key: "insertOne",
        value: function value(e) {
          var t = this.getPosIndex(e);
          this.list.splice(t + 1, 0, e);
        }
      }, {
        key: "getPosIndex",
        value: function value(e) {
          if (0 == this.list.length) return -1;

          for (var t, n, o = 0, i = this.list.length; i - o > 1;) {
            t = Math.floor((o + i) / 2), n = this.list[t];
            var r = this.compares(e, n);
            if (0 == r) return t;
            r > 0 ? o = t : i = t;
          }

          return 0 == o && this.compares(this.list[0], e) > 0 ? -1 : o;
        }
      }, {
        key: "compares",
        value: function value(e, t) {
          var n = void 0;
          return (n = e.top == t.top ? t.lastMessage.timestamp - e.lastMessage.timestamp : e.top ? -1 : 1) > 0 ? 1 : 0 === n ? 0 : -1;
        }
      }, {
        key: "removeConversation",
        value: function value(e, t) {
          var n = this,
              i = t == l.ConversationType.PRIVATE ? "userId" : "groupId";
          return y.calibrator.isStringOrNumber(e) ? (y.calibrator.isNumber(e) && (e = e.toString()), -1 == this.findConversationIndex(t, e) ? o["default"].reject({
            code: 400,
            content: "Failed to remove conversation, " + i + " does not exists."
          }) : new o["default"](function (o, i) {
            var r = {
              targetId: e,
              type: t
            };
            n.requestEmit(h.EmitType.removeConversation, r, function (r) {
              var s = n.findConversationIndex(t, e);
              s > -1 && n.list.splice(s, 1), n.onUpdated(), 200 == r.code ? o({}) : i({
                code: r.code || 408,
                content: r.content || "Failed to remove conversation"
              });
            }, function (e) {
              i({
                code: e.code || 408,
                content: e.content || "Failed to remove conversation"
              });
            });
          })) : o["default"].reject({
            code: 400,
            content: "Failed to remove conversation, " + i + " must be  a string or integer."
          });
        }
      }, {
        key: "topConversation",
        value: function value(e, t, n) {
          var i = this,
              r = n == l.ConversationType.PRIVATE ? "userId" : "groupId";
          if (!y.calibrator.isStringOrNumber(e)) return o["default"].reject({
            code: 400,
            content: "Failed to top conversation, " + r + " must be a string or integer."
          });
          y.calibrator.isNumber(e) && (e = e.toString());
          var s = this.findConversationIndex(n, e);
          return -1 == s || this.list[s].top == t ? o["default"].reject({
            code: 400,
            content: "Failed to top conversation, " + r + " does not exists."
          }) : new o["default"](function (o, r) {
            var s = {
              targetId: e,
              top: t,
              type: n
            };
            i.requestEmit(h.EmitType.topConversation, s, function () {
              var r = i.findConversationIndex(n, e),
                  s = i.list[r];
              s.top = t, i.list.splice(r, 1), i.insertOne(s), i.onUpdated(), o({});
            }, function (e) {
              r({
                code: e.code || 408,
                content: e.content || "Failed to top Conversation"
              });
            });
          });
        }
      }, {
        key: "requestEmit",
        value: function value(e, t, n, o) {
          var i = new f["default"]({
            name: e,
            params: t,
            permission: d["default"].WRITE,
            singleTimeout: p.SocketTimeout.commonRequestSingle,
            totalTimeout: p.SocketTimeout.commonRequestTotal,
            success: n,
            fail: o
          });

          this.im._goEasySocket.emit(i);
        }
      }, {
        key: "findConversationIndex",
        value: function value(e, t) {
          return this.list.findIndex(function (n) {
            return e == l.ConversationType.PRIVATE ? n.type == e && n.userId == t : n.type == e && n.groupId == t;
          });
        }
      }]), e;
    }();
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.messageCreator = undefined;

    var o = _(n(0)),
        i = _(n(1)),
        r = _(n(50)),
        s = _(n(197)),
        a = _(n(198)),
        u = _(n(199)),
        c = _(n(51)),
        l = _(n(200)),
        f = _(n(201)),
        d = _(n(202)),
        p = _(n(203)),
        h = _(n(204)),
        y = _(n(205)),
        v = _(n(102)),
        m = _(n(103)),
        g = _(n(52)),
        b = _(n(206));

    function _(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var k = new (function () {
      function e() {
        (0, o["default"])(this, e), this.messageTypes = {
          wx: {
            image: s["default"],
            file: r["default"],
            audio: a["default"],
            video: u["default"],
            text: m["default"]
          },
          uniApp: {
            image: d["default"],
            file: c["default"],
            audio: l["default"],
            video: f["default"],
            text: m["default"]
          },
          html: {
            image: p["default"],
            file: g["default"],
            audio: h["default"],
            video: y["default"],
            text: m["default"]
          }
        };
      }

      return (0, i["default"])(e, [{
        key: "create",
        value: function value(e, t) {
          var n = v["default"].resolve(),
              o = this.messageTypes[n][e];
          return o ? new o(t) : new b["default"](t);
        }
      }]), e;
    }())();
    t.messageCreator = k;
  }, function (e, t, n) {
    e.exports = {
      "default": n(194),
      __esModule: !0
    };
  }, function (e, t, n) {
    n(195);
    var o = n(7).Object;

    e.exports = function (e, t) {
      return o.getOwnPropertyDescriptor(e, t);
    };
  }, function (e, t, n) {
    var o = n(24),
        i = n(65).f;
    n(66)("getOwnPropertyDescriptor", function () {
      return function (e, t) {
        return i(o(e), t);
      };
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.str = undefined;
    var o = s(n(0)),
        i = s(n(1)),
        r = n(83);

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = new (function () {
      function e() {
        (0, o["default"])(this, e);
      }

      return (0, i["default"])(e, [{
        key: "fileExtension",
        value: function value(e, t) {
          if (r.calibrator.isString(e)) try {
            var n = e.split(t);
            return n[n.length - 1];
          } catch (o) {
            throw Error(o);
          }
        }
      }]), e;
    }())();
    t.str = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(3)),
        i = d(n(0)),
        r = d(n(1)),
        s = d(n(4)),
        a = d(n(12)),
        u = d(n(5)),
        c = d(n(50)),
        l = d(n(9)),
        f = n(17);

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          if ((0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e), !f.calibrator.isDef(e.file.tempFiles) || 0 == e.file.tempFiles[0].length) throw Error("tempFiles is empty.");
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = l["default"].image;
        }
      }, {
        key: "setFile",
        value: function value(e) {
          var t = "chooseMedia:ok" == e.errMsg ? e.tempFiles[0].tempFilePath : e.tempFiles[0].path;
          e.tempFiles[0].path = t, this.file = e;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
          var n = this,
              i = e.file.tempFiles[0],
              r = "chooseMedia:ok" == e.file.errMsg ? i.tempFilePath : i.path;
          this.payload.url = r, this.payload.size = i.size, this.payload.width = "", this.payload.height = "", this.payload.contentType = "";
          var s = f.calibrator.isEmpty(i.name) || i.name == undefined ? r : i.name;
          this.payload.name = "wx-image." + f.str.fileExtension(s, "."), this.payload.contentType = "image/" + f.str.fileExtension(s, "."), wx.getImageInfo({
            src: r,
            success: function success(e) {
              n.payload.width = e.width, n.payload.height = e.height;
            }
          });
        }
      }]), t;
    }(c["default"]);

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(3)),
        i = d(n(0)),
        r = d(n(1)),
        s = d(n(4)),
        a = d(n(12)),
        u = d(n(5)),
        c = d(n(50)),
        l = d(n(9)),
        f = n(17);

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e);
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = l["default"].audio;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
          var n = e.file.tempFilePath;
          this.payload.url = n, this.payload.duration = e.file.duration / 1e3, this.payload.size = e.file.fileSize;
          var i = f.calibrator.isEmpty(e.file.name) || e.file.name == undefined ? n : e.file.name;
          this.payload.contentType = "audio/" + f.str.fileExtension(i, "."), this.payload.name = "wx-audio." + f.str.fileExtension(i, ".");
        }
      }]), t;
    }(c["default"]);

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = h(n(21)),
        i = h(n(3)),
        r = h(n(0)),
        s = h(n(1)),
        a = h(n(4)),
        u = h(n(12)),
        c = h(n(5)),
        l = h(n(50)),
        f = h(n(9)),
        d = n(2),
        p = n(17);

    function h(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var y = function (e) {
      function t(e) {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this, e));
      }

      return (0, c["default"])(t, e), (0, s["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, u["default"])(t.prototype.__proto__ || (0, i["default"])(t.prototype), "validate", this).call(this, e);
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = f["default"].video;
        }
      }, {
        key: "setFile",
        value: function value(e) {
          this.file = "chooseMedia:ok" == e.errMsg ? e.tempFiles[0] : e;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          this.payload = (0, o["default"])(null);
          var t = (0, o["default"])(null),
              n = (0, o["default"])(null),
              i = "chooseMedia:ok" == e.file.errMsg ? e.file.tempFiles[0] : e.file,
              r = i.duration,
              s = i.height,
              a = i.size,
              u = i.tempFilePath,
              c = i.thumbTempFilePath,
              l = i.width,
              f = i.name,
              h = f === undefined ? "" : f,
              y = d.calibrator.isEmpty(h) ? u : h;
          t.contentType = "video/" + p.str.fileExtension(y, "."), t.name = "wx-video." + p.str.fileExtension(y, "."), t.url = u, t.width = n.width = l, t.height = n.height = s, t.size = a, t.duration = r, n.url = c, n.contentType = "image/jpg", n.name = "wx-thumbnail.jpg", this.payload.video = t, this.payload.thumbnail = n;
        }
      }]), t;
    }(l["default"]);

    t["default"] = y;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(3)),
        i = d(n(0)),
        r = d(n(1)),
        s = d(n(4)),
        a = d(n(12)),
        u = d(n(5)),
        c = d(n(51)),
        l = d(n(9)),
        f = n(17);

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e);
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = l["default"].audio;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          var n = this;
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
          var i = this,
              r = e.file.tempFilePath;
          this.payload.url = r;
          var s = f.calibrator.isEmpty(e.file.name) || e.file.name == undefined ? r : e.file.name;
          if (this.payload.contentType = "audio/" + f.str.fileExtension(s, "."), this.payload.name = "uni-audio." + f.str.fileExtension(s, "."), f.calibrator.isDef(e.file.duration)) this.payload.duration = e.file.duration / 1e3;else {
            this.payload.duration = 0;
            var u = uni.createInnerAudioContext();
            u.src = r, u.onCanplay(function (e) {
              i.payload.duration = u.duration, u.destroy();
            });
          }
          uni.getFileInfo({
            filePath: r,
            success: function success(e) {
              n.payload.size = e.size;
            }
          });
        }
      }]), t;
    }(c["default"]);

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = p(n(21)),
        i = p(n(3)),
        r = p(n(0)),
        s = p(n(1)),
        a = p(n(4)),
        u = p(n(12)),
        c = p(n(5)),
        l = p(n(51)),
        f = p(n(9)),
        d = n(17);

    function p(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var h = function (e) {
      function t(e) {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this, e));
      }

      return (0, c["default"])(t, e), (0, s["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, u["default"])(t.prototype.__proto__ || (0, i["default"])(t.prototype), "validate", this).call(this, e);
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = f["default"].video;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          var t = (0, o["default"])(null),
              n = (0, o["default"])(null);
          this.payload = (0, o["default"])(null);
          var i = e.file,
              r = i.duration,
              s = i.height,
              a = i.size,
              u = i.tempFilePath,
              c = i.width,
              l = i.name,
              f = l === undefined ? "" : l,
              p = d.calibrator.isEmpty(f) ? u : f;
          t.contentType = "video/" + d.str.fileExtension(p, "."), t.name = "uni-video." + d.str.fileExtension(p, "."), t.size = a, t.duration = r, t.url = n.url = u, t.width = n.width = c, t.height = n.height = s, n.contentType = "image/jpg", n.name = "wx-thumbnail.jpg", this.payload.video = t, this.payload.thumbnail = n;
        }
      }]), t;
    }(l["default"]);

    t["default"] = h;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(3)),
        i = d(n(0)),
        r = d(n(1)),
        s = d(n(4)),
        a = d(n(12)),
        u = d(n(5)),
        c = d(n(51)),
        l = n(17),
        f = d(n(9));

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          if ((0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e), !l.calibrator.isDef(e.file.tempFiles) || 0 == e.file.tempFiles[0].length) throw Error("tempFiles is empty.");
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = f["default"].image;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
          var n = this,
              i = e.file.tempFiles[0];
          this.payload.url = i.path, this.payload.size = i.size, this.payload.width = "", this.payload.height = "";
          var r = l.calibrator.isEmpty(i.name) || i.name == undefined ? i.path : i.name;
          this.payload.contentType = "image/" + l.str.fileExtension(r, "."), this.payload.name = "uni-image." + l.str.fileExtension(r, "."), uni.getImageInfo({
            src: i.path,
            success: function success(e) {
              n.payload.width = e.width, n.payload.height = e.height;
            }
          });
        }
      }]), t;
    }(c["default"]);

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(3)),
        i = f(n(0)),
        r = f(n(1)),
        s = f(n(4)),
        a = f(n(12)),
        u = f(n(5)),
        c = f(n(52)),
        l = f(n(9));

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e);
          var n = ["gif", "jpg", "png", "jpeg"];
          if (!n.find(function (t) {
            return t == e.file.type.split("/")[1].toLowerCase();
          })) throw Error("Only " + n.join(",") + " is supported image.");
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = l["default"].image;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          var n = this;
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
          var i = window.URL || window.webkitURL,
              r = new Image();
          r.src = i.createObjectURL(e.file), r.onload = function () {
            n.payload.width = r.width, n.payload.height = r.height, i.revokeObjectURL(r.src);
          };
        }
      }]), t;
    }(c["default"]);

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(3)),
        i = f(n(0)),
        r = f(n(1)),
        s = f(n(4)),
        a = f(n(12)),
        u = f(n(5)),
        c = f(n(52)),
        l = f(n(9));

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "validate", this).call(this, e);
          var n = ["mp3", "ogg", "wav", "wma", "ape", "acc", "mpeg"];
          if (!n.find(function (t) {
            return t == e.file.type.split("/")[1].toLowerCase();
          })) throw Error("Only " + n.join(",") + " is supported audio.");
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = l["default"].audio;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "setPayload", this).call(this, e);
          var n = this,
              i = window.URL || window.webkitURL,
              r = document.createElement("audio");
          r.src = i.createObjectURL(e.file), r.onloadedmetadata = function () {
            n.payload.duration = r.duration, i.revokeObjectURL(r.src);
          };
        }
      }]), t;
    }(c["default"]);

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(21)),
        i = d(n(3)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(4)),
        u = d(n(12)),
        c = d(n(5)),
        l = d(n(52)),
        f = d(n(9));

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function (e) {
      function t(e) {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this, e));
      }

      return (0, c["default"])(t, e), (0, s["default"])(t, [{
        key: "validate",
        value: function value(e) {
          (0, u["default"])(t.prototype.__proto__ || (0, i["default"])(t.prototype), "validate", this).call(this, e);
          var n = ["avi", "mov", "rmvb", "rm", "flv", "mp4", "3gp", "quicktime"];
          if (!n.find(function (t) {
            return t == e.file.type.split("/")[1].toLowerCase();
          })) throw Error("Only " + n.join(",") + " is supported video.");
        }
      }, {
        key: "setType",
        value: function value(e) {
          this.type = f["default"].video;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          this.payload = (0, o["default"])(null);
          var t = (0, o["default"])(null),
              n = (0, o["default"])(null);
          t.contentType = e.file.type, t.size = e.file.size, t.duration = 0, t.url = n.url = "", t.name = e.file.name, t.width = n.width = 0, t.height = n.height = 0, n.contentType = "image/jpg", this.payload.video = t, this.payload.thumbnail = n;
          var i = this,
              r = window.URL || window.webkitURL,
              s = document.createElement("video"),
              a = r.createObjectURL(e.file);
          s.src = a, s.onloadedmetadata = function () {
            i.payload.video.duration = s.duration, i.payload.video.width = i.payload.thumbnail.width = s.videoWidth, i.payload.video.height = i.payload.thumbnail.height = s.videoHeight, i.payload.video.url = a, i.payload.thumbnail.url = function (e) {
              var t = document.createElement("canvas");
              return t.width = e.videoWidth, t.height = e.videoHeight, t.getContext("2d").drawImage(e, 0, 0, t.width, t.height), t.toDataURL("image/png");
            }(s), r.revokeObjectURL(s.src);
          };
        }
      }]), t;
    }(l["default"]);

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = l(n(3)),
        i = l(n(0)),
        r = l(n(1)),
        s = l(n(4)),
        a = l(n(5)),
        u = l(n(43)),
        c = n(2);

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = function (e) {
      function t(e) {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this, e));
      }

      return (0, a["default"])(t, e), (0, r["default"])(t, [{
        key: "setType",
        value: function value(e) {
          if (!c.calibrator.isStringOrNumber(e.type)) throw Error("type require a string or number.");
          if (c.calibrator.isEmpty(e.type)) throw Error("type is empty.");
          this.type = e.type;
        }
      }, {
        key: "setPayload",
        value: function value(e) {
          if (c.calibrator.isEmpty(e.payload)) throw Error("payload is empty.");
          if (!c.calibrator.isPlainObject(e.payload) && !c.calibrator.isStringOrNumber(e.payload)) throw Error("payload require object | string | number.");
          this.payload = e.payload;
        }
      }]), t;
    }(u["default"]);

    t["default"] = f;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = v(n(33)),
        i = v(n(6)),
        r = v(n(0)),
        s = v(n(1)),
        a = v(n(209)),
        u = v(n(10)),
        c = n(32),
        l = v(n(8)),
        f = n(11),
        d = v(n(49)),
        p = n(25),
        h = v(n(43)),
        y = n(2);

    function v(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var m = function () {
      function e(t) {
        (0, r["default"])(this, e), this.im = null, this.bulletMessageBuilder = null, this.im = t, this.bulletMessageBuilder = new a["default"](t);
      }

      return (0, s["default"])(e, [{
        key: "send",
        value: function value(e, t, n) {
          var o = this;
          return new i["default"](function (i, r) {
            t.status === d["default"]["new"] ? (t.status = d["default"].sending, o.bulletMessageBuilder.build(e, t, n).then(function (e) {
              var n = new u["default"]({
                name: f.EmitType.publishIM,
                params: e,
                permission: l["default"].WRITE,
                singleTimeout: c.SocketTimeout.commonRequestSingle,
                totalTimeout: c.SocketTimeout.commonRequestTotal,
                fail: function fail(e) {
                  t.status = d["default"].fail, r({
                    code: e.resultCode || 408,
                    content: e.content || "Failed to send private message."
                  });
                },
                success: function success(e) {
                  t.status = d["default"].success, 200 == e.resultCode ? i({
                    code: 200,
                    content: e.content
                  }) : r(e);
                }
              });

              o.im._goEasySocket.emit(n);
            })["catch"](function (e) {
              r({
                code: e.code || 400,
                content: e.content || e
              });
            })) : r({
              code: 400,
              content: "Please create a new message, a message can only be sent once"
            });
          });
        }
      }, {
        key: "sendMessage",
        value: function value(e) {
          var t = this,
              n = this.im;
          return new i["default"](function (i, r) {
            if (e instanceof h["default"]) {
              if (e.status === d["default"]["new"]) {
                e.status = d["default"].sending;
                var s = e.to;
                if (delete e.to, s) {
                  if (!s.type || s.type != p.ConversationType.GROUP && s.type != p.ConversationType.PRIVATE) r({
                    code: 400,
                    content: "message require property to.type"
                  });else if (s.id) {
                    if (s.data && y.calibrator.isFunction(s.data)) r({
                      code: 400,
                      content: "to.data can not be function"
                    });else {
                      var a = e.notification;
                      if (a) if (y.calibrator.isObject(a)) {
                        if (y.calibrator.isEmpty(a.title)) return void r({
                          code: 400,
                          content: "notification title is required"
                        });
                        if (!y.calibrator.isString(a.title)) return void r({
                          code: 400,
                          content: "notification title must be string"
                        });
                        if (y.calibrator.isEmpty(e.notification.body)) return void r({
                          code: 400,
                          content: "notification body is required"
                        });
                        if (!y.calibrator.isString(e.notification.body)) return void r({
                          code: 400,
                          content: "notification body must be string"
                        });
                      } else if (y.calibrator.isPrimitive(e.notification)) return void r({
                        code: 400,
                        content: "notification must be an json object"
                      });
                      s.data || (s.data = {}), n._conversations.updateByOutMessage(e, s.type, s.id, s.data), t.bulletMessageBuilder.build(s.id, e, s.type).then(function (t) {
                        t.d = (0, o["default"])(s.data);
                        var a = new u["default"]({
                          name: f.EmitType.publishIM,
                          params: t,
                          permission: l["default"].WRITE,
                          singleTimeout: c.SocketTimeout.commonRequestSingle,
                          totalTimeout: c.SocketTimeout.commonRequestTotal,
                          fail: function fail(t) {
                            e.status = d["default"].fail, r({
                              code: t.resultCode || 408,
                              content: t.content || "Failed to send private message."
                            });
                          },
                          success: function success(t) {
                            e.status = d["default"].success, e.timestamp = t.content.timestamp, i(e), n._conversations.updateByOutMessage(e, s.type, s.id, s.data);
                          }
                        });

                        n._goEasySocket.emit(a);
                      })["catch"](function (e) {
                        r({
                          code: e.code || 400,
                          content: e.content || e
                        });
                      });
                    }
                  } else r({
                    code: 400,
                    content: "message require property to.id"
                  });
                } else r({
                  code: 400,
                  content: "message require property to."
                });
              } else r({
                code: 400,
                content: "Please create a new message, a message can only be sent once"
              });
            } else r({
              code: 400,
              content: "it is invalid message"
            });
          });
        }
      }]), e;
    }();

    t["default"] = m;
  }, function (e, t, n) {
    var o = n(7),
        i = o.JSON || (o.JSON = {
      stringify: JSON.stringify
    });

    e.exports = function (e) {
      return i.stringify.apply(i, arguments);
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = c(n(33)),
        i = c(n(6)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(210)),
        u = c(n(211));
    c(n(9));

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = function () {
      function e(t) {
        (0, r["default"])(this, e), this.im = null, this.im = t;
      }

      return (0, s["default"])(e, [{
        key: "build",
        value: function value(e, t, n) {
          var r = this;
          return new i["default"](function (i, s) {
            var c = new a["default"]({
              to: e,
              message: t,
              conversationType: n
            }),
                l = t.type;
            new u["default"](l, r.im).build(t).then(function (e) {
              c.p = (0, o["default"])(e), i(c);
            })["catch"](function (e) {
              s(e);
            });
          });
        }
      }]), e;
    }();

    t["default"] = l;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(33)),
        i = f(n(0)),
        r = f(n(1)),
        s = n(17),
        a = f(n(43)),
        u = f(n(103)),
        c = f(n(9)),
        l = f(n(42));

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function () {
      function e(t) {
        (0, i["default"])(this, e), this.mt = null, this.to = null, this.p = null, this.t = null, this.guid = null, this.nt = null, this.validate(t.to, t.message), this.mt = t.message.type, this.to = t.to, this.t = t.conversationType, this.guid = t.message.messageId, this.p = t.message.payload, this.nt = t.message.notification;
      }

      return (0, r["default"])(e, [{
        key: "validate",
        value: function value(e, t) {
          if (!(t instanceof a["default"])) throw Error("createMessage first.");
          if (s.calibrator.isEmpty(e)) throw Error("userId is empty.");
          if (!s.calibrator.isStringOrNumber(e)) throw Error("userId should be a string or number.");
          if (l["default"].userId == e) throw Error("userId can not be the same as your id.");

          if (t.type == c["default"].text) {
            if (!(t instanceof u["default"])) throw Error("it is not textMessage");
            if ((0, o["default"])(t.payload).length > 3072) throw Error("message-length limit 3kb");
          }
        }
      }]), e;
    }();

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = u(n(0)),
        i = n(212),
        r = u(n(213)),
        s = u(n(105)),
        a = u(n(9));

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    t["default"] = function c(e, t) {
      return (0, o["default"])(this, c), e == a["default"].video ? new r["default"](t) : e == a["default"].audio || e == a["default"].image || e == a["default"].file ? new s["default"](t) : i.simplePayloadBuilder;
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.simplePayloadBuilder = undefined;
    var o = c(n(6)),
        i = c(n(3)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(4)),
        u = c(n(5));

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = new (function (e) {
      function t() {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this));
      }

      return (0, u["default"])(t, e), (0, s["default"])(t, [{
        key: "build",
        value: function value(e) {
          return new o["default"](function (t, n) {
            try {
              t(e.payload);
            } catch (o) {
              n(o);
            }
          });
        }
      }]), t;
    }(c(n(104))["default"]))();
    t.simplePayloadBuilder = l;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(6)),
        i = f(n(3)),
        r = f(n(0)),
        s = f(n(1)),
        a = f(n(4)),
        u = f(n(5)),
        c = f(n(105)),
        l = f(n(106));

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function (e) {
      function t(e) {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this, e));
      }

      return (0, u["default"])(t, e), (0, s["default"])(t, [{
        key: "build",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            var i = new l["default"]();
            t.upload(e).then(function (t) {
              var o = t.content;
              undefined;
              i = e.payload;
              var r = "?x-oss-process=video/snapshot,t_0000,f_jpg,w_" + e.payload.video.width + ",m_fast,ar_auto";
              i.video.url = t.content.url, i.thumbnail.url = t.content.url + r, i.video.name = t.content.newFileName, n(i);
            })["catch"](function (e) {
              o(e);
            });
          });
        }
      }]), t;
    }(c["default"]);

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.fileUploader = undefined;
    var o = c(n(0)),
        i = c(n(1)),
        r = c(n(102)),
        s = n(215),
        a = n(216),
        u = n(217);

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = function () {
      function e() {
        (0, o["default"])(this, e), this.uploader = {
          uniApp: s.uniAppFileUploader,
          wx: a.wxFileUploader,
          html: u.htmlFileUploader
        };
      }

      return (0, i["default"])(e, [{
        key: "upload",
        value: function value(e, t) {
          var n = r["default"].resolve();
          return this.uploader[n].upload(e, t);
        }
      }]), e;
    }();

    t["default"] = l;
    var f = new l();
    t.fileUploader = f;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.uniAppFileUploader = undefined;
    var o = c(n(6)),
        i = c(n(3)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(4)),
        u = c(n(5));

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = new (function (e) {
      function t() {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this));
      }

      return (0, u["default"])(t, e), (0, s["default"])(t, [{
        key: "upload",
        value: function value(e, t) {
          var n = this;

          try {
            return new o["default"](function (o, i) {
              uni.uploadFile({
                url: e.host,
                filePath: n.getTempFilePath(e),
                name: "file",
                formData: e.parameters,
                success: function success(t) {
                  if (200 === t.statusCode) {
                    var n = e.payload;
                    n.message = t.errMsg, o({
                      code: 200,
                      content: n
                    });
                  } else i({
                    code: t.statusCode,
                    content: t.errMsg
                  });
                },
                fail: function fail(e) {
                  i({
                    code: 500,
                    content: e.errMsg
                  });
                }
              }).onProgressUpdate(function (e) {
                t && t(e);
              });
            });
          } catch (i) {
            return new o["default"](function (e, t) {
              t({
                code: 500,
                content: i
              });
            });
          }
        }
      }, {
        key: "getTempFilePath",
        value: function value(e) {
          var t = e.file || e.fileRes;
          return Array.isArray(t.tempFiles) ? t.tempFiles[0].path : t.tempFilePath;
        }
      }]), t;
    }(c(n(71))["default"]))();
    t.uniAppFileUploader = l;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.wxFileUploader = undefined;
    var o = c(n(6)),
        i = c(n(3)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(4)),
        u = c(n(5));

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = new (function (e) {
      function t() {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).apply(this, arguments));
      }

      return (0, u["default"])(t, e), (0, s["default"])(t, [{
        key: "upload",
        value: function value(e, t) {
          var n = this;

          try {
            return new o["default"](function (o, i) {
              wx.uploadFile({
                url: e.host,
                filePath: n.getTempFilePath(e),
                name: "file",
                formData: e.parameters,
                success: function success(t) {
                  if (200 === t.statusCode) {
                    var n = e.payload;
                    n.message = t.errMsg, o({
                      code: 200,
                      content: n
                    });
                  } else i({
                    code: t.statusCode,
                    content: t.errMsg
                  });
                },
                fail: function fail(e) {
                  i({
                    code: 500,
                    content: e.errMsg
                  });
                }
              }).onProgressUpdate(function (e) {
                t && t(e);
              });
            });
          } catch (i) {
            return new o["default"](function (e, t) {
              t({
                code: 500,
                content: i
              });
            });
          }
        }
      }, {
        key: "getTempFilePath",
        value: function value(e) {
          var t = e.file || e.fileRes;
          return Array.isArray(t.tempFiles) ? t.tempFiles[0].path : t.tempFilePath;
        }
      }]), t;
    }(c(n(71))["default"]))();
    t.wxFileUploader = l;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.htmlFileUploader = undefined;
    var o = c(n(6)),
        i = c(n(3)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(4)),
        u = c(n(5));

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = new (function (e) {
      function t() {
        return (0, r["default"])(this, t), (0, a["default"])(this, (t.__proto__ || (0, i["default"])(t)).call(this));
      }

      return (0, u["default"])(t, e), (0, s["default"])(t, [{
        key: "upload",
        value: function value(e, t) {
          try {
            return new o["default"](function (n, o) {
              var i = new XMLHttpRequest();

              for (var r in i.open("post", e.host, !0), e.headers) {
                i.setRequestHeader(r, e.headers[r]);
              }

              i.upload.onprogress = function (e) {
                t && t(e);
              }, i.upload.onloadstart = function (e) {
                t && t(e);
              }, i.upload.onloadend = function (e) {
                t && t(e);
              };
              var s = new FormData();

              for (var a in e.parameters) {
                "fileRes" == a ? s.append("file", e.parameters[a]) : s.append(a, e.parameters[a]);
              }

              i.send(s), i.onreadystatechange = function () {
                if (4 == i.readyState) if (i.status >= 200 && i.status < 300 || 304 == i.status) {
                  var t = e.payload;
                  t.message = i.responseText, n({
                    code: 200,
                    content: t
                  });
                } else o({
                  code: i.status,
                  content: i.responseText
                });
              };
            });
          } catch (n) {
            return new o["default"](function (e, t) {
              t({
                code: 500,
                content: n
              });
            });
          }
        }
      }]), t;
    }(c(n(71))["default"]))();
    t.htmlFileUploader = l;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = u(n(6)),
        i = u(n(0)),
        r = u(n(1)),
        s = u(n(219)),
        a = u(n(223));

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var c = function () {
      function e(t) {
        (0, i["default"])(this, e), this.uploadTokenResolver = null, this.uploadTokenResolver = new a["default"](t);
      }

      return (0, r["default"])(e, [{
        key: "build",
        value: function value(e, t, n) {
          var i = this;
          return new o["default"](function (o, r) {
            i.uploadTokenResolver.resolve(t).then(function (t) {
              var i = t.content;
              o(new s["default"](i.vendor).build(i, e, n));
            })["catch"](function (e) {
              r(e);
            });
          });
        }
      }]), e;
    }();

    t["default"] = c;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o,
        i = n(0),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    },
        s = n(220),
        a = n(221),
        u = n(222);

    t["default"] = function c(e) {
      return (0, r["default"])(this, c), e == s.OssType.aliYun ? a.aliYunOSSRequestBuilder : u.qiNiuYunOSSRequestBuilder;
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    t.OssType = {
      aliYun: "ALI",
      qiNiu: "QN"
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.aliYunOSSRequestBuilder = undefined;
    var o = f(n(3)),
        i = f(n(0)),
        r = f(n(1)),
        s = f(n(4)),
        a = f(n(5)),
        u = f(n(108)),
        c = f(n(109)),
        l = f(n(9));

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function (e) {
      function t() {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this));
      }

      return (0, a["default"])(t, e), (0, r["default"])(t, [{
        key: "url",
        value: function value(e) {
          return e.host + "/" + e.dir + "/" + this.newFileName(e);
        }
      }, {
        key: "build",
        value: function value(e, t, n) {
          var o = {
            key: e.dir + "/" + this.newFileName(e),
            OSSAccessKeyId: e.accessKeyId,
            policy: e.policy,
            signature: e.signature,
            success_action_status: "200",
            fileRes: t
          };
          l["default"].file === n && (o = {
            key: e.dir + "/" + this.newFileName(e),
            OSSAccessKeyId: e.accessKeyId,
            policy: e.policy,
            signature: e.signature,
            success_action_status: "200",
            "Content-Disposition": "attachment;filename=" + t.name,
            fileRes: t
          });
          var i = {
            newFileName: this.newFileName(e),
            url: this.url(e)
          };
          return new u["default"](e.host, null, o, t, i);
        }
      }]), t;
    }(c["default"]);

    t["default"] = d;
    var p = new d();
    t.aliYunOSSRequestBuilder = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.qiNiuYunOSSRequestBuilder = undefined;
    var o = l(n(3)),
        i = l(n(0)),
        r = l(n(1)),
        s = l(n(4)),
        a = l(n(5)),
        u = l(n(109)),
        c = l(n(108));

    function l(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var f = new (function (e) {
      function t() {
        return (0, i["default"])(this, t), (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this));
      }

      return (0, a["default"])(t, e), (0, r["default"])(t, [{
        key: "url",
        value: function value(e) {
          return e.downloadUrl;
        }
      }, {
        key: "build",
        value: function value(e, t) {
          var n = {
            key: this.newFileName(e),
            token: e.token,
            file: t
          },
              o = {
            newFileName: this.newFileName(e),
            url: this.url(e)
          };
          return new c["default"](e.host, null, n, t, o);
        }
      }]), t;
    }(u["default"]))();
    t.qiNiuYunOSSRequestBuilder = f;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = c(n(6)),
        i = c(n(0)),
        r = c(n(1)),
        s = c(n(10)),
        a = c(n(8)),
        u = n(32);

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = function () {
      function e(t) {
        (0, i["default"])(this, e), this.im = null, this.im = t;
      }

      return (0, r["default"])(e, [{
        key: "resolve",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            var i = new s["default"]({
              name: "uploadToken",
              params: {
                filename: e
              },
              permission: a["default"].WRITE,
              singleTimeout: u.SocketTimeout.commonRequestSingle,
              totalTimeout: u.SocketTimeout.commonRequestTotal,
              fail: function fail(e) {
                o(e);
              },
              success: function success(e) {
                200 == e.code ? n(e) : o(e);
              }
            });

            t.im._goEasySocket.emit(i);
          });
        }
      }]), e;
    }();

    t["default"] = l;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(21)),
        i = d(n(6)),
        r = d(n(0)),
        s = d(n(1)),
        a = n(17),
        u = d(n(10)),
        c = d(n(8)),
        l = n(32),
        f = n(11);

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function () {
      function e(t) {
        (0, r["default"])(this, e), this.im = null, this.im = t;
      }

      return (0, s["default"])(e, [{
        key: "history",
        value: function value(e) {
          var t = this;
          return new i["default"](function (n, o) {
            t.transformOptions(e);
            var i = new u["default"]({
              name: f.EmitType.imHistory,
              params: e,
              permission: c["default"].READ,
              singleTimeout: l.SocketTimeout.commonQuerySingle,
              totalTimeout: l.SocketTimeout.commonQueryTotal,
              fail: function fail(e) {
                o({
                  code: e.code || 408,
                  content: e.content || "Failed to query message"
                });
              },
              success: function success(i) {
                if (200 == i.code) {
                  var r = t.transformHistories(i, e);
                  n({
                    code: 200,
                    content: r
                  });
                } else o(i);
              }
            });

            t.im._goEasySocket.emit(i);
          });
        }
      }, {
        key: "transformOptions",
        value: function value(e) {
          if (!a.calibrator.isObject(e) || !a.calibrator.isDef(e.friendId) && !a.calibrator.isDef(e.groupId)) throw Error("friendId or groupId is not define.");
          if (a.calibrator.isDef(e.friendId) && a.calibrator.isDef(e.groupId)) throw Error("only contain friendId or groupId.");

          if (a.calibrator.isDef(e.limit) || (e.limit = 10), e.limit > 30 && (e.limit = 30), a.calibrator.isDef(e.friendId)) {
            if (!a.calibrator.isStringOrNumber(e.friendId)) throw Error("TypeError: friendId require string or number.");
            a.calibrator.isNumber(e.friendId) && (e.friendId = e.friendId.toString());
          } else {
            if (!a.calibrator.isStringOrNumber(e.groupId)) throw Error("TypeError: groupId require string or number.");
            a.calibrator.isNumber(e.groupId) && (e.groupId = e.groupId.toString());
          }

          return e;
        }
      }, {
        key: "transformHistories",
        value: function value(e, t) {
          var n = [];
          return e && e.content && e.content.map(function (e) {
            var i = (0, o["default"])(null);
            i.timestamp = e.ts, i.senderId = e.s, i.type = e.mt, i.payload = JSON.parse(e.p), t.groupId && e.d && (i.senderData = JSON.parse(e.d)), n.push(i);
          }), n;
        }
      }]), e;
    }();

    t["default"] = p;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = h(n(6)),
        i = h(n(0)),
        r = h(n(1)),
        s = h(n(10)),
        a = n(11),
        u = h(n(8)),
        c = n(15),
        l = n(25),
        f = h(n(48)),
        d = n(2),
        p = n(29);

    function h(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var y = function () {
      function e(t) {
        (0, i["default"])(this, e), this.im = null, this.im = t, t._iMReceiver.addIMMessageObserver(this.newNewMessageReceived.bind(this));
      }

      return (0, r["default"])(e, [{
        key: "newNewMessageReceived",
        value: function value(e) {
          if (e.t === l.ConversationType.GROUP) {
            var t = f["default"].assemble(e);

            this.im._event.notify(p.ImEventType.GROUP_MESSAGE_RECEIVED, t);
          }
        }
      }, {
        key: "subscribe",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (Array.isArray(e) && 0 != e.length) {
              for (var i = 0; i < e.length; i++) {
                if (!d.calibrator.isStringOrNumber(e[i])) return void o({
                  code: 400,
                  content: "TypeError: groups item require string or number."
                });
                d.calibrator.isNumber(e[i]) && (e[i] = e[i].toString());
              }

              var r = new s["default"]({
                name: a.EmitType.subscribeGroups,
                params: {
                  groupIds: e
                },
                permission: u["default"].WRITE,
                singleTimeout: c.SocketTimeout.commonInfiniteSingle,
                totalTimeout: c.SocketTimeout.commonInfiniteTotal,
                success: function success() {
                  n({
                    code: 200,
                    content: "ok"
                  });
                },
                fail: function fail(e) {
                  o({
                    code: e.resultCode || 408,
                    content: e.content || "Failed to subscribe group message"
                  });
                }
              });

              t.im._goEasySocket.emit(r);
            } else o({
              code: 400,
              content: "TypeError: groups require array."
            });
          });
        }
      }, {
        key: "unsubscribe",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (d.calibrator.isStringOrNumber(e)) {
              e = e.toString();
              var i = new s["default"]({
                name: a.EmitType.unsubscribeGroup,
                params: {
                  groupId: e
                },
                permission: u["default"].READ,
                singleTimeout: c.SocketTimeout.commonRequestSingle,
                totalTimeout: c.SocketTimeout.commonRequestTotal,
                success: function success() {
                  n({
                    code: 200,
                    content: "ok"
                  });
                },
                fail: function fail(e) {
                  o({
                    code: e.resultCode || 408,
                    content: e.content || "Failed to unsubscribe group message"
                  });
                }
              });

              t.im._goEasySocket.emit(i);
            } else o({
              code: 400,
              content: "TypeError: channel require string or number."
            });
          });
        }
      }]), e;
    }();

    t["default"] = y;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = u(n(0)),
        i = u(n(1)),
        r = u(n(48)),
        s = n(25),
        a = n(29);

    function u(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var c = function () {
      function e(t) {
        (0, o["default"])(this, e), this.im = null, this.im = t, t._iMReceiver.addIMMessageObserver(this.onNewMessageReceived.bind(this));
      }

      return (0, i["default"])(e, [{
        key: "onNewMessageReceived",
        value: function value(e) {
          if (e.t === s.ConversationType.PRIVATE) {
            var t = r["default"].assemble(e);

            this.im._event.notify(a.ImEventType.PRIVATE_MESSAGE_RECEIVED, t);
          }
        }
      }]), e;
    }();

    t["default"] = c;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(6)),
        i = f(n(0)),
        r = f(n(1)),
        s = f(n(10)),
        a = n(11),
        u = f(n(8)),
        c = n(15),
        l = n(2);

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function () {
      function e(t) {
        (0, i["default"])(this, e), this.im = null, this.im = t;
      }

      return (0, r["default"])(e, [{
        key: "get",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (l.calibrator.isStringOrNumber(e)) {
              l.calibrator.isNumber(e) && (e = e.toString());
              var i = new s["default"]({
                name: a.EmitType.imGroupOnlineCount,
                params: {
                  groupId: e
                },
                permission: u["default"].READ,
                singleTimeout: c.SocketTimeout.commonQuerySingle,
                totalTimeout: c.SocketTimeout.commonQueryTotal,
                fail: function fail(e) {
                  o(e || {
                    code: 408,
                    content: "Failed to query online group users"
                  });
                },
                success: function success(e) {
                  200 == e.code ? n(e) : o(e);
                }
              });

              t.im._goEasySocket.emit(i);
            } else o({
              code: 400,
              content: "TypeError: groupId require string or number."
            });
          });
        }
      }]), e;
    }();

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = p(n(6)),
        i = p(n(0)),
        r = p(n(1)),
        s = p(n(10)),
        a = p(n(8)),
        u = n(32),
        c = n(11),
        l = n(2),
        f = n(29),
        d = p(n(41));

    function p(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var h = function () {
      function e(t) {
        (0, i["default"])(this, e), this.im = null, this.im = t, t._goEasySocket.addMessageObserver(d["default"].groupPresence, this.newMessageReceived.bind(this));
      }

      return (0, r["default"])(e, [{
        key: "presence",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (Array.isArray(e) && 0 != e.length) {
              for (var i = 0; i < e.length; i++) {
                if (!l.calibrator.isStringOrNumber(e[i])) return void o({
                  code: 400,
                  content: "TypeError: groupIds item require string or number."
                });
                if (l.calibrator.isNumber(e[i]) && (e[i] = e[i].toString()), 0 == e[i].length) return void o({
                  code: 400,
                  content: "TypeError: groupIds has empty item."
                });
              }

              var r = {
                groupIds: e
              };
              t.emitRocket(c.EmitType.subscribeGroupPresence, r, function () {
                n({
                  code: 200,
                  content: "ok"
                });
              }, function (e) {
                o({
                  code: e.code || 408,
                  content: e.content || "Failed to subscribe group message"
                });
              }, u.SocketTimeout.commonInfiniteSingle, u.SocketTimeout.commonInfiniteTotal);
            } else o({
              code: 400,
              content: "TypeError: groupIds require array."
            });
          });
        }
      }, {
        key: "unPresence",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (l.calibrator.isStringOrNumber(e)) {
              l.calibrator.isNumber(e) && (e = e.toString());
              var i = {
                groupId: e
              };
              t.emitRocket(c.EmitType.unsubscribeGroupPresence, i, function () {
                n({
                  code: 200,
                  content: "ok"
                });
              }, function (e) {
                o({
                  code: e.code || 408,
                  content: e.content || "Failed to unsubscribe presence"
                });
              }, u.SocketTimeout.commonRequestSingle, u.SocketTimeout.commonRequestTotal);
            } else o({
              code: 400,
              content: "TypeError: groupId require string or number."
            });
          });
        }
      }, {
        key: "emitRocket",
        value: function value(e, t, n, o, i, r) {
          var u = new s["default"]({
            name: e,
            params: t,
            singleTimeout: i,
            totalTimeout: r,
            permission: a["default"].WRITE,
            success: n,
            fail: o
          });

          this.im._goEasySocket.emit(u);
        }
      }, {
        key: "newMessageReceived",
        value: function value(e) {
          var t = this,
              n = null;
          e.c && (n = JSON.parse(e.c)), n && n.events && n.events.map(function (e) {
            var o = e.userData ? JSON.parse(e.userData) : {},
                i = {
              time: e.time,
              action: e.action,
              groupOnlineCount: n.userAmount,
              groupId: n.groupId,
              id: e.userId,
              data: o
            };

            t.im._event.notify(f.ImEventType.GROUP_PRESENCE, i);
          });
        }
      }]), e;
    }();

    t["default"] = h;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = p(n(6)),
        i = p(n(0)),
        r = p(n(1)),
        s = p(n(10)),
        a = p(n(8)),
        u = n(32),
        c = n(11),
        l = n(2),
        f = n(29),
        d = p(n(41));

    function p(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var h = function () {
      function e(t) {
        (0, i["default"])(this, e), this.im = null, this.im = t, this.im._goEasySocket.addMessageObserver(d["default"].userPresence, this.newMessageReceived.bind(this));
      }

      return (0, r["default"])(e, [{
        key: "presence",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (Array.isArray(e) && 0 != e.length) {
              for (var i = 0; i < e.length; i++) {
                if (!l.calibrator.isStringOrNumber(e[i])) return void o({
                  code: 400,
                  content: "TypeError: userIds item require string or number."
                });
                if (l.calibrator.isNumber(e[i]) && (e[i] = e[i].toString()), 0 == e[i].length) return void o({
                  code: 400,
                  content: "TypeError: userIds has empty item."
                });
              }

              var r = {
                userIds: e
              };
              t.emitRocket(c.EmitType.subscribeUserPresence, r, function () {
                n({
                  code: 200,
                  content: "ok"
                });
              }, function (e) {
                o({
                  code: e.code || 408,
                  content: e.content || "Failed to subscribe group message"
                });
              }, u.SocketTimeout.commonInfiniteSingle, u.SocketTimeout.commonInfiniteTotal);
            } else o({
              code: 400,
              content: "TypeError: userIds require array."
            });
          });
        }
      }, {
        key: "unPresence",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (l.calibrator.isStringOrNumber(e)) {
              l.calibrator.isNumber(e) && (e = e.toString());
              var i = {
                userId: e
              };
              t.emitRocket(c.EmitType.unsubscribeUserPresence, i, function () {
                n({
                  code: 200,
                  content: "ok"
                });
              }, function (e) {
                o({
                  code: e.code || 408,
                  content: e.content || "Failed to unsubscribe presence"
                });
              }, u.SocketTimeout.commonRequestSingle, u.SocketTimeout.commonRequestTotal);
            } else o({
              code: 400,
              content: "TypeError: id require string or number."
            });
          });
        }
      }, {
        key: "emitRocket",
        value: function value(e, t, n, o, i, r) {
          var u = new s["default"]({
            name: e,
            params: t,
            singleTimeout: i,
            totalTimeout: r,
            permission: a["default"].WRITE,
            success: n,
            fail: o
          });

          this.im._goEasySocket.emit(u);
        }
      }, {
        key: "newMessageReceived",
        value: function value(e) {
          var t = this,
              n = [];
          e.c && (n = JSON.parse(e.c).events || []), n.map(function (e) {
            var n = e.userData ? JSON.parse(e.userData) : {},
                o = {
              time: e.time,
              action: e.action,
              id: e.userId,
              data: n
            };

            t.im._event.notify(f.ImEventType.USER_PRESENCE, o);
          });
        }
      }]), e;
    }();

    t["default"] = h;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(6)),
        i = f(n(0)),
        r = f(n(1)),
        s = n(11),
        a = f(n(10)),
        u = f(n(8)),
        c = n(15),
        l = n(2);

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function () {
      function e(t) {
        (0, i["default"])(this, e), this.im = null, this.im = t;
      }

      return (0, r["default"])(e, [{
        key: "hereNow",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (e.userIds && Array.isArray(e.userIds) && 0 != e.userIds.length) {
              for (var i = 0; i < e.userIds.length; i++) {
                if (!l.calibrator.isStringOrNumber(e.userIds[i])) return void o({
                  code: 400,
                  content: "TypeError: userIds item require string or number."
                });
                if (l.calibrator.isNumber(e.userIds[i]) && (e.userIds[i] = e.userIds[i].toString()), 0 == e.userIds[i].length) return void o({
                  code: 400,
                  content: "TypeError: userIds has empty item."
                });
              }

              var r = new a["default"]({
                name: s.EmitType.imHereNow,
                params: e,
                permission: u["default"].READ,
                singleTimeout: c.SocketTimeout.commonQuerySingle,
                totalTimeout: c.SocketTimeout.commonQueryTotal,
                fail: function fail(e) {
                  o({
                    code: e.resultCode || 408,
                    content: e.content || "Failed to query online users"
                  });
                },
                success: function success(e) {
                  if (200 == e.code) {
                    var t = e.content;
                    e.content = t.map(function (e) {
                      var t = e.userData ? JSON.parse(e.userData) : {};
                      return {
                        id: e.userId,
                        data: t
                      };
                    }), n(e);
                  } else o(e);
                }
              });

              t.im._goEasySocket.emit(r);
            } else o({
              code: 400,
              content: "TypeError: userIds require array."
            });
          });
        }
      }]), e;
    }();

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(6)),
        i = f(n(0)),
        r = f(n(1)),
        s = n(11),
        a = f(n(10)),
        u = f(n(8)),
        c = n(15),
        l = n(17);

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function () {
      function e(t) {
        (0, i["default"])(this, e), this.im = null, this.im = t;
      }

      return (0, r["default"])(e, [{
        key: "hereNow",
        value: function value(e) {
          var t = this;
          return new o["default"](function (n, o) {
            if (l.calibrator.isStringOrNumber(e)) {
              l.calibrator.isNumber(e) && (e = e.toString());
              var i = new a["default"]({
                name: s.EmitType.imGroupHereNow,
                params: {
                  groupId: e
                },
                permission: u["default"].READ,
                singleTimeout: c.SocketTimeout.commonQuerySingle,
                totalTimeout: c.SocketTimeout.commonQueryTotal,
                fail: function fail(e) {
                  o({
                    code: e.resultCode || 408,
                    content: e.content || "Failed to query online group users"
                  });
                },
                success: function success(e) {
                  if (200 == e.code) {
                    var t = e.content;
                    e.content = t.map(function (e) {
                      var t = e.userData ? JSON.parse(e.userData) : {};
                      return {
                        id: e.userId,
                        data: t
                      };
                    }), n(e);
                  } else o(e);
                }
              });

              t.im._goEasySocket.emit(i);
            } else o({
              code: 400,
              content: "TypeError: groupId require string or number."
            });
          });
        }
      }]), e;
    }();

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = s(n(0)),
        i = s(n(1)),
        r = s(n(41));

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = function () {
      function e(t) {
        (0, o["default"])(this, e), this.im = null, this.observers = [], this.im = t, t._goEasySocket.addMessageObserver(r["default"].imMessage, this.newNewMessageReceived.bind(this));
      }

      return (0, i["default"])(e, [{
        key: "newNewMessageReceived",
        value: function value(e) {
          this.sendAck(e), this.notify(e);
        }
      }, {
        key: "addIMMessageObserver",
        value: function value(e) {
          this.observers.push(e);
        }
      }, {
        key: "sendAck",
        value: function value(e) {
          this.im._goEasySocket.sendAck("imAck", {
            publishGuid: e.i
          });
        }
      }, {
        key: "notify",
        value: function value(e) {
          for (var t = 0; t < this.observers.length; t++) {
            this.observers[t](e);
          }
        }
      }]), e;
    }();

    t["default"] = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = d(n(72)),
        i = d(n(6)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(10)),
        u = n(11),
        c = d(n(8)),
        l = n(15),
        f = n(25);

    function d(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var p = function () {
      function e(t, n) {
        (0, r["default"])(this, e), this.im = null, this.userData = {}, this.groupData = {}, this.im = t, this.putUserData(n.id, n.data);
      }

      return (0, s["default"])(e, [{
        key: "putData",
        value: function value(e, t, n) {
          n || (n = {}), e == f.ConversationType.PRIVATE ? this.userData[t] = n : this.groupData[t] = n;
        }
      }, {
        key: "putUserData",
        value: function value(e, t) {
          this.userData[e] = t;
        }
      }, {
        key: "putGroupData",
        value: function value(e, t) {
          this.groupData[e] = t;
        }
      }, {
        key: "loadData",
        value: function value(e, t) {
          var n = this;
          return new i["default"](function (i, r) {
            var s = void 0;
            if ((s = f.ConversationType.PRIVATE === t ? n.userData : n.groupData)[e] && 0 != (0, o["default"])(s[e]).length) i(s[e]);else {
              var d = {
                targetId: e,
                type: t
              },
                  p = new a["default"]({
                name: u.EmitType.imData,
                params: d,
                permission: c["default"].READ,
                singleTimeout: l.SocketTimeout.commonQuerySingle,
                totalTimeout: l.SocketTimeout.commonQueryTotal,
                success: function success(t) {
                  t.content ? s[e] = JSON.parse(t.content) : s[e] = {}, i(s[e]);
                },
                fail: function fail(e) {
                  r(e);
                }
              });

              n.im._goEasySocket.emit(p);
            }
          });
        }
      }]), e;
    }();

    t["default"] = p;
  }, function (e, t, n) {
    n(235), e.exports = n(7).Object.keys;
  }, function (e, t, n) {
    var o = n(40),
        i = n(31);
    n(66)("keys", function () {
      return function (e) {
        return i(o(e));
      };
    });
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });

    var o = C(n(6)),
        i = C(n(33)),
        r = C(n(3)),
        s = C(n(0)),
        a = C(n(1)),
        u = C(n(4)),
        c = C(n(12)),
        l = C(n(5)),
        f = C(n(110)),
        d = n(11),
        p = C(n(273)),
        h = C(n(10)),
        y = C(n(8)),
        v = C(n(28)),
        m = C(n(274)),
        g = n(2),
        b = n(119),
        _ = n(15),
        k = C(n(275));

    function C(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var w = function (e) {
      function t(e) {
        (0, s["default"])(this, t);
        var n = (0, u["default"])(this, (t.__proto__ || (0, r["default"])(t)).call(this));
        return n.ioSocket = null, n.sid = null, n.appKey = null, n.userId = null, n.userData = null, n.otp = null, n.artifactVersion = "0.0.0", n.uri = null, n.ioOpts = null, n.allowNotification = !1, n.reconnectingTimes = 0, n.messageObservers = {}, n.connectFailedObservers = [], n.connectingObservers = [], n.expiredReconnectedObservers = [], n.ioSocket = new p["default"]({
          onDisconnected: n.onIoDisconnected.bind(n),
          onReconnecting: n.onIoReconnecting.bind(n)
        }), n.ioSocket.addConnectedObserver(n.onIoReconnected.bind(n)), n.appKey = e.appkey, n.userId = e.id, n.userData = e.data, n.otp = e.otp || null, n.ioOpts = e.opts, n.uri = e.uri, n.allowNotification = e.allowNotification, n.artifactVersion = e.artifactVersion, n.modules = e.modules, n.addConnectedObserver(e.onSuccess), n.addConnectingObserver(e.onProgress), n.addConnectFailedObserver(e.onFailed), n;
      }

      return (0, l["default"])(t, e), (0, a["default"])(t, [{
        key: "onIoReconnected",
        value: function value() {
          this.status === v["default"].RECONNECTING && this.authorize();
        }
      }, {
        key: "emit",
        value: function value(e) {
          (0, c["default"])(t.prototype.__proto__ || (0, r["default"])(t.prototype), "emit", this).call(this, e);
        }
      }, {
        key: "doEmit",
        value: function value(e, t, n) {
          b.uniApp.overrideUniShowHideMethods(), t.sid = this.sid, this.ioSocket.doEmit(e, t, n);
        }
      }, {
        key: "sendAck",
        value: function value(e, t) {
          this.ioSocket.io.emit(e, t);
        }
      }, {
        key: "connect",
        value: function value(e) {
          var n = this;
          ((0, c["default"])(t.prototype.__proto__ || (0, r["default"])(t.prototype), "connect", this).call(this), this.onConnecting(this.reconnectingTimes), this.ioSocket.connect({
            uri: this.uri,
            opts: this.ioOpts
          }), this.notifier = new k["default"](this), this.notifier.support()) ? this.notifier.getRegId().then(function (e) {
            n.regId = e, n.authorize();
          })["catch"](function (e) {
            console.error("注册厂商通道失败：" + (0, i["default"])(e)), n.authorize();
          }) : this.authorize();
        }
      }, {
        key: "disconnect",
        value: function value() {
          var e = this;
          return new o["default"](function (t, n) {
            var o = function o() {
              e.status = v["default"].DISCONNECTED, e.ioSocket.disconnect(), t();
            };

            if (e.allowNotification) {
              var i = new h["default"]({
                name: d.EmitType.manualDisconnect,
                params: {},
                permission: y["default"].READ,
                singleTimeout: _.SocketTimeout.commonInfiniteSingle,
                totalTimeout: _.SocketTimeout.commonInfiniteTotal,
                fail: function fail(e) {
                  n(e);
                },
                success: o
              });
              e.emit(i);
            } else o();
          });
        }
      }, {
        key: "authorize",
        value: function value() {
          var e = {
            appkey: this.appKey,
            userId: this.userId,
            userData: (0, i["default"])(this.userData),
            otp: this.otp,
            artifactVersion: this.artifactVersion,
            sid: this.sid,
            allowNT: this.allowNotification,
            regId: this.regId,
            modules: this.modules
          };
          (0, i["default"])(e);
          var t = new h["default"]({
            name: d.EmitType.authorize,
            params: e,
            permission: y["default"].NONE,
            singleTimeout: _.SocketTimeout.commonInfiniteSingle,
            totalTimeout: _.SocketTimeout.commonInfiniteTotal,
            success: this.onAuthorizeSuccess.bind(this),
            fail: this.onAuthorizeFailed.bind(this)
          });
          this.ioSocket.emit(t);
        }
      }, {
        key: "onConnecting",
        value: function value() {
          this.notify(this.connectingObservers, this.reconnectingTimes);
        }
      }, {
        key: "onIoReconnecting",
        value: function value() {
          b.uniApp.overrideUniShowHideMethods(), this.reconnectingTimes++, this.status == v["default"].CONNECTED || this.status == v["default"].EXPIRED_RECONNECTED || this.status == v["default"].RECONNECTING ? this.status = v["default"].RECONNECTING : this.status = v["default"].CONNECTING, this.onConnecting();
        }
      }, {
        key: "onIoDisconnected",
        value: function value() {
          this.status == v["default"].DISCONNECTING && (this.status = v["default"].DISCONNECTED, this.notify(this.disconnectedObservers));
        }
      }, {
        key: "onAuthorizeSuccess",
        value: function value(e) {
          this.status === v["default"].RECONNECTING ? this.sid !== e.sid ? (this.status = v["default"].EXPIRED_RECONNECTED, this.notify(this.expiredReconnectedObservers)) : this.status = v["default"].RECONNECTED : (this.status = v["default"].CONNECTED, this.sid = e.sid);
          e.enablePublish && (this.permissions.find(function (e) {
            return e == y["default"].WRITE;
          }) || this.permissions.push(y["default"].WRITE)), e.enableSubscribe && (this.permissions.find(function (e) {
            return e == y["default"].READ;
          }) || this.permissions.push(y["default"].READ)), this.reconnectingTimes = 0, this.notify(this.connectedObservers);
        }
      }, {
        key: "onAuthorizeFailed",
        value: function value(e) {
          this.ioSocket.disconnect(), this.status = v["default"].CONNECT_FAILED;
          var t = {
            code: e.resultCode || 408,
            content: e.content || "Host unreachable or timeout"
          };
          this.notify(this.connectFailedObservers, t);
        }
      }, {
        key: "addConnectingObserver",
        value: function value(e) {
          g.calibrator.isFunction(e) && this.connectingObservers.push(e);
        }
      }, {
        key: "addConnectFailedObserver",
        value: function value(e) {
          g.calibrator.isFunction(e) && this.connectFailedObservers.push(e);
        }
      }, {
        key: "addExpiredReconnectedObserver",
        value: function value(e) {
          g.calibrator.isFunction(e) && this.expiredReconnectedObservers.push(e);
        }
      }, {
        key: "addMessageObserver",
        value: function value(e, t) {
          var n = this;
          this.ioSocket.io.on(e, function (t) {
            n.notifyMessageObservers(e, t);
          }), this.messageObservers[e] || (this.messageObservers[e] = []), this.messageObservers[e].push(new m["default"](t));
        }
      }, {
        key: "notifyMessageObservers",
        value: function value(e, t) {
          for (var n = this.messageObservers[e], o = 0; o < n.length; o++) {
            n[o].onMessage(e, t);
          }
        }
      }]), t;
    }(f["default"]);

    t["default"] = w;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = s(n(0)),
        i = s(n(1)),
        r = s(n(28));

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = function () {
      function e(t) {
        (0, o["default"])(this, e), this.socket = null, this.socket = t;
      }

      return (0, i["default"])(e, [{
        key: "emit",
        value: function value(e) {
          this.socket.status !== r["default"].CONNECT_FAILED && this.socket.status !== r["default"].DISCONNECTED ? (e.start(), this.doEmit(e)) : e.fail({
            resultCode: "409",
            content: "Please connect first"
          });
        }
      }, {
        key: "doEmit",
        value: function value(e) {
          var t = this;
          if (e.isTimeout()) e.fail({
            resultCode: 408,
            content: "Host unreachable or timeout"
          });else if (this.socket.status !== r["default"].CONNECT_FAILED) {
            if (this.authenticated()) {
              if (this.hasPermission(e)) {
                if (this.socket.status === r["default"].CONNECTED || this.socket.status === r["default"].RECONNECTED || this.socket.status === r["default"].EXPIRED_RECONNECTED) {
                  if (!e.complete) {
                    var n = setTimeout(function () {
                      t.doEmit(e);
                    }, e.singleTimeout);
                    this.socket.doEmit(e.name, e.params, function (t) {
                      clearTimeout(n), 200 === t.resultCode || 200 == t.code ? e.success(t) : e.fail(t);
                    }), e.retried++;
                  }
                } else setTimeout(function () {
                  t.doEmit(e);
                }, 500);
              } else e.fail({
                resultCode: 401,
                content: "No permission"
              });
            } else setTimeout(function () {
              t.doEmit(e);
            }, 500);
          } else e.fail({
            resultCode: 408,
            content: "Failed to connect GoEasy."
          });
        }
      }, {
        key: "hasPermission",
        value: function value(e) {
          return !!this.socket.permissions.find(function (t) {
            return t === e.permission;
          });
        }
      }, {
        key: "authenticated",
        value: function value() {
          return this.socket.status === r["default"].CONNECTED || this.socket.status === r["default"].RECONNECTING || this.socket.status === r["default"].RECONNECTED || this.socket.status === r["default"].EXPIRED_RECONNECTED;
        }
      }]), e;
    }();

    t["default"] = a;
  }, function (e, t, n) {
    "use strict";

    var o,
        i = n(20),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };
    var s = n(239),
        a = n(74),
        u = n(111);
    n(53)("socket.io-client");
    e.exports = t = l;
    var c = t.managers = {};

    function l(e, t) {
      "object" === (void 0 === e ? "undefined" : (0, r["default"])(e)) && (t = e, e = undefined), t = t || {};
      var n,
          o = s(e),
          i = o.source,
          a = o.id,
          l = o.path,
          f = c[a] && l in c[a].nsps;
      return t.forceNew || t["force new connection"] || !1 === t.multiplex || f ? n = u(i, t) : (c[a] || (c[a] = u(i, t)), n = c[a]), o.query && !t.query && (t.query = o.query), n.socket(o.path, t);
    }

    t.protocol = a.protocol, t.connect = l, t.Manager = n(111), t.Socket = n(115);
  }, function (e, t, n) {
    "use strict";

    var o = n(240);
    n(53)("socket.io-client:url");

    e.exports = function (e, t) {
      var n = e;
      t = t || "undefined" != typeof location && location, null == e && (e = t.protocol + "//" + t.host);
      "string" == typeof e && ("/" === e.charAt(0) && (e = "/" === e.charAt(1) ? t.protocol + e : t.host + e), /^(https?|wss?):\/\//.test(e) || (e = void 0 !== t ? t.protocol + "//" + e : "https://" + e), n = o(e));
      n.port || (/^(http|ws)$/.test(n.protocol) ? n.port = "80" : /^(http|ws)s$/.test(n.protocol) && (n.port = "443"));
      n.path = n.path || "/";
      var i = -1 !== n.host.indexOf(":") ? "[" + n.host + "]" : n.host;
      return n.id = n.protocol + "://" + i + ":" + n.port, n.href = n.protocol + "://" + i + (t && t.port === n.port ? "" : ":" + n.port), n;
    };
  }, function (e, t) {
    var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
        o = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];

    e.exports = function (e) {
      var t = e,
          i = e.indexOf("["),
          r = e.indexOf("]");
      -1 != i && -1 != r && (e = e.substring(0, i) + e.substring(i, r).replace(/:/g, ";") + e.substring(r, e.length));

      for (var s = n.exec(e || ""), a = {}, u = 14; u--;) {
        a[o[u]] = s[u] || "";
      }

      return -1 != i && -1 != r && (a.source = t, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = !0), a;
    };
  }, function (e, t, n) {
    function o(e) {
      var n;

      function o() {
        if (o.enabled) {
          var e = o,
              i = +new Date(),
              r = i - (n || i);
          e.diff = r, e.prev = n, e.curr = i, n = i;

          for (var s = new Array(arguments.length), a = 0; a < s.length; a++) {
            s[a] = arguments[a];
          }

          s[0] = t.coerce(s[0]), "string" != typeof s[0] && s.unshift("%O");
          var u = 0;
          s[0] = s[0].replace(/%([a-zA-Z%])/g, function (n, o) {
            if ("%%" === n) return n;
            u++;
            var i = t.formatters[o];

            if ("function" == typeof i) {
              var r = s[u];
              n = i.call(e, r), s.splice(u, 1), u--;
            }

            return n;
          }), t.formatArgs.call(e, s), (o.log || t.log || console.log.bind(console)).apply(e, s);
        }
      }

      return o.namespace = e, o.enabled = t.enabled(e), o.useColors = t.useColors(), o.color = function (e) {
        var n,
            o = 0;

        for (n in e) {
          o = (o << 5) - o + e.charCodeAt(n), o |= 0;
        }

        return t.colors[Math.abs(o) % t.colors.length];
      }(e), o.destroy = i, "function" == typeof t.init && t.init(o), t.instances.push(o), o;
    }

    function i() {
      var e = t.instances.indexOf(this);
      return -1 !== e && (t.instances.splice(e, 1), !0);
    }

    (t = e.exports = o.debug = o["default"] = o).coerce = function (e) {
      return e instanceof Error ? e.stack || e.message : e;
    }, t.disable = function () {
      t.enable("");
    }, t.enable = function (e) {
      var n;
      t.save(e), t.names = [], t.skips = [];
      var o = ("string" == typeof e ? e : "").split(/[\s,]+/),
          i = o.length;

      for (n = 0; n < i; n++) {
        o[n] && ("-" === (e = o[n].replace(/\*/g, ".*?"))[0] ? t.skips.push(new RegExp("^" + e.substr(1) + "$")) : t.names.push(new RegExp("^" + e + "$")));
      }

      for (n = 0; n < t.instances.length; n++) {
        var r = t.instances[n];
        r.enabled = t.enabled(r.namespace);
      }
    }, t.enabled = function (e) {
      if ("*" === e[e.length - 1]) return !0;
      var n, o;

      for (n = 0, o = t.skips.length; n < o; n++) {
        if (t.skips[n].test(e)) return !1;
      }

      for (n = 0, o = t.names.length; n < o; n++) {
        if (t.names[n].test(e)) return !0;
      }

      return !1;
    }, t.humanize = n(242), t.instances = [], t.names = [], t.skips = [], t.formatters = {};
  }, function (e, t) {
    var n = 1e3,
        o = 60 * n,
        i = 60 * o,
        r = 24 * i,
        s = 365.25 * r;

    function a(e, t, n) {
      if (!(e < t)) return e < 1.5 * t ? Math.floor(e / t) + " " + n : Math.ceil(e / t) + " " + n + "s";
    }

    e.exports = function (e, t) {
      t = t || {};
      var u,
          c = typeof e;
      if ("string" === c && e.length > 0) return function (e) {
        if ((e = String(e)).length > 100) return;
        var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);
        if (!t) return;
        var a = parseFloat(t[1]);

        switch ((t[2] || "ms").toLowerCase()) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return a * s;

          case "days":
          case "day":
          case "d":
            return a * r;

          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return a * i;

          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return a * o;

          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return a * n;

          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return a;

          default:
            return undefined;
        }
      }(e);
      if ("number" === c && !1 === isNaN(e)) return t["long"] ? a(u = e, r, "day") || a(u, i, "hour") || a(u, o, "minute") || a(u, n, "second") || u + " ms" : function (e) {
        if (e >= r) return Math.round(e / r) + "d";
        if (e >= i) return Math.round(e / i) + "h";
        if (e >= o) return Math.round(e / o) + "m";
        if (e >= n) return Math.round(e / n) + "s";
        return e + "ms";
      }(e);
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
    };
  }, function (e, t, n) {
    (function (o) {
      function i() {
        var e;

        try {
          e = t.storage.debug;
        } catch (n) {}

        return !e && void 0 !== o && "env" in o && (e = o.env.DEBUG), e;
      }

      (t = e.exports = n(244)).log = function () {
        return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
      }, t.formatArgs = function (e) {
        var n = this.useColors;
        if (e[0] = (n ? "%c" : "") + this.namespace + (n ? " %c" : " ") + e[0] + (n ? "%c " : " ") + "+" + t.humanize(this.diff), !n) return;
        var o = "color: " + this.color;
        e.splice(1, 0, o, "color: inherit");
        var i = 0,
            r = 0;
        e[0].replace(/%[a-zA-Z%]/g, function (e) {
          "%%" !== e && "%c" === e && (r = ++i);
        }), e.splice(r, 0, o);
      }, t.save = function (e) {
        try {
          null == e ? t.storage.removeItem("debug") : t.storage.debug = e;
        } catch (n) {}
      }, t.load = i, t.useColors = function () {
        if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return !0;
        if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
        return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
      }, t.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : function () {
        try {
          return window.localStorage;
        } catch (e) {}
      }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.formatters.j = function (e) {
        try {
          return JSON.stringify(e);
        } catch (t) {
          return "[UnexpectedJSONParseError]: " + t.message;
        }
      }, t.enable(i());
    }).call(t, n(73));
  }, function (e, t, n) {
    function o(e) {
      var n;

      function o() {
        if (o.enabled) {
          var e = o,
              i = +new Date(),
              r = i - (n || i);
          e.diff = r, e.prev = n, e.curr = i, n = i;

          for (var s = new Array(arguments.length), a = 0; a < s.length; a++) {
            s[a] = arguments[a];
          }

          s[0] = t.coerce(s[0]), "string" != typeof s[0] && s.unshift("%O");
          var u = 0;
          s[0] = s[0].replace(/%([a-zA-Z%])/g, function (n, o) {
            if ("%%" === n) return n;
            u++;
            var i = t.formatters[o];

            if ("function" == typeof i) {
              var r = s[u];
              n = i.call(e, r), s.splice(u, 1), u--;
            }

            return n;
          }), t.formatArgs.call(e, s), (o.log || t.log || console.log.bind(console)).apply(e, s);
        }
      }

      return o.namespace = e, o.enabled = t.enabled(e), o.useColors = t.useColors(), o.color = function (e) {
        var n,
            o = 0;

        for (n in e) {
          o = (o << 5) - o + e.charCodeAt(n), o |= 0;
        }

        return t.colors[Math.abs(o) % t.colors.length];
      }(e), o.destroy = i, "function" == typeof t.init && t.init(o), t.instances.push(o), o;
    }

    function i() {
      var e = t.instances.indexOf(this);
      return -1 !== e && (t.instances.splice(e, 1), !0);
    }

    (t = e.exports = o.debug = o["default"] = o).coerce = function (e) {
      return e instanceof Error ? e.stack || e.message : e;
    }, t.disable = function () {
      t.enable("");
    }, t.enable = function (e) {
      var n;
      t.save(e), t.names = [], t.skips = [];
      var o = ("string" == typeof e ? e : "").split(/[\s,]+/),
          i = o.length;

      for (n = 0; n < i; n++) {
        o[n] && ("-" === (e = o[n].replace(/\*/g, ".*?"))[0] ? t.skips.push(new RegExp("^" + e.substr(1) + "$")) : t.names.push(new RegExp("^" + e + "$")));
      }

      for (n = 0; n < t.instances.length; n++) {
        var r = t.instances[n];
        r.enabled = t.enabled(r.namespace);
      }
    }, t.enabled = function (e) {
      if ("*" === e[e.length - 1]) return !0;
      var n, o;

      for (n = 0, o = t.skips.length; n < o; n++) {
        if (t.skips[n].test(e)) return !1;
      }

      for (n = 0, o = t.names.length; n < o; n++) {
        if (t.names[n].test(e)) return !0;
      }

      return !1;
    }, t.humanize = n(245), t.instances = [], t.names = [], t.skips = [], t.formatters = {};
  }, function (e, t) {
    var n = 1e3,
        o = 60 * n,
        i = 60 * o,
        r = 24 * i,
        s = 365.25 * r;

    function a(e, t, n) {
      if (!(e < t)) return e < 1.5 * t ? Math.floor(e / t) + " " + n : Math.ceil(e / t) + " " + n + "s";
    }

    e.exports = function (e, t) {
      t = t || {};
      var u,
          c = typeof e;
      if ("string" === c && e.length > 0) return function (e) {
        if ((e = String(e)).length > 100) return;
        var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);
        if (!t) return;
        var a = parseFloat(t[1]);

        switch ((t[2] || "ms").toLowerCase()) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return a * s;

          case "days":
          case "day":
          case "d":
            return a * r;

          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return a * i;

          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return a * o;

          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return a * n;

          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return a;

          default:
            return undefined;
        }
      }(e);
      if ("number" === c && !1 === isNaN(e)) return t["long"] ? a(u = e, r, "day") || a(u, i, "hour") || a(u, o, "minute") || a(u, n, "second") || u + " ms" : function (e) {
        if (e >= r) return Math.round(e / r) + "d";
        if (e >= i) return Math.round(e / i) + "h";
        if (e >= o) return Math.round(e / o) + "m";
        if (e >= n) return Math.round(e / n) + "s";
        return e + "ms";
      }(e);
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
    };
  }, function (e, t, n) {
    function o(e) {
      if (e) return function (e) {
        for (var t in o.prototype) {
          e[t] = o.prototype[t];
        }

        return e;
      }(e);
    }

    e.exports = o, o.prototype.on = o.prototype.addEventListener = function (e, t) {
      return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this;
    }, o.prototype.once = function (e, t) {
      function n() {
        this.off(e, n), t.apply(this, arguments);
      }

      return n.fn = t, this.on(e, n), this;
    }, o.prototype.off = o.prototype.removeListener = o.prototype.removeAllListeners = o.prototype.removeEventListener = function (e, t) {
      if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
      var n,
          o = this._callbacks["$" + e];
      if (!o) return this;
      if (1 == arguments.length) return delete this._callbacks["$" + e], this;

      for (var i = 0; i < o.length; i++) {
        if ((n = o[i]) === t || n.fn === t) {
          o.splice(i, 1);
          break;
        }
      }

      return this;
    }, o.prototype.emit = function (e) {
      this._callbacks = this._callbacks || {};
      var t = [].slice.call(arguments, 1),
          n = this._callbacks["$" + e];
      if (n) for (var o = 0, i = (n = n.slice(0)).length; o < i; ++o) {
        n[o].apply(this, t);
      }
      return this;
    }, o.prototype.listeners = function (e) {
      return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || [];
    }, o.prototype.hasListeners = function (e) {
      return !!this.listeners(e).length;
    };
  }, function (e, t) {
    var n = {}.toString;

    e.exports = Array.isArray || function (e) {
      return "[object Array]" == n.call(e);
    };
  }, function (e, t, n) {
    "use strict";

    e.exports = n(249), e.exports.parser = n(34);
  }, function (e, t, n) {
    "use strict";

    var o = r(n(72)),
        i = r(n(20));

    function r(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var s = n(112),
        a = n(113),
        u = (n(78)("engine.io-client:socket"), n(265)),
        c = n(34),
        l = n(266),
        f = n(76);

    function d(e, t) {
      if (!(this instanceof d)) return new d(e, t);
      t = t || {}, e && "object" === (void 0 === e ? "undefined" : (0, i["default"])(e)) && (t = e, e = null), e ? (e = l(e), t.hostname = e.host, t.secure = "https" === e.protocol || "wss" === e.protocol, t.port = e.port, e.query && (t.query = e.query)) : t.host && (t.hostname = l(t.host).host), this.secure = null != t.secure ? t.secure : "undefined" != typeof location && "https:" === location.protocol, t.hostname && !t.port && (t.port = this.secure ? "443" : "80"), this.agent = t.agent || !1, this.hostname = t.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), this.port = t.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80), this.query = t.query || {}, "string" == typeof this.query && (this.query = f.decode(this.query)), this.upgrade = !1 !== t.upgrade, this.path = (t.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!t.forceJSONP, this.jsonp = !1 !== t.jsonp, this.forceBase64 = !!t.forceBase64, this.enablesXDR = !!t.enablesXDR, this.timestampParam = t.timestampParam || "t", this.timestampRequests = t.timestampRequests, this.transports = t.transports || ["polling", "websocket"], this.transportOptions = t.transportOptions || {}, this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = t.policyPort || 843, this.rememberUpgrade = t.rememberUpgrade || !1, this.binaryType = null, this.onlyBinaryUpgrades = t.onlyBinaryUpgrades, this.perMessageDeflate = !1 !== t.perMessageDeflate && (t.perMessageDeflate || {}), !0 === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = t.pfx || null, this.key = t.key || null, this.passphrase = t.passphrase || null, this.cert = t.cert || null, this.ca = t.ca || null, this.ciphers = t.ciphers || null, this.rejectUnauthorized = t.rejectUnauthorized === undefined || t.rejectUnauthorized, this.forceNode = !!t.forceNode, this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase(), ("undefined" == typeof self || this.isReactNative) && (t.extraHeaders && (0, o["default"])(t.extraHeaders).length > 0 && (this.extraHeaders = t.extraHeaders), t.localAddress && (this.localAddress = t.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, this.open();
    }

    e.exports = d, d.priorWebsocketSuccess = !1, a(d.prototype), d.protocol = c.protocol, d.Socket = d, d.Transport = n(75), d.transports = n(112), d.parser = n(34), d.prototype.createTransport = function (e) {
      var t = function (e) {
        var t = {};

        for (var n in e) {
          e.hasOwnProperty(n) && (t[n] = e[n]);
        }

        return t;
      }(this.query);

      t.EIO = c.protocol, t.transport = e;
      var n = this.transportOptions[e] || {};
      return this.id && (t.sid = this.id), new s[e]({
        query: t,
        socket: this,
        agent: n.agent || this.agent,
        hostname: n.hostname || this.hostname,
        port: n.port || this.port,
        secure: n.secure || this.secure,
        path: n.path || this.path,
        forceJSONP: n.forceJSONP || this.forceJSONP,
        jsonp: n.jsonp || this.jsonp,
        forceBase64: n.forceBase64 || this.forceBase64,
        enablesXDR: n.enablesXDR || this.enablesXDR,
        timestampRequests: n.timestampRequests || this.timestampRequests,
        timestampParam: n.timestampParam || this.timestampParam,
        policyPort: n.policyPort || this.policyPort,
        pfx: n.pfx || this.pfx,
        key: n.key || this.key,
        passphrase: n.passphrase || this.passphrase,
        cert: n.cert || this.cert,
        ca: n.ca || this.ca,
        ciphers: n.ciphers || this.ciphers,
        rejectUnauthorized: n.rejectUnauthorized || this.rejectUnauthorized,
        perMessageDeflate: n.perMessageDeflate || this.perMessageDeflate,
        extraHeaders: n.extraHeaders || this.extraHeaders,
        forceNode: n.forceNode || this.forceNode,
        localAddress: n.localAddress || this.localAddress,
        requestTimeout: n.requestTimeout || this.requestTimeout,
        protocols: n.protocols || void 0,
        isReactNative: this.isReactNative
      });
    }, d.prototype.open = function () {
      var e;
      if (this.rememberUpgrade && d.priorWebsocketSuccess && -1 !== this.transports.indexOf("websocket")) e = "websocket";else {
        if (0 === this.transports.length) {
          var t = this;
          return void setTimeout(function () {
            t.emit("error", "No transports available");
          }, 0);
        }

        e = this.transports[0];
      }
      this.readyState = "opening";

      try {
        e = this.createTransport(e);
      } catch (n) {
        return this.transports.shift(), void this.open();
      }

      e.open(), this.setTransport(e);
    }, d.prototype.setTransport = function (e) {
      e.name;
      var t = this;
      this.transport && (this.transport.name, this.transport.removeAllListeners()), this.transport = e, e.on("drain", function () {
        t.onDrain();
      }).on("packet", function (e) {
        t.onPacket(e);
      }).on("error", function (e) {
        t.onError(e);
      }).on("close", function () {
        t.onClose("transport close");
      });
    }, d.prototype.probe = function (e) {
      var t = this.createTransport(e, {
        probe: 1
      }),
          n = !1,
          o = this;

      function i() {
        if (o.onlyBinaryUpgrades) {
          var e = !this.supportsBinary && o.transport.supportsBinary;
          n = n || e;
        }

        n || (t.send([{
          type: "ping",
          data: "probe"
        }]), t.once("packet", function (e) {
          if (!n) if ("pong" === e.type && "probe" === e.data) {
            if (o.upgrading = !0, o.emit("upgrading", t), !t) return;
            d.priorWebsocketSuccess = "websocket" === t.name, o.transport.name, o.transport.pause(function () {
              n || "closed" !== o.readyState && (l(), o.setTransport(t), t.send([{
                type: "upgrade"
              }]), o.emit("upgrade", t), t = null, o.upgrading = !1, o.flush());
            });
          } else {
            var i = new Error("probe error");
            i.transport = t.name, o.emit("upgradeError", i);
          }
        }));
      }

      function r() {
        n || (n = !0, l(), t.close(), t = null);
      }

      function s(e) {
        var n = new Error("probe error: " + e);
        n.transport = t.name, r(), o.emit("upgradeError", n);
      }

      function a() {
        s("transport closed");
      }

      function u() {
        s("socket closed");
      }

      function c(e) {
        t && e.name !== t.name && (e.name, t.name, r());
      }

      function l() {
        t.removeListener("open", i), t.removeListener("error", s), t.removeListener("close", a), o.removeListener("close", u), o.removeListener("upgrading", c);
      }

      d.priorWebsocketSuccess = !1, t.once("open", i), t.once("error", s), t.once("close", a), this.once("close", u), this.once("upgrading", c), t.open();
    }, d.prototype.onOpen = function () {
      if (this.readyState = "open", d.priorWebsocketSuccess = "websocket" === this.transport.name, this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause) for (var e = 0, t = this.upgrades.length; e < t; e++) {
        this.probe(this.upgrades[e]);
      }
    }, d.prototype.onPacket = function (e) {
      if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch (e.type, e.data, this.emit("packet", e), this.emit("heartbeat"), e.type) {
        case "open":
          this.onHandshake(JSON.parse(e.data));
          break;

        case "pong":
          this.setPing(), this.emit("pong");
          break;

        case "error":
          var t = new Error("server error");
          t.code = e.data, this.onError(t);
          break;

        case "message":
          this.emit("data", e.data), this.emit("message", e.data);
      } else this.readyState;
    }, d.prototype.onHandshake = function (e) {
      this.emit("handshake", e), this.id = e.sid, this.transport.query.sid = e.sid, this.upgrades = this.filterUpgrades(e.upgrades), this.pingInterval = e.pingInterval, this.pingTimeout = e.pingTimeout, this.onOpen(), "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat));
    }, d.prototype.onHeartbeat = function (e) {
      clearTimeout(this.pingTimeoutTimer);
      var t = this;
      t.pingTimeoutTimer = setTimeout(function () {
        "closed" !== t.readyState && t.onClose("ping timeout");
      }, e || t.pingInterval + t.pingTimeout);
    }, d.prototype.setPing = function () {
      var e = this;
      clearTimeout(e.pingIntervalTimer), e.pingIntervalTimer = setTimeout(function () {
        e.pingTimeout, e.ping(), e.onHeartbeat(e.pingTimeout);
      }, e.pingInterval);
    }, d.prototype.ping = function () {
      var e = this;
      this.sendPacket("ping", function () {
        e.emit("ping");
      });
    }, d.prototype.onDrain = function () {
      this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush();
    }, d.prototype.flush = function () {
      "closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (this.writeBuffer.length, this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"));
    }, d.prototype.write = d.prototype.send = function (e, t, n) {
      return this.sendPacket("message", e, t, n), this;
    }, d.prototype.sendPacket = function (e, t, n, o) {
      if ("function" == typeof t && (o = t, t = undefined), "function" == typeof n && (o = n, n = null), "closing" !== this.readyState && "closed" !== this.readyState) {
        (n = n || {}).compress = !1 !== n.compress;
        var i = {
          type: e,
          data: t,
          options: n
        };
        this.emit("packetCreate", i), this.writeBuffer.push(i), o && this.once("flush", o), this.flush();
      }
    }, d.prototype.close = function () {
      if ("opening" === this.readyState || "open" === this.readyState) {
        this.readyState = "closing";
        var e = this;
        this.writeBuffer.length ? this.once("drain", function () {
          this.upgrading ? o() : t();
        }) : this.upgrading ? o() : t();
      }

      function t() {
        e.onClose("forced close"), e.transport.close();
      }

      function n() {
        e.removeListener("upgrade", n), e.removeListener("upgradeError", n), t();
      }

      function o() {
        e.once("upgrade", n), e.once("upgradeError", n);
      }

      return this;
    }, d.prototype.onError = function (e) {
      d.priorWebsocketSuccess = !1, this.emit("error", e), this.onClose("transport error", e);
    }, d.prototype.onClose = function (e, t) {
      if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
        clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", e, t), this.writeBuffer = [], this.prevBufferLen = 0;
      }
    }, d.prototype.filterUpgrades = function (e) {
      for (var t = [], n = 0, o = e.length; n < o; n++) {
        ~u(this.transports, e[n]) && t.push(e[n]);
      }

      return t;
    };
  }, function (e, t, n) {
    "use strict";

    (function (t) {
      var o = n(252),
          i = n(77);
      e.exports = l;
      var r,
          s = /\n/g,
          a = /\\n/g;

      function u() {}

      function c() {
        return "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== t ? t : {};
      }

      function l(e) {
        if (o.call(this, e), this.query = this.query || {}, !r) {
          var t = c();
          r = t.___eio = t.___eio || [];
        }

        this.index = r.length;
        var n = this;
        r.push(function (e) {
          n.onData(e);
        }), this.query.j = this.index, "function" == typeof addEventListener && addEventListener("beforeunload", function () {
          n.script && (n.script.onerror = u);
        }, !1);
      }

      i(l, o), l.prototype.supportsBinary = !1, l.prototype.doClose = function () {
        this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), o.prototype.doClose.call(this);
      }, l.prototype.doPoll = function () {
        var e = this,
            t = document.createElement("script");
        this.script && (this.script.parentNode.removeChild(this.script), this.script = null), t.async = !0, t.src = this.uri(), t.onerror = function (t) {
          e.onError("jsonp poll error", t);
        };
        var n = document.getElementsByTagName("script")[0];
        n ? n.parentNode.insertBefore(t, n) : (document.head || document.body).appendChild(t), this.script = t, "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent) && setTimeout(function () {
          var e = document.createElement("iframe");
          document.body.appendChild(e), document.body.removeChild(e);
        }, 100);
      }, l.prototype.doWrite = function (e, t) {
        var n = this;

        if (!this.form) {
          var o,
              i = document.createElement("form"),
              r = document.createElement("textarea"),
              u = this.iframeId = "eio_iframe_" + this.index;
          i.className = "socketio", i.style.position = "absolute", i.style.top = "-1000px", i.style.left = "-1000px", i.target = u, i.method = "POST", i.setAttribute("accept-charset", "utf-8"), r.name = "d", i.appendChild(r), document.body.appendChild(i), this.form = i, this.area = r;
        }

        function c() {
          l(), t();
        }

        function l() {
          if (n.iframe) try {
            n.form.removeChild(n.iframe);
          } catch (t) {
            n.onError("jsonp polling iframe removal error", t);
          }

          try {
            var e = '<iframe src="javascript:0" name="' + n.iframeId + '">';
            o = document.createElement(e);
          } catch (t) {
            (o = document.createElement("iframe")).name = n.iframeId, o.src = "javascript:0";
          }

          o.id = n.iframeId, n.form.appendChild(o), n.iframe = o;
        }

        this.form.action = this.uri(), l(), e = e.replace(a, "\\\n"), this.area.value = e.replace(s, "\\n");

        try {
          this.form.submit();
        } catch (f) {}

        this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {
          "complete" === n.iframe.readyState && c();
        } : this.iframe.onload = c;
      };
    }).call(t, n(251));
  }, function (e, t) {
    var n;

    n = function () {
      return this;
    }();

    try {
      n = n || Function("return this")() || (0, eval)("this");
    } catch (o) {
      "object" == typeof window && (n = window);
    }

    e.exports = n;
  }, function (e, t, n) {
    "use strict";

    var o = n(75),
        i = n(76),
        r = n(34),
        s = n(77),
        a = n(114);
    n(78)("engine.io-client:polling");
    e.exports = c;
    var u = null != new (n(261))({
      xdomain: !1
    }).responseType;

    function c(e) {
      var t = e && e.forceBase64;
      u && !t || (this.supportsBinary = !1), o.call(this, e);
    }

    s(c, o), c.prototype.name = "polling", c.prototype.doOpen = function () {
      this.poll();
    }, c.prototype.pause = function (e) {
      var t = this;

      function n() {
        t.readyState = "paused", e();
      }

      if (this.readyState = "pausing", this.polling || !this.writable) {
        var o = 0;
        this.polling && (o++, this.once("pollComplete", function () {
          --o || n();
        })), this.writable || (o++, this.once("drain", function () {
          --o || n();
        }));
      } else n();
    }, c.prototype.poll = function () {
      this.polling = !0, this.doPoll(), this.emit("poll");
    }, c.prototype.onData = function (e) {
      var t = this;
      r.decodePayload(e, this.socket.binaryType, function (e, n, o) {
        if ("opening" === t.readyState && t.onOpen(), "close" === e.type) return t.onClose(), !1;
        t.onPacket(e);
      }), "closed" !== this.readyState && (this.polling = !1, this.emit("pollComplete"), "open" === this.readyState ? this.poll() : this.readyState);
    }, c.prototype.doClose = function () {
      var e = this;

      function t() {
        e.write([{
          type: "close"
        }]);
      }

      "open" === this.readyState ? t() : this.once("open", t);
    }, c.prototype.write = function (e) {
      var t = this;
      this.writable = !1;

      var n = function n() {
        t.writable = !0, t.emit("drain");
      };

      r.encodePayload(e, this.supportsBinary, function (e) {
        t.doWrite(e, n);
      });
    }, c.prototype.uri = function () {
      var e = this.query || {},
          t = this.secure ? "https" : "http",
          n = "";
      return !1 !== this.timestampRequests && (e[this.timestampParam] = a()), this.supportsBinary || e.sid || (e.b64 = 1), e = i.encode(e), this.port && ("https" === t && 443 !== Number(this.port) || "http" === t && 80 !== Number(this.port)) && (n = ":" + this.port), e.length && (e = "?" + e), t + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + n + this.path + e;
    };
  }, function (e, t, n) {
    "use strict";

    var o,
        i = n(72),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };

    e.exports = r["default"] || function (e) {
      var t = [],
          n = Object.prototype.hasOwnProperty;

      for (var o in e) {
        n.call(e, o) && t.push(o);
      }

      return t;
    };
  }, function (e, t, n) {
    var o = n(255),
        i = Object.prototype.toString,
        r = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === i.call(Blob),
        s = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === i.call(File);

    e.exports = function a(e) {
      if (!e || "object" != typeof e) return !1;

      if (o(e)) {
        for (var t = 0, n = e.length; t < n; t++) {
          if (a(e[t])) return !0;
        }

        return !1;
      }

      if ("function" == typeof Buffer && Buffer.isBuffer && Buffer.isBuffer(e) || "function" == typeof ArrayBuffer && e instanceof ArrayBuffer || r && e instanceof Blob || s && e instanceof File) return !0;
      if (e.toJSON && "function" == typeof e.toJSON && 1 === arguments.length) return a(e.toJSON(), !0);

      for (var i in e) {
        if (Object.prototype.hasOwnProperty.call(e, i) && a(e[i])) return !0;
      }

      return !1;
    };
  }, function (e, t) {
    var n = {}.toString;

    e.exports = Array.isArray || function (e) {
      return "[object Array]" == n.call(e);
    };
  }, function (e, t) {
    function n() {}

    e.exports = function (e, t, o) {
      var i = !1;
      return o = o || n, r.count = e, 0 === e ? t() : r;

      function r(e, n) {
        if (r.count <= 0) throw new Error("after called too many times");
        --r.count, e ? (i = !0, t(e), t = o) : 0 !== r.count || i || t(null, n);
      }
    };
  }, function (e, t, n) {
    "use strict";
    /*! https://mths.be/utf8js v2.1.2 by @mathias */

    var o,
        i,
        r,
        s = String.fromCharCode;

    function a(e) {
      for (var t, n, o = [], i = 0, r = e.length; i < r;) {
        (t = e.charCodeAt(i++)) >= 55296 && t <= 56319 && i < r ? 56320 == (64512 & (n = e.charCodeAt(i++))) ? o.push(((1023 & t) << 10) + (1023 & n) + 65536) : (o.push(t), i--) : o.push(t);
      }

      return o;
    }

    function u(e, t) {
      if (e >= 55296 && e <= 57343) {
        if (t) throw Error("Lone surrogate U+" + e.toString(16).toUpperCase() + " is not a scalar value");
        return !1;
      }

      return !0;
    }

    function c(e, t) {
      return s(e >> t & 63 | 128);
    }

    function l(e, t) {
      if (0 == (4294967168 & e)) return s(e);
      var n = "";
      return 0 == (4294965248 & e) ? n = s(e >> 6 & 31 | 192) : 0 == (4294901760 & e) ? (u(e, t) || (e = 65533), n = s(e >> 12 & 15 | 224), n += c(e, 6)) : 0 == (4292870144 & e) && (n = s(e >> 18 & 7 | 240), n += c(e, 12), n += c(e, 6)), n += s(63 & e | 128);
    }

    function f() {
      if (r >= i) throw Error("Invalid byte index");
      var e = 255 & o[r];
      if (r++, 128 == (192 & e)) return 63 & e;
      throw Error("Invalid continuation byte");
    }

    function d(e) {
      var t, n;
      if (r > i) throw Error("Invalid byte index");
      if (r == i) return !1;
      if (t = 255 & o[r], r++, 0 == (128 & t)) return t;

      if (192 == (224 & t)) {
        if ((n = (31 & t) << 6 | f()) >= 128) return n;
        throw Error("Invalid continuation byte");
      }

      if (224 == (240 & t)) {
        if ((n = (15 & t) << 12 | f() << 6 | f()) >= 2048) return u(n, e) ? n : 65533;
        throw Error("Invalid continuation byte");
      }

      if (240 == (248 & t) && (n = (7 & t) << 18 | f() << 12 | f() << 6 | f()) >= 65536 && n <= 1114111) return n;
      throw Error("Invalid UTF-8 detected");
    }

    e.exports = {
      version: "2.1.2",
      encode: function encode(e, t) {
        for (var n = !1 !== (t = t || {}).strict, o = a(e), i = o.length, r = -1, s = ""; ++r < i;) {
          s += l(o[r], n);
        }

        return s;
      },
      decode: function decode(e, t) {
        var n = !1 !== (t = t || {}).strict;
        o = a(e), i = o.length, r = 0;

        for (var u, c = []; !1 !== (u = d(n));) {
          c.push(u);
        }

        return function (e) {
          for (var t, n = e.length, o = -1, i = ""; ++o < n;) {
            (t = e[o]) > 65535 && (i += s((t -= 65536) >>> 10 & 1023 | 55296), t = 56320 | 1023 & t), i += s(t);
          }

          return i;
        }(c);
      }
    };
  }, function (e, t) {
    var n = void 0 !== n ? n : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder,
        o = function () {
      try {
        return 2 === new Blob(["hi"]).size;
      } catch (e) {
        return !1;
      }
    }(),
        i = o && function () {
      try {
        return 2 === new Blob([new Uint8Array([1, 2])]).size;
      } catch (e) {
        return !1;
      }
    }(),
        r = n && n.prototype.append && n.prototype.getBlob;

    function s(e) {
      return e.map(function (e) {
        if (e.buffer instanceof ArrayBuffer) {
          var t = e.buffer;

          if (e.byteLength !== t.byteLength) {
            var n = new Uint8Array(e.byteLength);
            n.set(new Uint8Array(t, e.byteOffset, e.byteLength)), t = n.buffer;
          }

          return t;
        }

        return e;
      });
    }

    function a(e, t) {
      t = t || {};
      var o = new n();
      return s(e).forEach(function (e) {
        o.append(e);
      }), t.type ? o.getBlob(t.type) : o.getBlob();
    }

    function u(e, t) {
      return new Blob(s(e), t || {});
    }

    "undefined" != typeof Blob && (a.prototype = Blob.prototype, u.prototype = Blob.prototype), e.exports = o ? i ? Blob : u : r ? a : undefined;
  }, function (e, t, n) {
    function o(e) {
      var n;

      function o() {
        if (o.enabled) {
          var e = o,
              i = +new Date(),
              r = i - (n || i);
          e.diff = r, e.prev = n, e.curr = i, n = i;

          for (var s = new Array(arguments.length), a = 0; a < s.length; a++) {
            s[a] = arguments[a];
          }

          s[0] = t.coerce(s[0]), "string" != typeof s[0] && s.unshift("%O");
          var u = 0;
          s[0] = s[0].replace(/%([a-zA-Z%])/g, function (n, o) {
            if ("%%" === n) return n;
            u++;
            var i = t.formatters[o];

            if ("function" == typeof i) {
              var r = s[u];
              n = i.call(e, r), s.splice(u, 1), u--;
            }

            return n;
          }), t.formatArgs.call(e, s), (o.log || t.log || console.log.bind(console)).apply(e, s);
        }
      }

      return o.namespace = e, o.enabled = t.enabled(e), o.useColors = t.useColors(), o.color = function (e) {
        var n,
            o = 0;

        for (n in e) {
          o = (o << 5) - o + e.charCodeAt(n), o |= 0;
        }

        return t.colors[Math.abs(o) % t.colors.length];
      }(e), o.destroy = i, "function" == typeof t.init && t.init(o), t.instances.push(o), o;
    }

    function i() {
      var e = t.instances.indexOf(this);
      return -1 !== e && (t.instances.splice(e, 1), !0);
    }

    (t = e.exports = o.debug = o["default"] = o).coerce = function (e) {
      return e instanceof Error ? e.stack || e.message : e;
    }, t.disable = function () {
      t.enable("");
    }, t.enable = function (e) {
      var n;
      t.save(e), t.names = [], t.skips = [];
      var o = ("string" == typeof e ? e : "").split(/[\s,]+/),
          i = o.length;

      for (n = 0; n < i; n++) {
        o[n] && ("-" === (e = o[n].replace(/\*/g, ".*?"))[0] ? t.skips.push(new RegExp("^" + e.substr(1) + "$")) : t.names.push(new RegExp("^" + e + "$")));
      }

      for (n = 0; n < t.instances.length; n++) {
        var r = t.instances[n];
        r.enabled = t.enabled(r.namespace);
      }
    }, t.enabled = function (e) {
      if ("*" === e[e.length - 1]) return !0;
      var n, o;

      for (n = 0, o = t.skips.length; n < o; n++) {
        if (t.skips[n].test(e)) return !1;
      }

      for (n = 0, o = t.names.length; n < o; n++) {
        if (t.names[n].test(e)) return !0;
      }

      return !1;
    }, t.humanize = n(260), t.instances = [], t.names = [], t.skips = [], t.formatters = {};
  }, function (e, t) {
    var n = 1e3,
        o = 60 * n,
        i = 60 * o,
        r = 24 * i,
        s = 365.25 * r;

    function a(e, t, n) {
      if (!(e < t)) return e < 1.5 * t ? Math.floor(e / t) + " " + n : Math.ceil(e / t) + " " + n + "s";
    }

    e.exports = function (e, t) {
      t = t || {};
      var u,
          c = typeof e;
      if ("string" === c && e.length > 0) return function (e) {
        if ((e = String(e)).length > 100) return;
        var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);
        if (!t) return;
        var a = parseFloat(t[1]);

        switch ((t[2] || "ms").toLowerCase()) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return a * s;

          case "days":
          case "day":
          case "d":
            return a * r;

          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return a * i;

          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return a * o;

          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return a * n;

          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return a;

          default:
            return undefined;
        }
      }(e);
      if ("number" === c && !1 === isNaN(e)) return t["long"] ? a(u = e, r, "day") || a(u, i, "hour") || a(u, o, "minute") || a(u, n, "second") || u + " ms" : function (e) {
        if (e >= r) return Math.round(e / r) + "d";
        if (e >= i) return Math.round(e / i) + "h";
        if (e >= o) return Math.round(e / o) + "m";
        if (e >= n) return Math.round(e / n) + "s";
        return e + "ms";
      }(e);
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
    };
  }, function (e, t, n) {
    "use strict";

    var o = n(262);

    e.exports = function (e) {
      var t = e.xdomain,
          n = e.xscheme,
          i = e.enablesXDR;

      try {
        if ("undefined" != typeof XMLHttpRequest && (!t || o)) return new XMLHttpRequest();
      } catch (r) {}

      try {
        if ("undefined" != typeof XDomainRequest && !n && i) return new XDomainRequest();
      } catch (r) {}

      if (!t) try {
        return new self[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
      } catch (r) {}
    };
  }, function (e, t) {
    try {
      e.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest();
    } catch (n) {
      e.exports = !1;
    }
  }, function (e, t, n) {
    "use strict";

    var o,
        i = n(20),
        r = (o = i) && o.__esModule ? o : {
      "default": o
    };
    var s,
        a,
        u = n(75),
        c = n(34),
        l = n(76),
        f = n(77),
        d = n(114);
    n(78)("engine.io-client:websocket");
    if ("undefined" == typeof uni && "undefined" == typeof wx || "undefined" != typeof WebSocket) if ("undefined" != typeof WebSocket) s = WebSocket;else if ("undefined" != typeof self) s = self.WebSocket || self.MozWebSocket;else try {
      a = n(264);
    } catch (y) {}
    var p = s || a;

    function h(e) {
      e && e.forceBase64 && (this.supportsBinary = !1), ("undefined" == typeof uni && "undefined" == typeof wx || "undefined" != typeof WebSocket) && (this.perMessageDeflate = e.perMessageDeflate, this.usingBrowserWebSocket = s && !e.forceNode, this.protocols = e.protocols, this.usingBrowserWebSocket || (p = a)), u.call(this, e);
    }

    "undefined" == typeof uni && "undefined" == typeof wx || "undefined" != typeof WebSocket || (p = function p(e) {
      var t = this;

      if (t.onopen = function () {}, t.onclose = function () {}, t.onmessage = function (e) {}, t.onerror = function (e) {}, "object" === ("undefined" == typeof tt ? "undefined" : (0, r["default"])(tt)) && tt.getSystemInfo) {
        var n = tt.connectSocket({
          url: e
        });
        t.send = function (e) {
          n.send({
            data: e
          });
        }, t.close = function () {
          n.close();
        }, n.onOpen(function () {
          t.onopen();
        }), n.onError(function (e) {
          t.onerror(e);
        }), n.onMessage(function (e) {
          t.onmessage(e);
        }), n.onClose(function () {
          t.onclose();
        });
      } else "undefined" != typeof uni ? (t.send = function (e) {
        uni.sendSocketMessage({
          data: e
        });
      }, t.close = function () {
        uni.closeSocket();
      }, uni.onSocketOpen(function (e) {
        t.onopen();
      }), uni.onSocketError(function (e) {
        t.onerror(e);
      }), uni.onSocketMessage(function (e) {
        t.onmessage(e);
      }), uni.onSocketClose(function (e) {
        t.onclose();
      }), uni.connectSocket({
        url: e
      })) : (t.send = function (e) {
        wx.sendSocketMessage({
          data: e
        });
      }, t.close = function () {
        wx.closeSocket();
      }, wx.onSocketOpen(function (e) {
        t.onopen();
      }), wx.onSocketError(function (e) {
        t.onerror(e);
      }), wx.onSocketMessage(function (e) {
        t.onmessage(e);
      }), wx.onSocketClose(function (e) {
        t.onclose();
      }), wx.connectSocket({
        url: e
      }));
    }), e.exports = h, f(h, u), h.prototype.name = "websocket", h.prototype.supportsBinary = !1, h.prototype.doOpen = function () {
      if (this.check()) {
        var e,
            t,
            n = this.uri();
        ("undefined" == typeof uni && "undefined" == typeof wx || "undefined" != typeof WebSocket) && (e = this.protocols), (t = "undefined" == typeof uni && "undefined" == typeof wx || "undefined" != typeof WebSocket ? {
          agent: this.agent,
          perMessageDeflate: this.perMessageDeflate
        } : {
          agent: this.agent
        }).pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (t.headers = this.extraHeaders), this.localAddress && (t.localAddress = this.localAddress);

        try {
          "undefined" == typeof uni && "undefined" == typeof wx || "undefined" != typeof WebSocket ? this.ws = this.usingBrowserWebSocket && !this.isReactNative ? e ? new p(n, e) : new p(n) : new p(n, e, t) : this.ws = new p(n);
        } catch (o) {
          return this.emit("error", o);
        }

        this.ws.binaryType === undefined && (this.supportsBinary = !1), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners();
      }
    }, h.prototype.addEventListeners = function () {
      var e = this;
      this.ws.onopen = function () {
        e.onOpen();
      }, this.ws.onclose = function () {
        e.onClose();
      }, this.ws.onmessage = function (t) {
        e.onData(t.data);
      }, this.ws.onerror = function (t) {
        e.onError("websocket error", t);
      };
    }, h.prototype.write = function (e) {
      var t = this;
      this.writable = !1;

      for (var n = e.length, o = 0, i = n; o < i; o++) {
        !function (e) {
          c.encodePacket(e, t.supportsBinary, function (o) {
            if ("undefined" == typeof uni && "undefined" == typeof wx || "undefined" != typeof WebSocket) {
              if (!t.usingBrowserWebSocket) {
                var i = {};
                if (e.options && (i.compress = e.options.compress), t.perMessageDeflate) ("string" == typeof o ? Buffer.byteLength(o) : o.length) < t.perMessageDeflate.threshold && (i.compress = !1);
              }

              try {
                t.usingBrowserWebSocket ? t.ws.send(o) : t.ws.send(o, i);
              } catch (y) {}
            } else try {
              t.ws.send(o);
            } catch (y) {}

            --n || r();
          });
        }(e[o]);
      }

      function r() {
        t.emit("flush"), setTimeout(function () {
          t.writable = !0, t.emit("drain");
        }, 0);
      }
    }, h.prototype.onClose = function () {
      u.prototype.onClose.call(this);
    }, h.prototype.doClose = function () {
      "undefined" != typeof this.ws && this.ws.close();
    }, h.prototype.uri = function () {
      var e = this.query || {},
          t = this.secure ? "wss" : "ws",
          n = "";
      return this.port && ("wss" === t && 443 !== Number(this.port) || "ws" === t && 80 !== Number(this.port)) && (n = ":" + this.port), this.timestampRequests && (e[this.timestampParam] = d()), this.supportsBinary || (e.b64 = 1), (e = l.encode(e)).length && (e = "?" + e), t + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + n + this.path + e;
    }, h.prototype.check = function () {
      return !(!p || "__initialize" in p && this.name === h.prototype.name);
    };
  }, function (e, t) {}, function (e, t) {
    var n = [].indexOf;

    e.exports = function (e, t) {
      if (n) return e.indexOf(t);

      for (var o = 0; o < e.length; ++o) {
        if (e[o] === t) return o;
      }

      return -1;
    };
  }, function (e, t) {
    var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
        o = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];

    e.exports = function (e) {
      var t = e,
          i = e.indexOf("["),
          r = e.indexOf("]");
      -1 != i && -1 != r && (e = e.substring(0, i) + e.substring(i, r).replace(/:/g, ";") + e.substring(r, e.length));

      for (var s = n.exec(e || ""), a = {}, u = 14; u--;) {
        a[o[u]] = s[u] || "";
      }

      return -1 != i && -1 != r && (a.source = t, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = !0), a;
    };
  }, function (e, t) {
    e.exports = function (e, t) {
      for (var n = [], o = (t = t || 0) || 0; o < e.length; o++) {
        n[o - t] = e[o];
      }

      return n;
    };
  }, function (e, t) {
    t.encode = function (e) {
      var t = "";

      for (var n in e) {
        e.hasOwnProperty(n) && (t.length && (t += "&"), t += encodeURIComponent(n) + "=" + encodeURIComponent(e[n]));
      }

      return t;
    }, t.decode = function (e) {
      for (var t = {}, n = e.split("&"), o = 0, i = n.length; o < i; o++) {
        var r = n[o].split("=");
        t[decodeURIComponent(r[0])] = decodeURIComponent(r[1]);
      }

      return t;
    };
  }, function (e, t, n) {
    var o = n(270),
        i = Object.prototype.toString,
        r = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === i.call(Blob),
        s = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === i.call(File);

    e.exports = function a(e) {
      if (!e || "object" != typeof e) return !1;

      if (o(e)) {
        for (var t = 0, n = e.length; t < n; t++) {
          if (a(e[t])) return !0;
        }

        return !1;
      }

      if ("function" == typeof Buffer && Buffer.isBuffer && Buffer.isBuffer(e) || "function" == typeof ArrayBuffer && e instanceof ArrayBuffer || r && e instanceof Blob || s && e instanceof File) return !0;
      if (e.toJSON && "function" == typeof e.toJSON && 1 === arguments.length) return a(e.toJSON(), !0);

      for (var i in e) {
        if (Object.prototype.hasOwnProperty.call(e, i) && a(e[i])) return !0;
      }

      return !1;
    };
  }, function (e, t) {
    var n = {}.toString;

    e.exports = Array.isArray || function (e) {
      return "[object Array]" == n.call(e);
    };
  }, function (e, t) {
    var n = [].indexOf;

    e.exports = function (e, t) {
      if (n) return e.indexOf(t);

      for (var o = 0; o < e.length; ++o) {
        if (e[o] === t) return o;
      }

      return -1;
    };
  }, function (e, t) {
    function n(e) {
      e = e || {}, this.ms = e.min || 100, this.max = e.max || 1e4, this.factor = e.factor || 2, this.jitter = e.jitter > 0 && e.jitter <= 1 ? e.jitter : 0, this.attempts = 0;
    }

    e.exports = n, n.prototype.duration = function () {
      var e = this.ms * Math.pow(this.factor, this.attempts++);

      if (this.jitter) {
        var t = Math.random(),
            n = Math.floor(t * this.jitter * e);
        e = 0 == (1 & Math.floor(10 * t)) ? e - n : e + n;
      }

      return 0 | Math.min(e, this.max);
    }, n.prototype.reset = function () {
      this.attempts = 0;
    }, n.prototype.setMin = function (e) {
      this.ms = e;
    }, n.prototype.setMax = function (e) {
      this.max = e;
    }, n.prototype.setJitter = function (e) {
      this.jitter = e;
    };
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = f(n(3)),
        i = f(n(0)),
        r = f(n(1)),
        s = f(n(4)),
        a = f(n(12)),
        u = f(n(5)),
        c = f(n(110)),
        l = f(n(28));

    function f(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var d = function (e) {
      function t(e) {
        (0, i["default"])(this, t);
        var n = (0, s["default"])(this, (t.__proto__ || (0, o["default"])(t)).call(this));
        return n.reconnectingObservers = [], n.addReconnectingObserver(e.onReconnecting), n.addDisconnectedObserver(e.onDisconnected), n;
      }

      return (0, u["default"])(t, e), (0, r["default"])(t, [{
        key: "connect",
        value: function value(e) {
          (0, a["default"])(t.prototype.__proto__ || (0, o["default"])(t.prototype), "connect", this).call(this), this.io = this.io.connect(e.uri, e.opts), this.initListener();
        }
      }, {
        key: "doEmit",
        value: function value(e, t, n) {
          this.io.emit(e, t, n);
        }
      }, {
        key: "initListener",
        value: function value() {
          var e = this;
          this.io.on("reconnecting", function (t) {
            e.status = l["default"].CONNECTING, e.notify(e.reconnectingObservers, t);
          }), this.io.on("connect", function () {
            e.status = l["default"].CONNECTED, e.notify(e.connectedObservers);
          }), this.io.on("disconnect", function () {
            e.status = l["default"].DISCONNECTED, e.notify(e.disconnectedObservers);
          }), this.io.on("connect_error", function (e) {});
        }
      }, {
        key: "addReconnectingObserver",
        value: function value(e) {
          this.reconnectingObservers.push(e);
        }
      }]), t;
    }(c["default"]);

    t["default"] = d;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = s(n(0)),
        i = s(n(1)),
        r = n(2);

    function s(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var a = function () {
      function e(t) {
        (0, o["default"])(this, e), this.callback = r.noop, this.guidList = [], this.callback = t;
      }

      return (0, i["default"])(e, [{
        key: "onMessage",
        value: function value(e, t) {
          "string" == typeof t && (t = JSON.parse(t)), this.guidList.findIndex(function (e) {
            return e === t.i;
          }) > -1 || (this.guidList.unshift(t.i), this.guidList.length > 300 && this.guidList.pop(), this.callback(t));
        }
      }]), e;
    }();

    t["default"] = a;
  }, function (e, t, n) {
    "use strict";

    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var o = c(n(33)),
        i = c(n(6)),
        r = c(n(0)),
        s = c(n(1)),
        a = n(2),
        u = n(119);

    function c(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }

    var l = function () {
      function e(t) {
        (0, r["default"])(this, e), this.goEasySocket = null, this.goEasySocket = t, this.support() && (this.GoEasyUniapp = uni.requireNativePlugin("GoEasy-Uniapp"), t.addMessageObserver("imMessage", this.onNewMessageReceived.bind(this)), t.addMessageObserver("message", this.onNewMessageReceived.bind(this)));
      }

      return (0, s["default"])(e, [{
        key: "onNewMessageReceived",
        value: function value(e) {
          this.createLocalNotification(e);
        }
      }, {
        key: "createLocalNotification",
        value: function value(e) {
          if (a.calibrator.isObject(e.nt) && !0 === u.uniApp.runningBackend()) {
            var t = e.nt.t,
                n = e.nt.c;
            this.GoEasyUniapp ? this.GoEasyUniapp.createLocalNotification(t, n) : plus.push.createMessage(n, null, {
              title: t
            });
          }
        }
      }, {
        key: "getRegId",
        value: function value() {
          var e = this;
          return new i["default"](function (t, n) {
            try {
              e.GoEasyUniapp ? e.GoEasyUniapp.regId(function (e) {
                t(e);
              }, function (n) {
                if (1e6 == n.data.code) var i = setInterval(function () {
                  e.GoEasyUniapp.regId(function (e) {
                    clearInterval(i), t(e);
                  }, function (e) {
                    1e6 != e.data.code && (clearInterval(i), console.error("注册厂商通道失败：" + (0, o["default"])(e)), t());
                  });
                }, 5e3);else console.error("注册厂商通道失败：" + (0, o["default"])(n)), t();
              }) : (console.error("注册厂商通道失败：GoEasy-Uniapp is not installed correctly"), t());
            } catch (i) {
              console.error("注册厂商通道失败：" + (0, o["default"])(i)), t();
            }
          });
        }
      }, {
        key: "support",
        value: function value() {
          return a.env.isUni() && !0 === this.goEasySocket.allowNotification && a.env.isSupportHtmlPlus() && !a.env.isBrowserClient();
        }
      }]), e;
    }();

    t["default"] = l;
  }, function (e, t) {
    e.exports = {
      name: "goeasy",
      version: "2.0.12",
      description: "goeasy socket",
      keywords: ["realtime", "framework", "websocket", "tcp", "events", "client"],
      files: ["dist/"],
      main: "dist/goeasy.min.js",
      scripts: {
        build: "npm run build-goeasy",
        "build-snapshot": "npm run build-goeasy && npm run build-goeasy-dev",
        "build-goeasy": "./node_modules/.bin/webpack --config build/webpack.goeasy.config.js",
        "build-goeasy-dev": "./node_modules/.bin/webpack --config build/webpack.goeasy-dev.config.js",
        "start:dev": "webpack-dev-server --open --progress --config build/webpack.serve.config.js"
      },
      license: "MIT",
      dependencies: {
        "socket.io-client-goeasy": "./dependencies/socket.io-client-goeasy"
      },
      devDependencies: {
        "babel-core": "^6.26.3",
        "babel-loader": "^7.1.4",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-runtime": "^6.23.0",
        "babel-preset-env": "^1.7.0",
        "babel-runtime": "^6.26.0",
        "core-js": "^3.11.3",
        "es3ify-loader": "^0.2.0",
        "html-webpack-plugin": "^3.2.0",
        "strip-loader": "^0.1.2",
        "uglifyjs-webpack-plugin": "^1.3.0",
        uuid: "^3.3.2",
        webpack: "^3.12.0",
        "webpack-dev-server": "^2.11.5"
      }
    };
  }]);
});

cc._RF.pop();

}).call(this,require("buffer").Buffer)
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/5_lottery/程式/Host1_ComboBox.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c10feOZfKlIu4q7VKCG/Htl', 'Host1_ComboBox');
// 5_lottery/程式/Host1_ComboBox.js

"use strict";

var gameModel = require("Model");

var weel_js = require("weel");

var jiugongge_js = require("Jiugongge");

cc.Class({
  "extends": cc.Component,
  properties: {
    FirstOption: {
      "default": null,
      type: cc.Button
    },
    MainMode: {
      "default": null,
      type: cc.Label
    },
    Rule: {
      "default": null,
      type: cc.Label
    },
    OptionsBox: {
      "default": null,
      type: cc.Node
    },
    Winner_scroll: {
      "default": null,
      type: cc.Node
    },
    Prize_scroll: {
      "default": null,
      type: cc.Node
    },
    Mainobject: {
      "default": null,
      type: cc.Node
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    if (gameModel.game_type == "turntable") this.Weel_js = cc.find("畫布").getComponent(weel_js);else if (gameModel.game_type == "jiugongge") this.jiugongge_js = cc.find("畫布").getComponent(jiugongge_js);
  },
  start: function start() {
    gameModel.WebSocket_GameStatus_Host("close", 0.1);
    this.ChooseColor = this.FirstOption.normalColor; //淺藍色

    this.NormalColor = this.FirstOption.disabledColor; //灰色

    this.HoverColor = this.FirstOption.pressedColor; //白色

    this.lastChoose = this.FirstOption;
    this.BoxStatus = "close";
  },
  OptionBoxFuc: function OptionBoxFuc(event, customEventData) {
    if (customEventData == "controlBox") this.schedule(this.ProgressBar, 0.01);else {
      if (customEventData.includes("幸運輪盤")) {
        this.Weel_js.wheelState = 0;
        this.Mainobject.stopAllActions();
        this.Mainobject.rotation = 0;
      } else this.jiugongge_js.ClearStatus();

      gameModel.mode = customEventData.includes("順序參與") ? "order" : "simultaneous";
      this.Winner_scroll.active = customEventData.includes("順序參與") ? false : true;
      this.Prize_scroll.active = customEventData.includes("順序參與") ? true : false;

      if (customEventData.includes("同時參與")) {
        if (customEventData.includes("幸運輪盤")) this.aniSlow_In();else this.jiugongge_js.TogetherAni();
        gameModel.WebSocket_GameStatus_Host("open", 0.1);
      } else gameModel.WebSocket_GameStatus_Host("close", 0.1);

      this.MainMode.string = customEventData;
      this.Rule.string = customEventData.includes("順序參與") ? "參加者依序上台抽獎，並會在現場發放獎品" : "參加者掃QRC，會發放抽獎次數，將在各自的手機上抽獎";
      this.lastChoose.normalColor = this.NormalColor;
      this.lastChoose.hoverColor = this.HoverColor;
      event.target.getComponent(cc.Button).normalColor = event.target.getComponent(cc.Button).hoverColor = this.ChooseColor;
      this.lastChoose = event.target.getComponent(cc.Button);
      this.schedule(this.ProgressBar, 0.01);
    }
  },
  ProgressBar: function ProgressBar() {
    if (this.BoxStatus == "close") {
      this.OptionsBox.active = true;
      this.OptionsBox.getComponent(cc.Sprite).fillRange -= 0.2;

      if (this.OptionsBox.getComponent(cc.Sprite).fillRange <= -1) {
        this.unschedule(this.ProgressBar);
        this.BoxStatus = "open";
      }
    } else {
      this.OptionsBox.getComponent(cc.Sprite).fillRange += 0.2;

      if (this.OptionsBox.getComponent(cc.Sprite).fillRange >= 0) {
        this.unschedule(this.ProgressBar);
        this.OptionsBox.active = false;
        this.BoxStatus = "close";
      }
    }
  },
  aniSlow_In: function aniSlow_In() {
    //緩入動畫
    var ani_SlowIn = cc.tween(this.Mainobject).by(10, {
      angle: 360
    }, {
      easing: 'sineIn'
    }); //持續旋轉動畫

    var KeepTurn = cc.tween(this.Mainobject).by(5, {
      angle: 360
    }).repeatForever();
    this.ani_wheelState1 = cc.tween(this.Mainobject).then(ani_SlowIn).then(KeepTurn).start();
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/4._Q&A/程式碼/Guest2_Game.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dad24nwGSpLXoN5VdJLp2I3', 'Guest2_Game');
// 4._Q&A/程式碼/Guest2_Game.js

"use strict";

var gameModel = require("Model");

var Guest1_WaitingForQuestion = require("Guest1_WaitingForQuestion");

cc.Class({
  "extends": Guest1_WaitingForQuestion,
  properties: {
    Options: {
      "default": [],
      type: cc.Node
    },
    UnChooseOption: {
      "default": null,
      type: cc.SpriteFrame
    },
    WrongChoose: {
      "default": [],
      type: cc.SpriteFrame
    },
    Question: {
      "default": null,
      type: cc.Label
    }
  },
  onLoad: function onLoad() {
    this.ColorString = this.node.getComponent('ColorString');
    this.CurrentChoose = "";
    this.state = 0;
    gameModel.Answer = 3;
  },
  start: function start() {
    this.LightBlueColor = this.ColorString.colorOfString('#88FCFE'); //淺藍色

    this.DarkBlueColor = this.ColorString.colorOfString("#203E3E"); //深灰藍色

    this.GrayColor = this.ColorString.colorOfString("#515050"); //灰色

    this.WhiteColor = this.ColorString.colorOfString("#FFFFFF"); //白色 

    this.RedColor = this.ColorString.colorOfString("#FF1D1D"); //紅色 

    this.GreenColor = this.ColorString.colorOfString("#1DFF61"); //綠色 

    this.Question.string = gameModel.Question[gameModel.QuestionCount];
    this.UpdateRankScore();

    for (var i = 0; i < 4; i++) //更新選項文字
    {
      this.Options[i].getChildByName("選項文字").getComponent(cc.Label).string = gameModel.Options[i];
      this.OpacityAni(this.Options[i].getChildByName("選項文字"));
      this.OpacityAni(this.Options[i].getChildByName("選項字母"));
    }
  },
  ChooseOptions: function ChooseOptions(event, customEventData) {
    if (gameModel.GameStatusMessage == "end" || this.CurrentChoose == customEventData) return;

    for (var i = 0; i < 4; i++) //更新選項圖片
    {
      this.CurrentChoose = customEventData;
      this.Options[i].color = i == customEventData ? this.WhiteColor : this.GrayColor;

      if (i == customEventData) {
        this.OpacityAni(this.Options[i].getChildByName("外框燈"));
        this.Options[i].getChildByName("外框燈").getComponent(sp.Skeleton).setAnimation(0, "Lightflicker", false);
        var self = this.Options[i];
        this.scheduleOnce(function () {
          self.getChildByName("外框燈").getComponent(sp.Skeleton).timeScale = 1;
          self.getChildByName("外框燈").getComponent(sp.Skeleton).setAnimation(0, "lightning", true);
        }, 1);
      } else this.Options[i].getChildByName("外框燈").opacity = 0;

      this.Options[i].getChildByName("選項字母").color = this.Options[i].getChildByName("選項文字").color = i == customEventData ? this.LightBlueColor : this.DarkBlueColor;
    }
  },
  ShowAnswer: function ShowAnswer() {
    gameModel.GameStatusMessage = "end";
  },
  OpacityAni: function OpacityAni(node) {
    node.opacity = 0;
    cc.tween(node).to(0.3, {
      opacity: 255
    }).start();
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "end" && this.state == 0) {
      this.state = 1;

      for (var i = 0; i < 4; i++) //更新選項正確還錯誤
      {
        if (i == gameModel.Answer) {
          this.Options[i].color = this.WhiteColor;
          this.Options[i].getComponent(sp.Skeleton).setAnimation(0, "right", false);
          this.Options[i].getChildByName("選項文字").color = this.Options[i].getChildByName("選項字母").color = this.Options[i].getChildByName("外框燈").color = this.GreenColor;
          this.OpacityAni(this.Options[i].getChildByName("選項文字"));
          this.OpacityAni(this.Options[i].getChildByName("選項字母"));
        } else if (i != gameModel.Answer && this.CurrentChoose == "") {
          this.Options[i].getChildByName("選項文字").color = this.Options[i].getChildByName("選項字母").color = this.DarkBlueColor;
          this.Options[i].color = this.GrayColor;
        }
      }

      if (this.CurrentChoose != gameModel.Answer && this.CurrentChoose != "") {
        this.Options[this.CurrentChoose].getComponent(sp.Skeleton).setAnimation(0, "Wrong", false);
        this.Options[this.CurrentChoose].getChildByName("選項文字").color = this.Options[this.CurrentChoose].getChildByName("選項字母").color = this.Options[this.CurrentChoose].getChildByName("外框燈").color = this.RedColor;
      } else this.Score.string = gameModel.Score + 1;
    } else if (gameModel.GameStatusMessage == "next" && this.state == 1) cc.director.loadScene("WaitingQuestion");
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNC5fUSZBXFznqIvlvI/norxcXEd1ZXN0Ml9HYW1lLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJHdWVzdDFfV2FpdGluZ0ZvclF1ZXN0aW9uIiwiY2MiLCJDbGFzcyIsInByb3BlcnRpZXMiLCJPcHRpb25zIiwidHlwZSIsIk5vZGUiLCJVbkNob29zZU9wdGlvbiIsIlNwcml0ZUZyYW1lIiwiV3JvbmdDaG9vc2UiLCJRdWVzdGlvbiIsIkxhYmVsIiwib25Mb2FkIiwiQ29sb3JTdHJpbmciLCJub2RlIiwiZ2V0Q29tcG9uZW50IiwiQ3VycmVudENob29zZSIsInN0YXRlIiwiQW5zd2VyIiwic3RhcnQiLCJMaWdodEJsdWVDb2xvciIsImNvbG9yT2ZTdHJpbmciLCJEYXJrQmx1ZUNvbG9yIiwiR3JheUNvbG9yIiwiV2hpdGVDb2xvciIsIlJlZENvbG9yIiwiR3JlZW5Db2xvciIsInN0cmluZyIsIlF1ZXN0aW9uQ291bnQiLCJVcGRhdGVSYW5rU2NvcmUiLCJpIiwiZ2V0Q2hpbGRCeU5hbWUiLCJPcGFjaXR5QW5pIiwiQ2hvb3NlT3B0aW9ucyIsImV2ZW50IiwiY3VzdG9tRXZlbnREYXRhIiwiR2FtZVN0YXR1c01lc3NhZ2UiLCJjb2xvciIsInNwIiwiU2tlbGV0b24iLCJzZXRBbmltYXRpb24iLCJzZWxmIiwic2NoZWR1bGVPbmNlIiwidGltZVNjYWxlIiwib3BhY2l0eSIsIlNob3dBbnN3ZXIiLCJ0d2VlbiIsInRvIiwidXBkYXRlIiwiZHQiLCJTY29yZSIsImRpcmVjdG9yIiwibG9hZFNjZW5lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBQ0EsSUFBSUMseUJBQXlCLEdBQUdELE9BQU8sQ0FBQywyQkFBRCxDQUF2Qzs7QUFFQUUsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRix5QkFESjtBQUdMRyxFQUFBQSxVQUFV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RCxNQUFoRCxFQUF3RE0sS0FBeEQsR0FBZ0UsS0FBS2pDLE9BQUwsQ0FBYSxLQUFLWSxhQUFsQixFQUFpQ2UsY0FBakMsQ0FBZ0QsS0FBaEQsRUFBdURNLEtBQXZELEdBQThELEtBQUtaLFFBQW5NO0FBQ0gsT0FKRCxNQUtLLEtBQUt5QixLQUFMLENBQVd2QixNQUFYLEdBQW9CN0IsU0FBUyxDQUFDb0QsS0FBVixHQUFrQixDQUF0QztBQUNSLEtBMUJELE1BMkJLLElBQUdwRCxTQUFTLENBQUNzQyxpQkFBVixJQUErQixNQUEvQixJQUF5QyxLQUFLbkIsS0FBTCxJQUFjLENBQTFELEVBQTZEaEIsRUFBRSxDQUFDa0QsUUFBSCxDQUFZQyxTQUFaLENBQXNCLGlCQUF0QjtBQUNyRTtBQWpISSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2FtZU1vZGVsID0gcmVxdWlyZShcIk1vZGVsXCIpO1xyXG52YXIgR3Vlc3QxX1dhaXRpbmdGb3JRdWVzdGlvbiA9IHJlcXVpcmUoXCJHdWVzdDFfV2FpdGluZ0ZvclF1ZXN0aW9uXCIpO1xyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogR3Vlc3QxX1dhaXRpbmdGb3JRdWVzdGlvbixcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgT3B0aW9ucyA6e1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBbXSxcclxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIFVuQ2hvb3NlT3B0aW9uIDp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLlNwcml0ZUZyYW1lXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgV3JvbmdDaG9vc2UgOntcclxuICAgICAgICAgICAgZGVmYXVsdDogW10sXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLlNwcml0ZUZyYW1lXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgUXVlc3Rpb24gOntcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLkNvbG9yU3RyaW5nID0gdGhpcy5ub2RlLmdldENvbXBvbmVudCgnQ29sb3JTdHJpbmcnKVxyXG4gICAgICAgIHRoaXMuQ3VycmVudENob29zZSA9IFwiXCJcclxuICAgICAgICB0aGlzLnN0YXRlID0gMFxyXG4gICAgICAgIGdhbWVNb2RlbC5BbnN3ZXIgPSAzXHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgIHRoaXMuTGlnaHRCbHVlQ29sb3IgPSB0aGlzLkNvbG9yU3RyaW5nLmNvbG9yT2ZTdHJpbmcoJyM4OEZDRkUnKSAvL+a3uuiXjeiJslxyXG4gICAgICAgdGhpcy5EYXJrQmx1ZUNvbG9yID0gdGhpcy5Db2xvclN0cmluZy5jb2xvck9mU3RyaW5nKFwiIzIwM0UzRVwiKSAvL+a3seeBsOiXjeiJslxyXG4gICAgICAgdGhpcy5HcmF5Q29sb3IgPSB0aGlzLkNvbG9yU3RyaW5nLmNvbG9yT2ZTdHJpbmcoXCIjNTE1MDUwXCIpIC8v54Gw6ImyXHJcbiAgICAgICB0aGlzLldoaXRlQ29sb3IgPSB0aGlzLkNvbG9yU3RyaW5nLmNvbG9yT2ZTdHJpbmcoXCIjRkZGRkZGXCIpIC8v55m96ImyIFxyXG4gICAgICAgdGhpcy5SZWRDb2xvciA9IHRoaXMuQ29sb3JTdHJpbmcuY29sb3JPZlN0cmluZyhcIiNGRjFEMURcIikgLy/ntIXoibIgXHJcbiAgICAgICB0aGlzLkdyZWVuQ29sb3IgPSB0aGlzLkNvbG9yU3RyaW5nLmNvbG9yT2ZTdHJpbmcoXCIjMURGRjYxXCIpIC8v57ag6ImyIFxyXG4gICAgICAgdGhpcy5RdWVzdGlvbi5zdHJpbmcgPSBnYW1lTW9kZWwuUXVlc3Rpb25bZ2FtZU1vZGVsLlF1ZXN0aW9uQ291bnRdXHJcbiAgICAgICB0aGlzLlVwZGF0ZVJhbmtTY29yZSgpO1xyXG4gICAgICAgZm9yKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgLy/mm7TmlrDpgbjpoIXmloflrZdcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMuT3B0aW9uc1tpXS5nZXRDaGlsZEJ5TmFtZShcIumBuOmgheaWh+Wtl1wiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IGdhbWVNb2RlbC5PcHRpb25zW2ldO1xyXG4gICAgICAgICAgICB0aGlzLk9wYWNpdHlBbmkodGhpcy5PcHRpb25zW2ldLmdldENoaWxkQnlOYW1lKFwi6YG46aCF5paH5a2XXCIpKVxyXG4gICAgICAgICAgICB0aGlzLk9wYWNpdHlBbmkodGhpcy5PcHRpb25zW2ldLmdldENoaWxkQnlOYW1lKFwi6YG46aCF5a2X5q+NXCIpKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG5cclxuICAgIENob29zZU9wdGlvbnMoZXZlbnQsIGN1c3RvbUV2ZW50RGF0YSl7XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiZW5kXCIgfHwgdGhpcy5DdXJyZW50Q2hvb3NlID09IGN1c3RvbUV2ZW50RGF0YSkgcmV0dXJuO1xyXG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCA0OyBpKyspIC8v5pu05paw6YG46aCF5ZyW54mHXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLkN1cnJlbnRDaG9vc2UgPSBjdXN0b21FdmVudERhdGFcclxuICAgICAgICAgICAgdGhpcy5PcHRpb25zW2ldLmNvbG9yID0gaSA9PSBjdXN0b21FdmVudERhdGEgPyB0aGlzLldoaXRlQ29sb3IgOiB0aGlzLkdyYXlDb2xvcjtcclxuICAgICAgICAgICAgaWYoaSA9PSBjdXN0b21FdmVudERhdGEpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuT3BhY2l0eUFuaSh0aGlzLk9wdGlvbnNbaV0uZ2V0Q2hpbGRCeU5hbWUoXCLlpJbmoYbnh4hcIikpXHJcbiAgICAgICAgICAgICAgICB0aGlzLk9wdGlvbnNbaV0uZ2V0Q2hpbGRCeU5hbWUoXCLlpJbmoYbnh4hcIikuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKS5zZXRBbmltYXRpb24oMCxcIkxpZ2h0ZmxpY2tlclwiLGZhbHNlKTsgXHJcbiAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXMuT3B0aW9uc1tpXVxyXG4gICAgICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoZnVuY3Rpb24oKSB7IFxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZ2V0Q2hpbGRCeU5hbWUoXCLlpJbmoYbnh4hcIikuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKS50aW1lU2NhbGUgPSAxXHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXRDaGlsZEJ5TmFtZShcIuWkluahhueHiFwiKS5nZXRDb21wb25lbnQoc3AuU2tlbGV0b24pLnNldEFuaW1hdGlvbigwLFwibGlnaHRuaW5nXCIsdHJ1ZSk7IFxyXG4gICAgICAgICAgICAgICAgfSwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB0aGlzLk9wdGlvbnNbaV0uZ2V0Q2hpbGRCeU5hbWUoXCLlpJbmoYbnh4hcIikub3BhY2l0eSA9IDBcclxuICAgICAgICAgICAgdGhpcy5PcHRpb25zW2ldLmdldENoaWxkQnlOYW1lKFwi6YG46aCF5a2X5q+NXCIpLmNvbG9yID0gdGhpcy5PcHRpb25zW2ldLmdldENoaWxkQnlOYW1lKFwi6YG46aCF5paH5a2XXCIpLmNvbG9yID0gaSA9PSBjdXN0b21FdmVudERhdGEgPyB0aGlzLkxpZ2h0Qmx1ZUNvbG9yIDogdGhpcy5EYXJrQmx1ZUNvbG9yXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBTaG93QW5zd2VyKCl7XHJcbiAgICAgICAgZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID0gXCJlbmRcIlxyXG4gICAgfSxcclxuXHJcbiAgICAgICAgXHJcbiAgICBPcGFjaXR5QW5pKG5vZGUpe1xyXG4gICAgICAgIG5vZGUub3BhY2l0eSA9IDBcclxuICAgICAgICBjYy50d2Vlbihub2RlKVxyXG4gICAgICAgIC50bygwLjMsIHtvcGFjaXR5OiAyNTV9KVxyXG4gICAgICAgIC5zdGFydCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICB1cGRhdGUgKGR0KSB7XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwiZW5kXCIgJiYgdGhpcy5zdGF0ZSA9PSAwKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IDFcclxuICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgLy/mm7TmlrDpgbjpoIXmraPnorrpgoTpjK/oqqRcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIGlmKGkgPT0gZ2FtZU1vZGVsLkFuc3dlcikgXHJcbiAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5PcHRpb25zW2ldLmNvbG9yID0gdGhpcy5XaGl0ZUNvbG9yXHJcbiAgICAgICAgICAgICAgICB0aGlzLk9wdGlvbnNbaV0uZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKS5zZXRBbmltYXRpb24oMCxcInJpZ2h0XCIsZmFsc2UpOyBcclxuICAgICAgICAgICAgICAgIHRoaXMuT3B0aW9uc1tpXS5nZXRDaGlsZEJ5TmFtZShcIumBuOmgheaWh+Wtl1wiKS5jb2xvciA9IHRoaXMuT3B0aW9uc1tpXS5nZXRDaGlsZEJ5TmFtZShcIumBuOmgheWtl+avjVwiKS5jb2xvciA9IHRoaXMuT3B0aW9uc1tpXS5nZXRDaGlsZEJ5TmFtZShcIuWkluahhueHiFwiKS5jb2xvciA9IHRoaXMuR3JlZW5Db2xvclxyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuT3BhY2l0eUFuaSh0aGlzLk9wdGlvbnNbaV0uZ2V0Q2hpbGRCeU5hbWUoXCLpgbjpoIXmloflrZdcIikpXHJcbiAgICAgICAgICAgICAgICB0aGlzLk9wYWNpdHlBbmkodGhpcy5PcHRpb25zW2ldLmdldENoaWxkQnlOYW1lKFwi6YG46aCF5a2X5q+NXCIpKVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBlbHNlIGlmKChpICE9IGdhbWVNb2RlbC5BbnN3ZXIpICYmIHRoaXMuQ3VycmVudENob29zZSA9PSBcIlwiKVxyXG4gICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuT3B0aW9uc1tpXS5nZXRDaGlsZEJ5TmFtZShcIumBuOmgheaWh+Wtl1wiKS5jb2xvciA9IHRoaXMuT3B0aW9uc1tpXS5nZXRDaGlsZEJ5TmFtZShcIumBuOmgheWtl+avjVwiKS5jb2xvciA9IHRoaXMuRGFya0JsdWVDb2xvclxyXG4gICAgICAgICAgICAgICAgdGhpcy5PcHRpb25zW2ldLmNvbG9yID0gdGhpcy5HcmF5Q29sb3JcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYodGhpcy5DdXJyZW50Q2hvb3NlICE9IGdhbWVNb2RlbC5BbnN3ZXIgJiYgdGhpcy5DdXJyZW50Q2hvb3NlICE9IFwiXCIpIFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLk9wdGlvbnNbdGhpcy5DdXJyZW50Q2hvb3NlXS5nZXRDb21wb25lbnQoc3AuU2tlbGV0b24pLnNldEFuaW1hdGlvbigwLFwiV3JvbmdcIixmYWxzZSk7IFxyXG4gICAgICAgICAgICAgICAgdGhpcy5PcHRpb25zW3RoaXMuQ3VycmVudENob29zZV0uZ2V0Q2hpbGRCeU5hbWUoXCLpgbjpoIXmloflrZdcIikuY29sb3IgPSB0aGlzLk9wdGlvbnNbdGhpcy5DdXJyZW50Q2hvb3NlXS5nZXRDaGlsZEJ5TmFtZShcIumBuOmgheWtl+avjVwiKS5jb2xvciA9IHRoaXMuT3B0aW9uc1t0aGlzLkN1cnJlbnRDaG9vc2VdLmdldENoaWxkQnlOYW1lKFwi5aSW5qGG54eIXCIpLmNvbG9yID10aGlzLlJlZENvbG9yXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB0aGlzLlNjb3JlLnN0cmluZyA9IGdhbWVNb2RlbC5TY29yZSArIDE7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBlbHNlIGlmKGdhbWVNb2RlbC5HYW1lU3RhdHVzTWVzc2FnZSA9PSBcIm5leHRcIiAmJiB0aGlzLnN0YXRlID09IDEpIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIldhaXRpbmdRdWVzdGlvblwiKVxyXG4gICAgfSxcclxuXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/4._Q&A/程式碼/Guest1_WaitingForQuestion.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c2bd3wUqZlDsIwM6v+H0Fa5', 'Guest1_WaitingForQuestion');
// 4._Q&A/程式碼/Guest1_WaitingForQuestion.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {
    Rank: {
      "default": null,
      type: cc.Label
    },
    Score: {
      "default": null,
      type: cc.Label
    },
    Time: {
      "default": null,
      type: cc.Label
    }
  },
  onLoad: function onLoad() {},
  start: function start() {
    this.UpdateRankScore();
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "start") cc.director.loadScene("Guest2_Answer");
  },
  UpdateRankScore: function UpdateRankScore() {
    this.Rank.string = gameModel.Rank;
    this.Score.string = gameModel.Score;
    this.Time.string = gameModel.gametimelimit;
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNC5fUSZBXFznqIvlvI/norxcXEd1ZXN0MV9XYWl0aW5nRm9yUXVlc3Rpb24uanMiXSwibmFtZXMiOlsiZ2FtZU1vZGVsIiwicmVxdWlyZSIsImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiUmFuayIsInR5cGUiLCJMYWJlbCIsIlNjb3JlIiwiVGltZSIsIm9uTG9hZCIsInN0YXJ0IiwiVXBkYXRlUmFua1Njb3JlIiwidXBkYXRlIiwiZHQiLCJHYW1lU3RhdHVzTWVzc2FnZSIsImRpcmVjdG9yIiwibG9hZFNjZW5lIiwic3RyaW5nIiwiZ2FtZXRpbWVsaW1pdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXZCOztBQUVBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFDO0FBQ0QsaUJBQVMsSUFEUjtBQUVEQyxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGUixLQURHO0FBTVJDLElBQUFBLEtBQUssRUFBQztBQUNGLGlCQUFTLElBRFA7QUFFRkYsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRlAsS0FORTtBQVdSRSxJQUFBQSxJQUFJLEVBQUM7QUFDRCxpQkFBUyxJQURSO0FBRURILE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZSO0FBWEcsR0FIUDtBQXNCTEcsRUFBQUEsTUF0Qkssb0JBc0JLLENBQ1QsQ0F2Qkk7QUF5QkxDLEVBQUFBLEtBekJLLG1CQXlCSTtBQUNMLFNBQUtDLGVBQUw7QUFDSCxHQTNCSTtBQTZCTEMsRUFBQUEsTUE3Qkssa0JBNkJHQyxFQTdCSCxFQTZCTztBQUNSLFFBQUdmLFNBQVMsQ0FBQ2dCLGlCQUFWLElBQStCLE9BQWxDLEVBQTJDZCxFQUFFLENBQUNlLFFBQUgsQ0FBWUMsU0FBWixDQUFzQixlQUF0QjtBQUM5QyxHQS9CSTtBQWlDTEwsRUFBQUEsZUFqQ0ssNkJBaUNZO0FBQ2IsU0FBS1AsSUFBTCxDQUFVYSxNQUFWLEdBQW1CbkIsU0FBUyxDQUFDTSxJQUE3QjtBQUNBLFNBQUtHLEtBQUwsQ0FBV1UsTUFBWCxHQUFvQm5CLFNBQVMsQ0FBQ1MsS0FBOUI7QUFDQSxTQUFLQyxJQUFMLENBQVVTLE1BQVYsR0FBbUJuQixTQUFTLENBQUNvQixhQUE3QjtBQUNIO0FBckNJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcblxyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIFJhbms6e1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5MYWJlbFxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIFNjb3JlOntcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWxcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBUaW1lOntcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWxcclxuICAgICAgICB9LFxyXG5cclxuICAgIH0sXHJcblxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICB0aGlzLlVwZGF0ZVJhbmtTY29yZSgpO1xyXG4gICAgfSxcclxuXHJcbiAgICB1cGRhdGUgKGR0KSB7XHJcbiAgICAgICAgaWYoZ2FtZU1vZGVsLkdhbWVTdGF0dXNNZXNzYWdlID09IFwic3RhcnRcIikgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR3Vlc3QyX0Fuc3dlclwiKVxyXG4gICAgfSxcclxuXHJcbiAgICBVcGRhdGVSYW5rU2NvcmUoKXtcclxuICAgICAgICB0aGlzLlJhbmsuc3RyaW5nID0gZ2FtZU1vZGVsLlJhbms7XHJcbiAgICAgICAgdGhpcy5TY29yZS5zdHJpbmcgPSBnYW1lTW9kZWwuU2NvcmU7XHJcbiAgICAgICAgdGhpcy5UaW1lLnN0cmluZyA9IGdhbWVNb2RlbC5nYW1ldGltZWxpbWl0O1xyXG4gICAgfSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/4._Q&A/程式碼/Host3_RankRecordItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd675baYGPBGOqmNjozupxfo', 'Host3_RankRecordItem');
// 4._Q&A/程式碼/Host3_RankRecordItem.js

"use strict";

var gameModel = require("Model"); ///即時中獎玩家資訊物件js


cc.Class({
  "extends": cc.Component,
  properties: {
    playerName: {
      "default": null,
      type: cc.Label
    },
    Score: {
      "default": null,
      type: cc.Label
    },
    Time: {
      "default": null,
      type: cc.Label
    },
    playerAvatar: {
      "default": null,
      type: cc.Sprite
    },
    Rank: {
      "default": null,
      type: cc.Label
    }
  },
  onLoad: function onLoad() {},
  updateInfo: function updateInfo(i) {
    var self = this;
    this.playerName.string = gameModel.winner_name[i];
    this.Score.string = gameModel.winner_score[i];
    this.Time.string = gameModel.winner_Taketime;
    if (i > 3) this.Rank.string = i + 1; //遠端載入: 網址轉圖片

    cc.assetManager.loadRemote(gameModel.winner_picture[i], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.playerAvatar.spriteFrame = picture;
      }
    });
  },
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNC5fUSZBXFznqIvlvI/norxcXEhvc3QzX1JhbmtSZWNvcmRJdGVtLmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInBsYXllck5hbWUiLCJ0eXBlIiwiTGFiZWwiLCJTY29yZSIsIlRpbWUiLCJwbGF5ZXJBdmF0YXIiLCJTcHJpdGUiLCJSYW5rIiwib25Mb2FkIiwidXBkYXRlSW5mbyIsImkiLCJzZWxmIiwic3RyaW5nIiwid2lubmVyX25hbWUiLCJ3aW5uZXJfc2NvcmUiLCJ3aW5uZXJfVGFrZXRpbWUiLCJhc3NldE1hbmFnZXIiLCJsb2FkUmVtb3RlIiwid2lubmVyX3BpY3R1cmUiLCJleHQiLCJlcnIiLCJ0ZXh0dXJlIiwiY29uc29sZSIsImxvZyIsInBpY3R1cmUiLCJTcHJpdGVGcmFtZSIsInNwcml0ZUZyYW1lIiwic3RhcnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUF2QixFQUVBOzs7QUFDQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLFVBQVUsRUFBRTtBQUNWLGlCQUFTLElBREM7QUFFVkMsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRkMsS0FERjtBQUtWQyxJQUFBQSxLQUFLLEVBQUU7QUFDTCxpQkFBUyxJQURKO0FBRUxGLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZKLEtBTEc7QUFTVkUsSUFBQUEsSUFBSSxFQUFFO0FBQ0osaUJBQVMsSUFETDtBQUVKSCxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGTCxLQVRJO0FBYVZHLElBQUFBLFlBQVksRUFBRTtBQUNaLGlCQUFTLElBREc7QUFFWkosTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNVO0FBRkcsS0FiSjtBQWlCVkMsSUFBQUEsSUFBSSxFQUFFO0FBQ0osaUJBQVMsSUFETDtBQUVKTixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGTDtBQWpCSSxHQUhQO0FBMkJMTSxFQUFBQSxNQTNCSyxvQkEyQkssQ0FBRSxDQTNCUDtBQTZCTEMsRUFBQUEsVUE3Qkssc0JBNkJNQyxDQTdCTixFQTZCUTtBQUNULFFBQUlDLElBQUksR0FBRyxJQUFYO0FBQ0EsU0FBS1gsVUFBTCxDQUFnQlksTUFBaEIsR0FBeUJsQixTQUFTLENBQUNtQixXQUFWLENBQXNCSCxDQUF0QixDQUF6QjtBQUNBLFNBQUtQLEtBQUwsQ0FBV1MsTUFBWCxHQUFvQmxCLFNBQVMsQ0FBQ29CLFlBQVYsQ0FBdUJKLENBQXZCLENBQXBCO0FBQ0EsU0FBS04sSUFBTCxDQUFVUSxNQUFWLEdBQW1CbEIsU0FBUyxDQUFDcUIsZUFBN0I7QUFDQSxRQUFHTCxDQUFDLEdBQUcsQ0FBUCxFQUFVLEtBQUtILElBQUwsQ0FBVUssTUFBVixHQUFtQkYsQ0FBQyxHQUFHLENBQXZCLENBTEQsQ0FNVDs7QUFDQ2QsSUFBQUEsRUFBRSxDQUFDb0IsWUFBSCxDQUFnQkMsVUFBaEIsQ0FBMkJ2QixTQUFTLENBQUN3QixjQUFWLENBQXlCUixDQUF6QixDQUEzQixFQUF1RDtBQUFDUyxNQUFBQSxHQUFHLEVBQUUsVUFBUTtBQUFkLEtBQXZELEVBQTZFLFVBQVNDLEdBQVQsRUFBYUMsT0FBYixFQUM3RTtBQUNJLFVBQUdELEdBQUgsRUFBUUUsT0FBTyxDQUFDQyxHQUFSLENBQVksSUFBWixFQUFSLEtBRUE7QUFDSSxZQUFJQyxPQUFPLEdBQUcsSUFBSTVCLEVBQUUsQ0FBQzZCLFdBQVAsQ0FBbUJKLE9BQW5CLENBQWQsQ0FESixDQUMrQzs7QUFDM0NWLFFBQUFBLElBQUksQ0FBQ04sWUFBTCxDQUFrQnFCLFdBQWxCLEdBQWdDRixPQUFoQztBQUNIO0FBQ0gsS0FSRjtBQVNKLEdBN0NJO0FBOENMRyxFQUFBQSxLQTlDSyxtQkE4Q0ksQ0FBRSxDQTlDTixDQWdETDs7QUFoREssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuXHJcbi8vL+WNs+aZguS4reeNjueOqeWutuizh+ioiueJqeS7tmpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgIHBsYXllck5hbWU6IHtcclxuICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgIHR5cGU6IGNjLkxhYmVsXHJcbiAgICAgIH0sXHJcbiAgICAgIFNjb3JlOiB7XHJcbiAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICB0eXBlOiBjYy5MYWJlbFxyXG4gICAgICB9LFxyXG4gICAgICBUaW1lOiB7XHJcbiAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICB0eXBlOiBjYy5MYWJlbFxyXG4gICAgICB9LFxyXG4gICAgICBwbGF5ZXJBdmF0YXI6IHtcclxuICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgIHR5cGU6IGNjLlNwcml0ZVxyXG4gICAgICB9LFxyXG4gICAgICBSYW5rOiB7XHJcbiAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICB0eXBlOiBjYy5MYWJlbFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIFxyXG5cclxuICAgIG9uTG9hZCAoKSB7fSxcclxuXHJcbiAgICB1cGRhdGVJbmZvKGkpeyBcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXJOYW1lLnN0cmluZyA9IGdhbWVNb2RlbC53aW5uZXJfbmFtZVtpXTtcclxuICAgICAgICB0aGlzLlNjb3JlLnN0cmluZyA9IGdhbWVNb2RlbC53aW5uZXJfc2NvcmVbaV1cclxuICAgICAgICB0aGlzLlRpbWUuc3RyaW5nID0gZ2FtZU1vZGVsLndpbm5lcl9UYWtldGltZVxyXG4gICAgICAgIGlmKGkgPiAzKSB0aGlzLlJhbmsuc3RyaW5nID0gaSArIDFcclxuICAgICAgICAvL+mBoOerr+i8ieWFpTog57ay5Z2A6L2J5ZyW54mHXHJcbiAgICAgICAgIGNjLmFzc2V0TWFuYWdlci5sb2FkUmVtb3RlKGdhbWVNb2RlbC53aW5uZXJfcGljdHVyZVtpXSx7ZXh0IDonLmpwZyd8fCcucG5nJ30sZnVuY3Rpb24oZXJyLHRleHR1cmUpXHJcbiAgICAgICAgIHsgXHJcbiAgICAgICAgICAgICBpZihlcnIpIGNvbnNvbGUubG9nKFwi6Yyv6KqkXCIpXHJcbiAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgdmFyIHBpY3R1cmUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7IC8vdGV4dHVyZSDovYkgU3ByaXRlRnJhbWVcclxuICAgICAgICAgICAgICAgICBzZWxmLnBsYXllckF2YXRhci5zcHJpdGVGcmFtZSA9IHBpY3R1cmU7XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBzdGFydCAoKSB7fSxcclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/5_lottery/程式/Jiugongge.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1f984c5Uq5KJIQsmVPFSs2c', 'Jiugongge');
// 5_lottery/程式/Jiugongge.js

"use strict";

var gameModel = require("Model");

var WinnerItem = require("Host1_Congratulations");

var Jiugongge_Prize_information = require("prizeInformation");

var Guest_Prize = require("Guest1_PrizeInformation");

cc.Class({
  "extends": cc.Component,
  properties: {
    CannotTouch: {
      "default": null,
      type: cc.Node
    },
    Prize: {
      "default": null,
      type: cc.Node
    },
    items: {
      "default": null,
      type: cc.Prefab
    },
    items_parent: {
      "default": null,
      type: cc.Node
    },
    AlretNode: {
      "default": null,
      type: cc.Node
    },
    Jiugongge_sound: {
      "default": [],
      type: cc.AudioClip
    },
    Jiugongge_Ani: {
      "default": null,
      type: cc.Node
    },
    Prizes_Infor: {
      "default": null,
      type: cc.Node
    },
    GObuttun: {
      "default": null,
      type: cc.Node
    },
    Steam: {
      "default": null,
      type: cc.Node
    },
    Title: {
      "default": null,
      type: cc.Node
    },
    Lightning: {
      "default": null,
      type: cc.Node
    },
    prize_picture: {
      "default": null,
      type: cc.Node
    },
    ChanceText: {
      "default": null,
      type: cc.Label
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    gameModel.Prize_Infromation();
    gameModel.Game_js = this;
    this.speed = 0.06;
    this.cycle = 0;
    this.lotterymessage = false;
    this.Prize_ID = 0;
    this.count = 0;
    this.playing = false;
    this.index = 0;
    this.indexprize = [];
    this.itemlist = [];
    this.indexcount = 0;
    this.prizenode = this.Prize.getChildByName("得獎懸浮窗");
    this.GamePrizeInfor = cc.find("畫布").getComponent(Guest_Prize);
    this.ThanksJoin = [];
    this.alreadyLottery = false;
  },
  start: function start() {
    if (gameModel.role == "guest") {
      this.ChanceText.string = gameModel.chance;
      gameModel.mode = "simultaneous";
    } else gameModel.mode = "order";

    this.AlertText = this.AlretNode.getChildByName("警告文字").getComponent(cc.Label);
  },
  //開始時更新獎品資訊
  SpawnPrize: function SpawnPrize() {
    for (var i = 0; i < gameModel.Prizestack_id.length; i++) {
      if (gameModel.Prizestack_id[i] == "") this.ThanksJoin.push(i);
      this.Prizes_Infor.children[i].getChildByName("獎品名稱").getComponent(cc.Label).string = gameModel.Prizestack_name[i];
      var Prize_Image = this.Prizes_Infor.children[i].getChildByName("獎品照片框").getChildByName("遮罩").getChildByName("獎品照片").getComponent(Jiugongge_Prize_information);
      Prize_Image.setinformation(i);
    }
  },
  //按下開始鍵
  startAction: function startAction() {
    if (gameModel.CannotJoinGame != "") {
      this.AlertText.string = "沒有獎品了，無法抽獎，請主持人新增獎品後重新刷新頁面";
      this.AlretNode.active = true;
      return;
    }

    if (this.playing == true || gameModel.mode != "order" && gameModel.role == "host") return;

    if (gameModel.role == "guest") {
      if (gameModel.chance == 0) {
        this.AlertText.string = "沒有抽獎機會了，無法抽獎";
        this.AlretNode.active = true;
        return;
      } else {
        if (gameModel.AllowRePrize == "close" && gameModel.PrizeStaffs.length > 0) {
          this.AlertText.string = "錯誤 :該場次遊戲不允許重複中獎，您已中獎，無法參加遊戲抽獎";
          this.AlretNode.active = true;
          return;
        } else {
          gameModel.chance--;
          this.ChanceText.string = gameModel.chance;
        }
      }
    }

    this.CannotTouch.active = true;
    this.playing = true;
    this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "Rotate", true);

    this.GoAni = function () {
      if (this.count == this.cycle * 8 + this.Prize_ID && this.lotterymessage) //到了指定禮物，取消轉動
        {
          this.unschedule(this.GoAni);
          this.ControlAni();
          this.count = this.Prize_ID;
          this.index = this.Prize_ID;
          this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 1;
          this.alreadyLottery = false;
          this.scheduleOnce(function () {
            this.JudgePrize_type();
          }, 0.5);
        } else if (this.count >= this.cycle * 8 && this.count < this.cycle * 8 + this.Prize_ID && this.lotterymessage || this.count < 5) //最後一圈和起步 速度/8
        {
          this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 3;
          this.ControlAni();
          this.unschedule(this.GoAni);
          this.schedule(this.GoAni, this.speed * 8);
        } else if (this.count >= 5 && this.count <= 12) //起步後第一階段加速 速度/3
        {
          this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 4;
          this.ControlAni();
          this.unschedule(this.GoAni);
          this.schedule(this.GoAni, this.speed * 3);
        } else if (this.count > 12 && this.count < 20) //起步後第二階段加速 速度
        {
          this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 10;
          this.ControlAni();
          this.unschedule(this.GoAni);
          this.schedule(this.GoAni, this.speed);
        } else if (this.count >= (this.cycle - 2) * 8 && this.count < (this.cycle - 1) * 8) //倒數第3圈 速度/2
        {
          this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 7;
          this.ControlAni();
          this.unschedule(this.GoAni);
          this.schedule(this.GoAni, this.speed * 2);
        } else if (this.count >= (this.cycle - 1) * 8 && this.count < this.cycle * 8) //倒數第2圈 速度/5
        {
          this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 5;
          this.ControlAni();
          this.unschedule(this.GoAni);
          this.schedule(this.GoAni, this.speed * 5);
        } else //加速完成，最高轉速 速度*2
        {
          this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 15;
          this.ControlAni();
          if (this.alreadyLottery == true) return;
          this.alreadyLottery = true;
          this.scheduleOnce(function () {
            gameModel.Lottery_Guest();
          }, 3);
        }
    };

    this.schedule(this.GoAni, this.speed);
  },
  //中獎
  lettorey: function lettorey() {
    if (gameModel.CannotJoinGame != "") {
      this.unschedule(this.GoAni);
      this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 1;
      this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "Broken", false);
      this.Title.getComponent(sp.Skeleton).setAnimation(0, "Broken", false);

      if (cc.director.getScene()._name.includes("Host")) {
        this.Lightning.getComponent(sp.Skeleton).setAnimation(0, "PC", true);
        this.Steam.getComponent(sp.Skeleton).setAnimation(0, "Broken_PC", true);
        this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[7], false, 0.7);
      } else {
        this.Lightning.getComponent(sp.Skeleton).setAnimation(0, "Phone", true);
        this.Steam.getComponent(sp.Skeleton).setAnimation(0, "Broken_M", true);
      }

      this.scheduleOnce(function () {
        this.AlertText.string = "沒有獎品了，無法抽獎，請主持人新增獎品後重新刷新頁面";
        this.AlretNode.active = true;
      }, 1.2);
      return;
    }

    this.cycle = Math.ceil(this.count / 8) + 4;

    for (var i = 0; i < gameModel.Prizestack_id.length; i++) {
      if (gameModel.prize_ID != "" && gameModel.Prizestack_id[i] == gameModel.prize_ID) this.Prize_ID = i;else if (gameModel.prize_ID == "") {
        var randomIndex = Math.floor(Math.random() * this.ThanksJoin.length); //隨機獎品

        this.Prize_ID = this.ThanksJoin[randomIndex];
      }
    }

    this.lotterymessage = true;
  },
  //判斷獎品等級
  JudgePrize_type: function JudgePrize_type() {
    if (gameModel.prize_type == "first") {
      this.Title.getComponent(sp.Skeleton).setAnimation(0, "A1", false);

      if (cc.director.getScene()._name.includes("Host")) {
        this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "1_PC", false);
        this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[1], false, 0.5);
      } else this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "1_Phone", false);

      this.GObuttun.getComponent(sp.Skeleton).setAnimation(0, "Roll_Open", false);
    } else if (gameModel.prize_type == "second") {
      this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "A2", false);
      this.GObuttun.getComponent(sp.Skeleton).setAnimation(0, "Open", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[2], false, 1);
    } else if (gameModel.prize_type == "third") {
      this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "A3", false);
      this.GObuttun.getComponent(sp.Skeleton).setAnimation(0, "Open", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[3], false, 1);
    } else if (gameModel.prize_type == "special") {
      this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "A4", false);
      this.GObuttun.getComponent(sp.Skeleton).setAnimation(0, "Open", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[4], false, 1);
    } else if (gameModel.prize_type == "thanks") {
      this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "A5", false);
      this.GObuttun.getComponent(sp.Skeleton).setAnimation(0, "Open", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[5], false, 1);
    }

    if (gameModel.role == "guest" && gameModel.prize_type != "thanks") this.GamePrizeInfor.SpawnPrize();
    this.scheduleOnce(function () {
      this.ShowPrize();
    }, 2);
  },
  //跳出獎品視窗
  ShowPrize: function ShowPrize() {
    var self = this;
    cc.assetManager.loadRemote(gameModel.prize_picture, {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.prize_picture.getComponent(cc.Sprite).spriteFrame = picture;
      }
    });
    this.Prize.getChildByName("得獎懸浮窗").getChildByName("獎項").getComponent(cc.Label).string = gameModel.prize_name_guest;
    this.Prize.getChildByName("得獎懸浮窗").getChildByName("哭臉").active = gameModel.prize_type == "thanks" ? true : false;
    this.Prize.getChildByName("得獎懸浮窗").getChildByName("得獎_中央圖標").active = gameModel.prize_type == "thanks" ? false : true;
    this.Prize.active = true;
    this.PrizeAni();
    this.lotterymessage = false;
    this.playing = false;
    this.cycle = 0;
    this.CannotTouch.active = false;
    if (gameModel.role == "host" && gameModel.prize_type != "thanks") this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[6], false, 1);
    if (gameModel.mode != "order" || gameModel.role == "guest" || gameModel.prize_type == "thanks") return;
    this.Congratulations();
  },
  //獎品動畫
  PrizeAni: function PrizeAni() {
    this.lotterymessage = false;
    this.playing = false;
    cc.tween(this.prizenode).to(1, {
      scale: 1
    }, {
      easing: "elasticOut"
    }).start();
  },
  //依序參與時新增中獎獎項
  Congratulations: function Congratulations() {
    this.indexcount++;
    this.indexprize.push(this.indexcount);
    var node = cc.instantiate(this.items);
    node.parent = this.items_parent;
    node.setSiblingIndex(0); //讓子物件顯示在最上層

    var obj = node.getComponent(WinnerItem); //抓取WinnerItem

    this.itemlist.push(obj);
    this.itemlist[this.indexcount - 1].updateInfo(this.indexcount - 1);
  },
  //關閉特定視窗
  closeFuc: function closeFuc(event, customEventData) {
    if (customEventData == "prize") {
      this.Prize.active = false;
      this.ClearJiugonggeEffect();
    } else if (customEventData == "alret" && gameModel.CannotJoinGame == "") this.AlretNode.active = false;

    this.prizenode.scale = (0, 0);
  },
  //清除九宮格特效
  ClearJiugonggeEffect: function ClearJiugonggeEffect() {
    this.Jiugongge_Ani.getComponent(sp.Skeleton).setAnimation(0, "usual", true);
    this.GObuttun.getComponent(sp.Skeleton).setAnimation(0, "Usual", false);
    this.Lightning.getComponent(sp.Skeleton).setAnimation(0, "usual", true);
    if (gameModel.role == "guest") this.Title.getComponent(sp.Skeleton).setAnimation(0, "usual_Phone", true);else this.Title.getComponent(sp.Skeleton).setAnimation(0, "usual_PC", true);
  },
  //九宮格格子動畫
  ControlAni: function ControlAni() {
    if (gameModel.role == "host" && gameModel.mode == "order") this.currentsound = cc.audioEngine.play(this.Jiugongge_sound[0], false, 0.2);
    this.Prizes_Infor.children[(this.index + 8 - 1) % 8].getChildByName("沒選上遮罩").active = true;
    this.index = this.index % 8;
    this.Prizes_Infor.children[this.index].getChildByName("沒選上遮罩").active = false;
    this.index++;
    this.count++;
  },
  //同時參與主持人動畫
  TogetherAni: function TogetherAni() {
    this.GoTogetherAni = function () {
      this.Jiugongge_Ani.getComponent(sp.Skeleton).timeScale = 1;
      this.ControlAni();
    };

    this.schedule(this.GoTogetherAni, this.speed * 8);
  },
  //清除格子狀態
  ClearStatus: function ClearStatus() {
    this.count = 0;
    this.index = 0;
    this.unscheduleAllCallbacks();

    for (var i = 0; i < 8; i++) {
      this.Prizes_Infor.children[i].getChildByName("沒選上遮罩").active = true;
    }
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "close" && gameModel.role == "guest") {
      this.AlertText.string = "請等待主辦方開啟同時參與模式才能進行遊戲";
      this.AlretNode.active = true;
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/5_lottery/程式/prizeInformation.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '409dcppUFVAl6bepj90o461', 'prizeInformation');
// 5_lottery/程式/prizeInformation.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  start: function start() {},
  setinformation: function setinformation(i) {
    var self = this;
    cc.assetManager.loadRemote(gameModel.Prizestack_picture[i], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.node.getComponent(cc.Sprite).spriteFrame = picture;
      }
    });
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNV9sb3R0ZXJ5XFznqIvlvI9cXHByaXplSW5mb3JtYXRpb24uanMiXSwibmFtZXMiOlsiZ2FtZU1vZGVsIiwicmVxdWlyZSIsImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwic3RhcnQiLCJzZXRpbmZvcm1hdGlvbiIsImkiLCJzZWxmIiwiYXNzZXRNYW5hZ2VyIiwibG9hZFJlbW90ZSIsIlByaXplc3RhY2tfcGljdHVyZSIsImV4dCIsImVyciIsInRleHR1cmUiLCJjb25zb2xlIiwibG9nIiwicGljdHVyZSIsIlNwcml0ZUZyYW1lIiwibm9kZSIsImdldENvbXBvbmVudCIsIlNwcml0ZSIsInNwcml0ZUZyYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBR0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBT0w7QUFFQTtBQUVBQyxFQUFBQSxLQVhLLG1CQVdJLENBRVIsQ0FiSTtBQWdCTEMsRUFBQUEsY0FoQkssMEJBZ0JVQyxDQWhCVixFQWdCWTtBQUNiLFFBQUlDLElBQUksR0FBRyxJQUFYO0FBQ0FQLElBQUFBLEVBQUUsQ0FBQ1EsWUFBSCxDQUFnQkMsVUFBaEIsQ0FBMkJYLFNBQVMsQ0FBQ1ksa0JBQVYsQ0FBNkJKLENBQTdCLENBQTNCLEVBQTJEO0FBQUNLLE1BQUFBLEdBQUcsRUFBRSxVQUFRO0FBQWQsS0FBM0QsRUFBaUYsVUFBU0MsR0FBVCxFQUFhQyxPQUFiLEVBQ2pGO0FBQ0ksVUFBR0QsR0FBSCxFQUFRRSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxJQUFaLEVBQVIsS0FFQTtBQUNJLFlBQUlDLE9BQU8sR0FBRyxJQUFJaEIsRUFBRSxDQUFDaUIsV0FBUCxDQUFtQkosT0FBbkIsQ0FBZCxDQURKLENBQytDOztBQUMzQ04sUUFBQUEsSUFBSSxDQUFDVyxJQUFMLENBQVVDLFlBQVYsQ0FBdUJuQixFQUFFLENBQUNvQixNQUExQixFQUFrQ0MsV0FBbEMsR0FBZ0RMLE9BQWhEO0FBQ0g7QUFDSixLQVJEO0FBU0gsR0EzQkksQ0E2Qkw7O0FBN0JLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnYW1lTW9kZWwgPSByZXF1aXJlKFwiTW9kZWxcIik7XHJcblxyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIC8vIG9uTG9hZCAoKSB7fSxcclxuXHJcbiAgICBzdGFydCAoKSB7XHJcblxyXG4gICAgfSxcclxuXHJcbiAgICBcclxuICAgIHNldGluZm9ybWF0aW9uKGkpe1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICBjYy5hc3NldE1hbmFnZXIubG9hZFJlbW90ZShnYW1lTW9kZWwuUHJpemVzdGFja19waWN0dXJlW2ldLHtleHQgOicuanBnJ3x8Jy5wbmcnfSxmdW5jdGlvbihlcnIsdGV4dHVyZSlcclxuICAgICAgICB7IFxyXG4gICAgICAgICAgICBpZihlcnIpIGNvbnNvbGUubG9nKFwi6Yyv6KqkXCIpXHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBpY3R1cmUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7IC8vdGV4dHVyZSDovYkgU3ByaXRlRnJhbWVcclxuICAgICAgICAgICAgICAgIHNlbGYubm9kZS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHBpY3R1cmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/TEST/NewScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6d0efRnsChM6Jd1eAmnyvDU', 'NewScript');
// TEST/NewScript.js

"use strict";

var gameModel = require("Model");

cc.Class({
  "extends": cc.Component,
  properties: {
    Ingame: {
      "default": null,
      type: cc.Node
    },
    Fake: {
      "default": null,
      type: cc.SpriteFrame
    },
    Real: {
      "default": null,
      type: cc.SpriteFrame
    },
    Score: {
      "default": null,
      type: cc.Label
    },
    items: {
      "default": null,
      type: cc.Prefab
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.pos = this.Ingame.position;
    gameModel.TopTitle = "無";
    cc.director.getCollisionManager().enabled = true;
    this.randomNodeIndex = 1;
    this.items_parent = cc.find("畫布");
    gameModel.score = 0;
  },
  start: function start() {
    this.node.on('touchmove', this.move, this);
    this.node.on('touchend', this.end, this);
    this.node.on('touchcancel', this.end, this);
    this.pos = this.Ingame.position;
    console.log(this.pos);
  },
  move: function move(event) {
    var pos = new cc.Vec2(event.getLocationX(), event.getLocationY());
    pos = this.node.convertToNodeSpaceAR(pos);
    this.Ingame.position = pos;
  },
  end: function end() {
    if (gameModel.TopTitle == "加分") {
      gameModel.score = this.randomNodeIndex > 0 ? gameModel.score + 1 : gameModel.score - 3;
      if (gameModel.score < 0) gameModel.score = 0;
      this.Score.string = "分數: " + gameModel.score;
      this.ADDanii(this.Ingame);
      this.reset();
      console.log("加分");
    } else if (gameModel.TopTitle == "扣分") {
      this.Mani(this.Ingame);
      this.reset();
      console.log("扣分");
    } else if (gameModel.TopTitle == "無") this.Ingame.position = this.pos;
  },
  reset: function reset() {
    gameModel.TopTitle = "無";
    this.randomNodeIndex = Math.floor(Math.random() * 5);
    console.log(this.randomNodeIndex);
    var node = cc.instantiate(this.items);
    node.getComponent(cc.Sprite).spriteFrame = this.randomNodeIndex == 0 ? this.Fake : this.Real;
    node.parent = this.items_parent;
    this.Ingame = node;
    this.Ingame.position = this.pos;
  },
  ADDanii: function ADDanii(node) {
    cc.tween(node).to(0.5, {
      position: cc.v2(0, 667.876),
      scale: 0
    }).call(function () {
      node.destroy();
    }).start();
  },
  Mani: function Mani(node) {
    cc.tween(node).to(0.1, {
      position: cc.v2(0, -1771.968)
    }).call(function () {
      node.destroy();
    }).start();
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcVEVTVFxcTmV3U2NyaXB0LmpzIl0sIm5hbWVzIjpbImdhbWVNb2RlbCIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIkluZ2FtZSIsInR5cGUiLCJOb2RlIiwiRmFrZSIsIlNwcml0ZUZyYW1lIiwiUmVhbCIsIlNjb3JlIiwiTGFiZWwiLCJpdGVtcyIsIlByZWZhYiIsIm9uTG9hZCIsInBvcyIsInBvc2l0aW9uIiwiVG9wVGl0bGUiLCJkaXJlY3RvciIsImdldENvbGxpc2lvbk1hbmFnZXIiLCJlbmFibGVkIiwicmFuZG9tTm9kZUluZGV4IiwiaXRlbXNfcGFyZW50IiwiZmluZCIsInNjb3JlIiwic3RhcnQiLCJub2RlIiwib24iLCJtb3ZlIiwiZW5kIiwiY29uc29sZSIsImxvZyIsImV2ZW50IiwiVmVjMiIsImdldExvY2F0aW9uWCIsImdldExvY2F0aW9uWSIsImNvbnZlcnRUb05vZGVTcGFjZUFSIiwic3RyaW5nIiwiQUREYW5paSIsInJlc2V0IiwiTWFuaSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImluc3RhbnRpYXRlIiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwic3ByaXRlRnJhbWUiLCJwYXJlbnQiLCJ0d2VlbiIsInRvIiwidjIiLCJzY2FsZSIsImNhbGwiLCJkZXN0cm95Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkI7O0FBRUFDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxNQUFNLEVBQUU7QUFDSixpQkFBUyxJQURMO0FBRUpDLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZMLEtBREE7QUFNUkMsSUFBQUEsSUFBSSxFQUFDO0FBQ0QsaUJBQVMsSUFEUjtBQUVERixNQUFBQSxJQUFJ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O0FBNEZMZSxFQUFBQSxJQTVGSyxnQkE0RkFkLElBNUZBLEVBNEZLO0FBQ04xQixJQUFBQSxFQUFFLENBQUNpRCxLQUFILENBQVN2QixJQUFULEVBQ0N3QixFQURELENBQ0ksR0FESixFQUNRO0FBQUVsQyxNQUFBQSxRQUFRLEVBQUVoQixFQUFFLENBQUNtRCxFQUFILENBQU0sQ0FBTixFQUFTLENBQUMsUUFBVjtBQUFaLEtBRFIsRUFFQ0UsSUFGRCxDQUVNLFlBQU07QUFBQzNCLE1BQUFBLElBQUksQ0FBQzRCLE9BQUw7QUFBZ0IsS0FGN0IsRUFHQzdCLEtBSEQ7QUFJSCxHQWpHSSxDQWtHTDs7QUFsR0ssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgSW5nYW1lOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLk5vZGVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBGYWtlOntcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuU3ByaXRlRnJhbWVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBSZWFsOntcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuU3ByaXRlRnJhbWVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBTY29yZTp7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkxhYmVsXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgaXRlbXM6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICAgICAgdHlwZTogY2MuUHJlZmFiXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLnBvcyA9IHRoaXMuSW5nYW1lLnBvc2l0aW9uXHJcbiAgICAgICAgZ2FtZU1vZGVsLlRvcFRpdGxlID0gXCLnhKFcIlxyXG4gICAgICAgIGNjLmRpcmVjdG9yLmdldENvbGxpc2lvbk1hbmFnZXIoKS5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJhbmRvbU5vZGVJbmRleCA9IDFcclxuICAgICAgICB0aGlzLml0ZW1zX3BhcmVudCA9IGNjLmZpbmQoXCLnlavluINcIilcclxuICAgICAgICBnYW1lTW9kZWwuc2NvcmUgPSAwXHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICB0aGlzLm5vZGUub24oJ3RvdWNobW92ZScsIHRoaXMubW92ZSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9uKCd0b3VjaGVuZCcsIHRoaXMuZW5kLCB0aGlzKTtcclxuICAgICAgICB0aGlzLm5vZGUub24oJ3RvdWNoY2FuY2VsJyx0aGlzLmVuZCwgdGhpcylcclxuICAgICAgICB0aGlzLnBvcyA9IHRoaXMuSW5nYW1lLnBvc2l0aW9uXHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5wb3MpXHJcbiAgICB9LFxyXG5cclxuICAgIG1vdmUoZXZlbnQpe1xyXG4gICAgICAgdmFyIHBvcyA9IG5ldyBjYy5WZWMyKGV2ZW50LmdldExvY2F0aW9uWCgpLGV2ZW50LmdldExvY2F0aW9uWSgpKSBcclxuICAgICAgIHBvcyA9IHRoaXMubm9kZS5jb252ZXJ0VG9Ob2RlU3BhY2VBUihwb3MpXHJcbiAgICAgICB0aGlzLkluZ2FtZS5wb3NpdGlvbiA9IHBvc1xyXG4gICAgfSxcclxuXHJcbiAgICBlbmQoKXtcclxuICAgICAgICAgaWYoZ2FtZU1vZGVsLlRvcFRpdGxlID09IFwi5Yqg5YiGXCIpIFxyXG4gICAgICAgICB7XHJcbiAgICAgICAgICAgIGdhbWVNb2RlbC5zY29yZSA9IHRoaXMucmFuZG9tTm9kZUluZGV4ID4gMCA/IGdhbWVNb2RlbC5zY29yZSArIDEgOiBnYW1lTW9kZWwuc2NvcmUgLSAzXHJcbiAgICAgICAgICAgIGlmKGdhbWVNb2RlbC5zY29yZSA8IDApIGdhbWVNb2RlbC5zY29yZSA9IDBcclxuICAgICAgICAgICAgdGhpcy5TY29yZS5zdHJpbmcgPSBcIuWIhuaVuDogXCIgKyBnYW1lTW9kZWwuc2NvcmVcclxuICAgICAgICAgICAgdGhpcy5BRERhbmlpKHRoaXMuSW5nYW1lKVxyXG4gICAgICAgICAgICB0aGlzLnJlc2V0KCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Yqg5YiGXCIpXHJcbiAgICAgICAgIH1cclxuICAgICAgICAgZWxzZSBpZihnYW1lTW9kZWwuVG9wVGl0bGUgPT0gXCLmiaPliIZcIikgXHJcbiAgICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5NYW5pKHRoaXMuSW5nYW1lKTtcclxuICAgICAgICAgICAgdGhpcy5yZXNldCgpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaJo+WIhlwiKVxyXG4gICAgICAgICB9XHJcbiAgICAgICAgIGVsc2UgaWYoZ2FtZU1vZGVsLlRvcFRpdGxlID09IFwi54ShXCIpIHRoaXMuSW5nYW1lLnBvc2l0aW9uID0gdGhpcy5wb3NcclxuICAgIH0sXHJcblxyXG4gICAgcmVzZXQoKXtcclxuICAgICAgICBnYW1lTW9kZWwuVG9wVGl0bGUgPSBcIueEoVwiXHJcbiAgICAgICAgdGhpcy5yYW5kb21Ob2RlSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KVxyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMucmFuZG9tTm9kZUluZGV4KVxyXG4gICAgICAgIHZhciBub2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy5pdGVtcyk7XHJcbiAgICAgICAgbm9kZS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHRoaXMucmFuZG9tTm9kZUluZGV4ID09IDAgPyB0aGlzLkZha2UgOiB0aGlzLlJlYWxcclxuICAgICAgICBub2RlLnBhcmVudCA9IHRoaXMuaXRlbXNfcGFyZW50O1xyXG4gICAgICAgIHRoaXMuSW5nYW1lID0gbm9kZVxyXG4gICAgICAgIHRoaXMuSW5nYW1lLnBvc2l0aW9uID0gdGhpcy5wb3NcclxuICAgIH0sXHJcblxyXG4gICAgQUREYW5paShub2RlKXtcclxuICAgICAgICBjYy50d2Vlbihub2RlKVxyXG4gICAgICAgIC50bygwLjUseyBwb3NpdGlvbjogY2MudjIoMCwgNjY3Ljg3Niksc2NhbGU6IDB9KVxyXG4gICAgICAgIC5jYWxsKCgpID0+IHtub2RlLmRlc3Ryb3koKTt9KVxyXG4gICAgICAgIC5zdGFydCgpXHJcbiAgICB9LFxyXG5cclxuICAgIE1hbmkobm9kZSl7XHJcbiAgICAgICAgY2MudHdlZW4obm9kZSlcclxuICAgICAgICAudG8oMC4xLHsgcG9zaXRpb246IGNjLnYyKDAsIC0xNzcxLjk2OCl9KVxyXG4gICAgICAgIC5jYWxsKCgpID0+IHtub2RlLmRlc3Ryb3koKTt9KVxyXG4gICAgICAgIC5zdGFydCgpXHJcbiAgICB9LFxyXG4gICAgLy8gdXBkYXRlIChkdCkge30sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/5_lottery/程式/Host1_Congratulations.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '613f4QghntKYon8kxwB9vBH', 'Host1_Congratulations');
// 5_lottery/程式/Host1_Congratulations.js

"use strict";

var gameModel = require("Model"); ///即時中獎玩家資訊物件js


cc.Class({
  "extends": cc.Component,
  properties: {
    prizeName: {
      "default": null,
      type: cc.Label
    },
    prizeAvatar: {
      "default": null,
      type: cc.Sprite
    }
  },
  updateInfo: function updateInfo(i) {
    var self = this;
    this.prizeName.string = "恭喜獲得 " + gameModel.prize_name_guest; //遠端載入: 網址轉圖片

    cc.assetManager.loadRemote(gameModel.Prizestack_picture[i], {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.prizeAvatar.spriteFrame = picture;
      }
    });
  },
  onLoad: function onLoad() {},
  start: function start() {} // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcNV9sb3R0ZXJ5XFznqIvlvI9cXEhvc3QxX0NvbmdyYXR1bGF0aW9ucy5qcyJdLCJuYW1lcyI6WyJnYW1lTW9kZWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJwcml6ZU5hbWUiLCJ0eXBlIiwiTGFiZWwiLCJwcml6ZUF2YXRhciIsIlNwcml0ZSIsInVwZGF0ZUluZm8iLCJpIiwic2VsZiIsInN0cmluZyIsInByaXplX25hbWVfZ3Vlc3QiLCJhc3NldE1hbmFnZXIiLCJsb2FkUmVtb3RlIiwiUHJpemVzdGFja19waWN0dXJlIiwiZXh0IiwiZXJyIiwidGV4dHVyZSIsImNvbnNvbGUiLCJsb2ciLCJwaWN0dXJlIiwiU3ByaXRlRnJhbWUiLCJzcHJpdGVGcmFtZSIsIm9uTG9hZCIsInN0YXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBdkIsRUFFQTs7O0FBQ0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUVSQyxJQUFBQSxTQUFTLEVBQUU7QUFDUCxpQkFBUSxJQUREO0FBRVBDLE1BQUFBLElBQUksRUFBQ0wsRUFBRSxDQUFDTTtBQUZELEtBRkg7QUFNUkMsSUFBQUEsV0FBVyxFQUFDO0FBQ1IsaUJBQVEsSUFEQTtBQUVSRixNQUFBQSxJQUFJLEVBQUNMLEVBQUUsQ0FBQ1E7QUFGQTtBQU5KLEdBSFA7QUFlTEMsRUFBQUEsVUFmSyxzQkFlTUMsQ0FmTixFQWVRO0FBQ1QsUUFBSUMsSUFBSSxHQUFHLElBQVg7QUFDQSxTQUFLUCxTQUFMLENBQWVRLE1BQWYsR0FBd0IsVUFBVWQsU0FBUyxDQUFDZSxnQkFBNUMsQ0FGUyxDQUdUOztBQUNDYixJQUFBQSxFQUFFLENBQUNjLFlBQUgsQ0FBZ0JDLFVBQWhCLENBQTJCakIsU0FBUyxDQUFDa0Isa0JBQVYsQ0FBNkJOLENBQTdCLENBQTNCLEVBQTJEO0FBQUNPLE1BQUFBLEdBQUcsRUFBRSxVQUFRO0FBQWQsS0FBM0QsRUFBaUYsVUFBU0MsR0FBVCxFQUFhQyxPQUFiLEVBQ2pGO0FBQ0ksVUFBR0QsR0FBSCxFQUFRRSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxJQUFaLEVBQVIsS0FFQTtBQUNJLFlBQUlDLE9BQU8sR0FBRyxJQUFJdEIsRUFBRSxDQUFDdUIsV0FBUCxDQUFtQkosT0FBbkIsQ0FBZCxDQURKLENBQytDOztBQUMzQ1IsUUFBQUEsSUFBSSxDQUFDSixXQUFMLENBQWlCaUIsV0FBakIsR0FBK0JGLE9BQS9CO0FBQ0g7QUFDSCxLQVJGO0FBU0osR0E1Qkk7QUE4QkxHLEVBQUFBLE1BOUJLLG9CQThCSyxDQUFFLENBOUJQO0FBZ0NMQyxFQUFBQSxLQWhDSyxtQkFnQ0ksQ0FBRSxDQWhDTixDQWtDTDs7QUFsQ0ssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdhbWVNb2RlbCA9IHJlcXVpcmUoXCJNb2RlbFwiKTtcclxuXHJcbi8vL+WNs+aZguS4reeNjueOqeWutuizh+ioiueJqeS7tmpzXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcblxyXG4gICAgICAgIHByaXplTmFtZToge1xyXG4gICAgICAgICAgICBkZWZhdWx0Om51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6Y2MuTGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHByaXplQXZhdGFyOntcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsLFxyXG4gICAgICAgICAgICB0eXBlOmNjLlNwcml0ZVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICB1cGRhdGVJbmZvKGkpeyBcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5wcml6ZU5hbWUuc3RyaW5nID0gXCLmga3llpznjbLlvpcgXCIgKyBnYW1lTW9kZWwucHJpemVfbmFtZV9ndWVzdDtcclxuICAgICAgICAvL+mBoOerr+i8ieWFpTog57ay5Z2A6L2J5ZyW54mHXHJcbiAgICAgICAgIGNjLmFzc2V0TWFuYWdlci5sb2FkUmVtb3RlKGdhbWVNb2RlbC5Qcml6ZXN0YWNrX3BpY3R1cmVbaV0se2V4dCA6Jy5qcGcnfHwnLnBuZyd9LGZ1bmN0aW9uKGVycix0ZXh0dXJlKVxyXG4gICAgICAgICB7IFxyXG4gICAgICAgICAgICAgaWYoZXJyKSBjb25zb2xlLmxvZyhcIumMr+iqpFwiKVxyXG4gICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgIHZhciBwaWN0dXJlID0gbmV3IGNjLlNwcml0ZUZyYW1lKHRleHR1cmUpOyAvL3RleHR1cmUg6L2JIFNwcml0ZUZyYW1lXHJcbiAgICAgICAgICAgICAgICAgc2VsZi5wcml6ZUF2YXRhci5zcHJpdGVGcmFtZSA9IHBpY3R1cmU7XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkICgpIHt9LFxyXG5cclxuICAgIHN0YXJ0ICgpIHt9LFxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/5_lottery/程式/weel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '231fb6ZVWNN944v7V0dlDwZ', 'weel');
// 5_lottery/程式/weel.js

"use strict";

var gameModel = require("Model");

var Wheel_Prize_information = require("prizeInformation");

var WinnerItem = require("Host1_Congratulations");

var Guest_Prize = require("Guest1_PrizeInformation");

cc.Class({
  "extends": cc.Component,
  properties: {
    wheel: {
      "default": null,
      type: cc.Node
    },
    wheel_out: {
      "default": null,
      type: cc.Node
    },
    Title: {
      "default": null,
      type: cc.Node
    },
    TopLight: {
      "default": null,
      type: cc.Node
    },
    Nail: {
      "default": null,
      type: cc.Node
    },
    wheel_out_Light: {
      "default": null,
      type: cc.Node
    },
    Prize: {
      "default": null,
      type: cc.Node
    },
    ChanceText: {
      "default": null,
      type: cc.Label
    },
    AlretNode: {
      "default": null,
      type: cc.Node
    },
    cannnottouch: {
      "default": null,
      type: cc.Node
    },
    Prizes_Infor: {
      "default": null,
      type: cc.Node
    },
    items: {
      "default": null,
      type: cc.Prefab
    },
    items_parent: {
      "default": null,
      type: cc.Node
    },
    Steam: {
      "default": null,
      type: cc.Node
    },
    wheel_sound: {
      "default": [],
      type: cc.AudioClip
    },
    prize_picture: {
      "default": null,
      type: cc.Node
    }
  },
  onLoad: function onLoad() {
    gameModel.Game_js = this;
    gameModel.Prize_Infromation();
    this.indexcount = 0;
    this.index = [];
    this.itemlist = [];
    this.Prize_total = 8;
    this.wheelState = 0;
    this.Prize_ID = 0;
    this.IDAngle = 360 / this.Prize_total; //每个編號的角度

    this.Prize_Angle = 0; //得獎獎品的角度

    this.prizenode = this.Prize.getChildByName("得獎懸浮窗");
    this.Wheel_Prize = cc.find("畫布/輪盤/輪盤_內/獎項");
    this.GamePrizeInfor = cc.find("畫布").getComponent(Guest_Prize);
    this.ThanksJoin = [];
  },
  start: function start() {
    if (gameModel.role == "guest") {
      this.ChanceText.string = gameModel.chance;
      gameModel.mode = "simultaneous";
    } else gameModel.mode = "order";

    this.AlertText = this.AlretNode.getChildByName("警告文字").getComponent(cc.Label);
  },
  SpawnPrize: function SpawnPrize() {
    for (var i = 0; i < gameModel.Prizestack_id.length; i++) {
      if (gameModel.Prizestack_id[i] == "") this.ThanksJoin.push(i);
      this.Prizes_Infor.children[i].getComponent(cc.Label).string = gameModel.Prizestack_name[i];
      var Prize_Image = this.Prizes_Infor.children[i].getChildByName("獎品照片框").getChildByName("遮罩").getChildByName("獎品照片").getComponent(Wheel_Prize_information);
      Prize_Image.setinformation(i);
    }
  },
  //按下開始遊戲鍵，重置參數
  StartBtn: function StartBtn() {
    if (gameModel.CannotJoinGame != "") {
      this.AlertText.string = "沒有獎品了，無法抽獎，請主持人新增獎品後重新刷新頁面";
      this.AlretNode.active = true;
      return;
    }

    if (this.wheelState !== 0 || gameModel.mode != "order" && gameModel.role == "host") return;

    if (gameModel.role == "guest") {
      if (gameModel.chance == 0) {
        this.AlertText.string = "沒有抽獎機會了，無法抽獎";
        this.AlretNode.active = true;
        return;
      } else {
        if (gameModel.AllowRePrize == "close" && gameModel.PrizeStaffs.length > 0) {
          this.AlertText.string = "錯誤 :該場次遊戲不允許重複中獎，您已中獎，無法參加遊戲抽獎";
          this.AlretNode.active = true;
          return;
        } else {
          gameModel.chance--;
          this.ChanceText.string = gameModel.chance;
        }
      }
    }

    if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.wheel_sound[0], false, 1);
    this.cannnottouch.active = true;
    this.wheelState = 1;
    this.aniSlow_In();
  },
  //輪盤加速，緩入動作
  aniSlow_In: function aniSlow_In() {
    var _this = this;

    this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "Rotate", true);
    this.wheel_out_Light.getComponent(sp.Skeleton).timeScale = 5; //緩入動畫

    var ani_SlowIn = cc.tween(this.wheel).by(2, {
      angle: 360
    }, {
      easing: 'circIn'
    }).call(function () {
      _this.wheel_out_Light.getComponent(sp.Skeleton).timeScale = 10;
    }); //持續旋轉動畫

    var KeepTurn = cc.tween(this.wheel).by(0.35, {
      angle: 360
    }).repeatForever();
    this.ani_wheelState1 = cc.tween(this.wheel).then(ani_SlowIn).then(KeepTurn).start();

    if (gameModel.role == "host") {
      this.scheduleOnce(function () {
        this.currentsound = cc.audioEngine.play(this.wheel_sound[1], true, 1);
      }, 2);
    }

    this.scheduleOnce(function () {
      gameModel.Lottery_Guest();
    }, 5);
  },
  //獎品資訊送達
  lettorey: function lettorey() {
    if (gameModel.role == "host") cc.audioEngine.pauseAllEffects();

    if (gameModel.CannotJoinGame != "") {
      this.wheel_out_Light.getComponent(sp.Skeleton).timeScale = 1;
      this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "5", false);
      this.wheel_out.getComponent(sp.Skeleton).setAnimation(0, "Broken", true);
      this.Title.getComponent(sp.Skeleton).setAnimation(0, "Broken", false);
      this.Nail.getComponent(sp.Skeleton).setAnimation(0, "Broken", false);

      if (cc.director.getScene()._name.includes("Host")) {
        this.Steam.getComponent(sp.Skeleton).setAnimation(0, "Broken_PC", true);
        this.currentsound = cc.audioEngine.play(this.wheel_sound[9], false, 0.7);
      } else this.Steam.getComponent(sp.Skeleton).setAnimation(0, "Broken_M", false);

      this.scheduleOnce(function () {
        this.AlertText.string = "沒有獎品了，無法抽獎，請主持人新增獎品後重新刷新頁面";
        this.AlretNode.active = true;
        this.ani_wheelState1.stop();
        this.wheel.rotation = 0;
      }, 1.2);
      return;
    }

    for (var i = 0; i < gameModel.Prizestack_id.length; i++) {
      if (gameModel.prize_ID != "" && gameModel.Prizestack_id[i] == gameModel.prize_ID) this.Prize_ID = i;else if (gameModel.prize_ID == "") {
        var randomIndex = Math.floor(Math.random() * this.ThanksJoin.length); //隨機獎品

        this.Prize_ID = this.ThanksJoin[randomIndex];
      }
    }

    if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.wheel_sound[2], false, 1);
    this.Prize_Angle = this.Prize_ID * this.IDAngle; //最終角度 = 360 - 目標編號 * 每個編號的角度

    this.FinalAngle = this.Prize_Angle + Math.floor(Math.random() * (this.IDAngle - (3 + 1)) + 3); //使指針不會每次都在格子中間

    this.wheelState = 2;
    this.aniSlow_Out();
  },
  //輪盤減速，緩出動作
  aniSlow_Out: function aniSlow_Out() {
    var self = this;
    this.ani_wheelState1.stop();
    var RandomEffect = Math.round(Math.random()); //隨機選擇緩出效果

    var StopEffect = RandomEffect == 1 ? "circOut" : "backOut"; //緩出效果

    var NewCircle = Math.ceil(this.wheel.angle / 360); //四捨五入的圈數

    var lerp = NewCircle * 360 - this.wheel.angle; //差值 = 四捨五入的圈數 * 360 - 目前角度

    this.wheel_out_Light.getComponent(sp.Skeleton).timeScale = 5; //緩出動畫

    cc.tween(this.wheel).by(5, {
      angle: 360 + lerp + self.FinalAngle
    }, {
      easing: StopEffect
    }).call(function () {
      self.StopWeel();
    }).start();
  },
  //輪盤停下，顯示獎品
  StopWeel: function StopWeel() {
    this.wheel_out_Light.getComponent(sp.Skeleton).timeScale = 1;

    if (gameModel.prize_type == "first") {
      this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "1", false);
      this.wheel_out.getComponent(sp.Skeleton).setAnimation(0, "Roll", false);
      this.Title.getComponent(sp.Skeleton).setAnimation(0, "Roll", false);
      this.Nail.getComponent(sp.Skeleton).setAnimation(0, "Roll", false);

      if (cc.director.getScene()._name.includes("Host")) {
        this.TopLight.getComponent(sp.Skeleton).setAnimation(0, "Roll_PC", false);
        this.currentsound = cc.audioEngine.play(this.wheel_sound[3], false, 0.5);
      } else this.TopLight.getComponent(sp.Skeleton).setAnimation(0, "Roll_M", false);
    } else if (gameModel.prize_type == "second") {
      this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "2", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.wheel_sound[4], false, 1);
    } else if (gameModel.prize_type == "third") {
      this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "3", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.wheel_sound[5], false, 1);
    } else if (gameModel.prize_type == "special") {
      this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "4", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.wheel_sound[6], false, 1);
    } else if (gameModel.prize_type == "thanks") {
      this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "5", false);
      if (gameModel.role == "host") this.currentsound = cc.audioEngine.play(this.wheel_sound[7], false, 1);
    }

    cc.tween(this.Wheel_Prize.children[this.Prize_ID].getChildByName("扇形")).to(0.3, {
      opacity: 255
    }).start();
    if (gameModel.role == "guest" && gameModel.prize_type != "thanks") this.GamePrizeInfor.SpawnPrize();
    this.scheduleOnce(function () {
      this.cannnottouch.active = false;
      this.ShowPrize();
    }, 2.3);
  },
  ClearWheelEffect: function ClearWheelEffect() {
    this.wheel_out_Light.getComponent(sp.Skeleton).setAnimation(0, "usual", true);
    this.wheel_out.getComponent(sp.Skeleton).clearTracks();
    this.Title.getComponent(sp.Skeleton).setAnimation(0, "Usuall", true);
    this.Nail.getComponent(sp.Skeleton).clearTracks();
    this.TopLight.getComponent(sp.Skeleton).setAnimation(0, "usual", false);
    this.Steam.getComponent(sp.Skeleton).setAnimation(0, "Usuall", false);
  },
  ShowPrize: function ShowPrize() {
    var self = this;
    cc.assetManager.loadRemote(gameModel.prize_picture, {
      ext: '.jpg' || '.png'
    }, function (err, texture) {
      if (err) console.log("錯誤");else {
        var picture = new cc.SpriteFrame(texture); //texture 轉 SpriteFrame

        self.prize_picture.getComponent(cc.Sprite).spriteFrame = picture;
      }
    });
    this.Prize.getChildByName("得獎懸浮窗").getChildByName("獎項").getComponent(cc.Label).string = gameModel.prize_name_guest;
    this.Prize.getChildByName("得獎懸浮窗").getChildByName("哭臉").active = gameModel.prize_type == "thanks" ? true : false;
    this.Prize.getChildByName("得獎懸浮窗").getChildByName("得獎_中央圖標").active = gameModel.prize_type == "thanks" ? false : true;
    this.Prize.active = true;
    this.PrizeAni();
    if (gameModel.role == "host" && gameModel.prize_type != "thanks") this.currentsound = cc.audioEngine.play(this.wheel_sound[8], false, 1);
    if (gameModel.mode != "order" || gameModel.role == "guest" || gameModel.prize_type == "thanks") return;
    this.Congratulations();
  },
  PrizeAni: function PrizeAni() {
    this.wheelState = 0;
    cc.tween(this.prizenode).to(1, {
      scale: 1
    }, {
      easing: "elasticOut"
    }).start();
  },
  Congratulations: function Congratulations() {
    this.indexcount++;
    this.index.push(this.indexcount);
    var node = cc.instantiate(this.items);
    node.parent = this.items_parent;
    node.setSiblingIndex(0); //讓子物件顯示在最上層

    var obj = node.getComponent(WinnerItem); //抓取WinnerItem

    this.itemlist.push(obj);
    this.itemlist[this.indexcount - 1].updateInfo(this.indexcount - 1);
  },
  //關閉特定視窗
  closeFuc: function closeFuc(event, customEventData) {
    if (customEventData == "prize") {
      this.Prize.active = false;
      this.ClearWheelEffect();
      this.Wheel_Prize.children[this.Prize_ID].getChildByName("扇形").opacity = 0;
    } else if (customEventData == "alret" && gameModel.CannotJoinGame == "") this.AlretNode.active = false;

    this.prizenode.scale = (0, 0);
  },
  update: function update(dt) {
    if (gameModel.GameStatusMessage == "close" && gameModel.role == "guest") {
      this.AlertText.string = "請等待主辦方開啟同時參與模式才能進行遊戲";
      this.AlretNode.active = true;
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/buffer/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/base64-js/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/ieee754/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/buffer/node_modules/isarray/index.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

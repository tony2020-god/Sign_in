{"version":3,"sources":["assets\\共用模塊\\備份\\Host1_QRC.js"],"names":["gameModel","require","cc","Class","Component","properties","start","qrcode","QRCode","QRErrorCorrectLevel","H","addData","activity_id","game_id","make","Graphics","node","getComponent","tileW","width","getModuleCount","tileH","height","row","col","isDark","fillColor","Color","BLACK","WHITE","w","Math","ceil","floor","h","rect","round","fill"],"mappings":";;;;;;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAvB,EAEA;;;AACAC,EAAE,CAACC,KAAH,CAAS;AACR,aAASD,EAAE,CAACE,SADJ;AAGRC,EAAAA,UAAU,EAAE,EAHJ;AAORC,EAAAA,KAPQ,mBAOA;AACP,QAAIC,MAAM,GAAG,IAAIC,MAAJ,CAAW,CAAC,CAAZ,EAAeC,mBAAmB,CAACC,CAAnC,CAAb;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAe,2DAA2DX,SAAS,CAACY,WAArE,GAAmF,WAAnF,GAAiGZ,SAAS,CAACa,OAA1H,EAFO,CAE6H;;AACpIN,IAAAA,MAAM,CAACO,IAAP,GAHO,CAGQ;;AACf,QAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBf,EAAE,CAACa,QAA1B,CAAf,CAJO,CAKP;;AACA,QAAIG,KAAK,GAAG,KAAKF,IAAL,CAAUG,KAAV,GAAkBZ,MAAM,CAACa,cAAP,EAA9B;AACA,QAAIC,KAAK,GAAG,KAAKL,IAAL,CAAUM,MAAV,GAAmBf,MAAM,CAACa,cAAP,EAA/B,CAPO,CAQP;;AACA,SAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGhB,MAAM,CAACa,cAAP,EAAxB,EAAiDG,GAAG,EAApD,EAAyD;AACxD,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGjB,MAAM,CAACa,cAAP,EAAxB,EAAiDI,GAAG,EAApD,EAAyD;AACxD,YAAIjB,MAAM,CAACkB,MAAP,CAAcF,GAAd,EAAmBC,GAAnB,CAAJ,EAA6BT,QAAQ,CAACW,SAAT,GAAqBxB,EAAE,CAACyB,KAAH,CAASC,KAA9B,CAA7B,KACKb,QAAQ,CAACW,SAAT,GAAqBxB,EAAE,CAACyB,KAAH,CAASE,KAA9B,CAFmD,CAGxD;;AACA,YAAIC,CAAC,GAAIC,IAAI,CAACC,IAAL,CAAU,CAACR,GAAG,GAAG,CAAP,IAAYN,KAAtB,IAA+Ba,IAAI,CAACE,KAAL,CAAWT,GAAG,GAAGN,KAAjB,CAAxC,CAJwD,CAIU;;AAClE,YAAIgB,CAAC,GAAIH,IAAI,CAACC,IAAL,CAAU,CAACT,GAAG,GAAG,CAAP,IAAYL,KAAtB,IAA+Ba,IAAI,CAACE,KAAL,CAAWV,GAAG,GAAGL,KAAjB,CAAxC,CALwD,CAKU;AACtD;;AACZH,QAAAA,QAAQ,CAACoB,IAAT,CAAcJ,IAAI,CAACK,KAAL,CAAWZ,GAAG,GAAGN,KAAjB,CAAd,EAAuCa,IAAI,CAACK,KAAL,CAAWb,GAAG,GAAGF,KAAjB,CAAvC,EAAgES,CAAhE,EAAmEI,CAAnE;AACAnB,QAAAA,QAAQ,CAACsB,IAAT,GARwD,CAQvC;AACjB;AACD;AACD,GA5BO,CA8BR;;AA9BQ,CAAT","sourceRoot":"/","sourcesContent":["var gameModel = require(\"Model\");\r\n\r\n///QRC生成\r\ncc.Class({\r\n\textends: cc.Component,\r\n\r\n\tproperties: {\r\n\r\n\t},\r\n\r\n\tstart() {\r\n\t\tvar qrcode = new QRCode(-1, QRErrorCorrectLevel.H); \r\n\t\tqrcode.addData(\"https://hilives.net/interact/game/redpack?activity_id=\" + gameModel.activity_id + \"&game_id=\" + gameModel.game_id); //需繪製QRC的網址\t\t\r\n\t\tqrcode.make(); //創造QRC\r\n\t\tvar Graphics = this.node.getComponent(cc.Graphics);\r\n\t\t// 計算QRC塊的長和高，調整QRC比例\r\n\t\tvar tileW = this.node.width / qrcode.getModuleCount();\r\n\t\tvar tileH = this.node.height / qrcode.getModuleCount();\r\n\t\t// 畫出QRC碼\r\n\t\tfor (var row = 0; row < qrcode.getModuleCount(); row ++) {\r\n\t\t\tfor (var col = 0; col < qrcode.getModuleCount(); col ++) {\r\n\t\t\t\tif (qrcode.isDark(row, col)) Graphics.fillColor = cc.Color.BLACK;\r\n\t\t\t\telse Graphics.fillColor = cc.Color.WHITE;\r\n\t\t\t\t//計算寬高    ※ceil : 向上取整數  floor : 向下取整數   round : 四捨五入取整數\r\n\t\t\t\tvar w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW)); //計算寬  \r\n\t\t\t\tvar h = (Math.ceil((row + 1) * tileW) - Math.floor(row * tileW)); //計算高\r\n                //繪製的地方 : 矩形(x: Math.round(col * tileW), y: Math.round(row * tileH), 寬: w, 高: h)\r\n\t\t\t\tGraphics.rect(Math.round(col * tileW), Math.round(row * tileH), w, h); \r\n\t\t\t\tGraphics.fill(); //填滿繪製的框框\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// update(dt) {},\r\n});"]}